import{c as bt,b as js,h as Xh,r as Le,j as ve,R as Vt,u as T0}from"./index-D5yokye4.js";import{P as oe,F as E0,f as I0}from"./faHome-BbMyYVQk.js";function k0(t,e){for(var n=0;n<e.length;n++){const r=e[n];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in t)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(t,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}var _0={};(function(){var t;function e(p){var g=0;return function(){return g<p.length?{done:!1,value:p[g++]}:{done:!0}}}var n=typeof Object.defineProperties=="function"?Object.defineProperty:function(p,g,w){return p==Array.prototype||p==Object.prototype||(p[g]=w.value),p};function r(p){p=[typeof globalThis=="object"&&globalThis,p,typeof window=="object"&&window,typeof self=="object"&&self,typeof bt=="object"&&bt];for(var g=0;g<p.length;++g){var w=p[g];if(w&&w.Math==Math)return w}throw Error("Cannot find global object")}var s=r(this);function o(p,g){if(g)e:{var w=s;p=p.split(".");for(var N=0;N<p.length-1;N++){var I=p[N];if(!(I in w))break e;w=w[I]}p=p[p.length-1],N=w[p],g=g(N),g!=N&&g!=null&&n(w,p,{configurable:!0,writable:!0,value:g})}}o("Symbol",function(p){function g(_){if(this instanceof g)throw new TypeError("Symbol is not a constructor");return new w(N+(_||"")+"_"+I++,_)}function w(_,k){this.h=_,n(this,"description",{configurable:!0,writable:!0,value:k})}if(p)return p;w.prototype.toString=function(){return this.h};var N="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",I=0;return g}),o("Symbol.iterator",function(p){if(p)return p;p=Symbol("Symbol.iterator");for(var g="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),w=0;w<g.length;w++){var N=s[g[w]];typeof N=="function"&&typeof N.prototype[p]!="function"&&n(N.prototype,p,{configurable:!0,writable:!0,value:function(){return a(e(this))}})}return p});function a(p){return p={next:p},p[Symbol.iterator]=function(){return this},p}function i(p){var g=typeof Symbol<"u"&&Symbol.iterator&&p[Symbol.iterator];return g?g.call(p):{next:e(p)}}function u(p){if(!(p instanceof Array)){p=i(p);for(var g,w=[];!(g=p.next()).done;)w.push(g.value);p=w}return p}var c=typeof Object.assign=="function"?Object.assign:function(p,g){for(var w=1;w<arguments.length;w++){var N=arguments[w];if(N)for(var I in N)Object.prototype.hasOwnProperty.call(N,I)&&(p[I]=N[I])}return p};o("Object.assign",function(p){return p||c});var l=typeof Object.create=="function"?Object.create:function(p){function g(){}return g.prototype=p,new g},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var f={a:!0},m={};try{m.__proto__=f,d=m.a;break e}catch{}d=!1}h=d?function(p,g){if(p.__proto__=g,p.__proto__!==g)throw new TypeError(p+" is not extensible");return p}:null}var x=h;function y(p,g){if(p.prototype=l(g.prototype),p.prototype.constructor=p,x)x(p,g);else for(var w in g)if(w!="prototype")if(Object.defineProperties){var N=Object.getOwnPropertyDescriptor(g,w);N&&Object.defineProperty(p,w,N)}else p[w]=g[w];p.ya=g.prototype}function b(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function $(p){if(p.m)throw new TypeError("Generator is already running");p.m=!0}b.prototype.u=function(p){this.i=p};function T(p,g){p.l={ma:g,na:!0},p.h=p.s||p.v}b.prototype.return=function(p){this.l={return:p},this.h=this.v};function C(p,g,w){return p.h=w,{value:g}}function R(p){this.h=new b,this.i=p}function L(p,g){$(p.h);var w=p.h.j;return w?P(p,"return"in w?w.return:function(N){return{value:N,done:!0}},g,p.h.return):(p.h.return(g),O(p))}function P(p,g,w,N){try{var I=g.call(p.h.j,w);if(!(I instanceof Object))throw new TypeError("Iterator result "+I+" is not an object");if(!I.done)return p.h.m=!1,I;var _=I.value}catch(k){return p.h.j=null,T(p.h,k),O(p)}return p.h.j=null,N.call(p.h,_),O(p)}function O(p){for(;p.h.h;)try{var g=p.i(p.h);if(g)return p.h.m=!1,{value:g.value,done:!1}}catch(w){p.h.i=void 0,T(p.h,w)}if(p.h.m=!1,p.h.l){if(g=p.h.l,p.h.l=null,g.na)throw g.ma;return{value:g.return,done:!0}}return{value:void 0,done:!0}}function B(p){this.next=function(g){return $(p.h),p.h.j?g=P(p,p.h.j.next,g,p.h.u):(p.h.u(g),g=O(p)),g},this.throw=function(g){return $(p.h),p.h.j?g=P(p,p.h.j.throw,g,p.h.u):(T(p.h,g),g=O(p)),g},this.return=function(g){return L(p,g)},this[Symbol.iterator]=function(){return this}}function V(p){function g(N){return p.next(N)}function w(N){return p.throw(N)}return new Promise(function(N,I){function _(k){k.done?N(k.value):Promise.resolve(k.value).then(g,w).then(_,I)}_(p.next())})}function U(p){return V(new B(new R(p)))}o("Promise",function(p){function g(k){this.i=0,this.j=void 0,this.h=[],this.u=!1;var F=this.l();try{k(F.resolve,F.reject)}catch(W){F.reject(W)}}function w(){this.h=null}function N(k){return k instanceof g?k:new g(function(F){F(k)})}if(p)return p;w.prototype.i=function(k){if(this.h==null){this.h=[];var F=this;this.j(function(){F.m()})}this.h.push(k)};var I=s.setTimeout;w.prototype.j=function(k){I(k,0)},w.prototype.m=function(){for(;this.h&&this.h.length;){var k=this.h;this.h=[];for(var F=0;F<k.length;++F){var W=k[F];k[F]=null;try{W()}catch(G){this.l(G)}}}this.h=null},w.prototype.l=function(k){this.j(function(){throw k})},g.prototype.l=function(){function k(G){return function(X){W||(W=!0,G.call(F,X))}}var F=this,W=!1;return{resolve:k(this.I),reject:k(this.m)}},g.prototype.I=function(k){if(k===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(k instanceof g)this.L(k);else{e:switch(typeof k){case"object":var F=k!=null;break e;case"function":F=!0;break e;default:F=!1}F?this.F(k):this.s(k)}},g.prototype.F=function(k){var F=void 0;try{F=k.then}catch(W){this.m(W);return}typeof F=="function"?this.M(F,k):this.s(k)},g.prototype.m=function(k){this.v(2,k)},g.prototype.s=function(k){this.v(1,k)},g.prototype.v=function(k,F){if(this.i!=0)throw Error("Cannot settle("+k+", "+F+"): Promise already settled in state"+this.i);this.i=k,this.j=F,this.i===2&&this.K(),this.H()},g.prototype.K=function(){var k=this;I(function(){if(k.D()){var F=s.console;typeof F<"u"&&F.error(k.j)}},1)},g.prototype.D=function(){if(this.u)return!1;var k=s.CustomEvent,F=s.Event,W=s.dispatchEvent;return typeof W>"u"?!0:(typeof k=="function"?k=new k("unhandledrejection",{cancelable:!0}):typeof F=="function"?k=new F("unhandledrejection",{cancelable:!0}):(k=s.document.createEvent("CustomEvent"),k.initCustomEvent("unhandledrejection",!1,!0,k)),k.promise=this,k.reason=this.j,W(k))},g.prototype.H=function(){if(this.h!=null){for(var k=0;k<this.h.length;++k)_.i(this.h[k]);this.h=null}};var _=new w;return g.prototype.L=function(k){var F=this.l();k.T(F.resolve,F.reject)},g.prototype.M=function(k,F){var W=this.l();try{k.call(F,W.resolve,W.reject)}catch(G){W.reject(G)}},g.prototype.then=function(k,F){function W(re,Z){return typeof re=="function"?function(ue){try{G(re(ue))}catch(he){X(he)}}:Z}var G,X,ie=new g(function(re,Z){G=re,X=Z});return this.T(W(k,G),W(F,X)),ie},g.prototype.catch=function(k){return this.then(void 0,k)},g.prototype.T=function(k,F){function W(){switch(G.i){case 1:k(G.j);break;case 2:F(G.j);break;default:throw Error("Unexpected state: "+G.i)}}var G=this;this.h==null?_.i(W):this.h.push(W),this.u=!0},g.resolve=N,g.reject=function(k){return new g(function(F,W){W(k)})},g.race=function(k){return new g(function(F,W){for(var G=i(k),X=G.next();!X.done;X=G.next())N(X.value).T(F,W)})},g.all=function(k){var F=i(k),W=F.next();return W.done?N([]):new g(function(G,X){function ie(ue){return function(he){re[ue]=he,Z--,Z==0&&G(re)}}var re=[],Z=0;do re.push(void 0),Z++,N(W.value).T(ie(re.length-1),X),W=F.next();while(!W.done)})},g});function K(p,g){p instanceof String&&(p+="");var w=0,N=!1,I={next:function(){if(!N&&w<p.length){var _=w++;return{value:g(_,p[_]),done:!1}}return N=!0,{done:!0,value:void 0}}};return I[Symbol.iterator]=function(){return I},I}o("Array.prototype.keys",function(p){return p||function(){return K(this,function(g){return g})}}),o("Array.prototype.fill",function(p){return p||function(g,w,N){var I=this.length||0;for(0>w&&(w=Math.max(0,I+w)),(N==null||N>I)&&(N=I),N=Number(N),0>N&&(N=Math.max(0,I+N)),w=Number(w||0);w<N;w++)this[w]=g;return this}});function ee(p){return p||Array.prototype.fill}o("Int8Array.prototype.fill",ee),o("Uint8Array.prototype.fill",ee),o("Uint8ClampedArray.prototype.fill",ee),o("Int16Array.prototype.fill",ee),o("Uint16Array.prototype.fill",ee),o("Int32Array.prototype.fill",ee),o("Uint32Array.prototype.fill",ee),o("Float32Array.prototype.fill",ee),o("Float64Array.prototype.fill",ee),o("Object.is",function(p){return p||function(g,w){return g===w?g!==0||1/g===1/w:g!==g&&w!==w}}),o("Array.prototype.includes",function(p){return p||function(g,w){var N=this;N instanceof String&&(N=String(N));var I=N.length;for(w=w||0,0>w&&(w=Math.max(w+I,0));w<I;w++){var _=N[w];if(_===g||Object.is(_,g))return!0}return!1}}),o("String.prototype.includes",function(p){return p||function(g,w){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(g instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(g,w||0)!==-1}});var ne=this||self;function se(p,g){p=p.split(".");var w=ne;p[0]in w||typeof w.execScript>"u"||w.execScript("var "+p[0]);for(var N;p.length&&(N=p.shift());)p.length||g===void 0?w[N]&&w[N]!==Object.prototype[N]?w=w[N]:w=w[N]={}:w[N]=g}function J(p){var g;e:{if((g=ne.navigator)&&(g=g.userAgent))break e;g=""}return g.indexOf(p)!=-1}var me=Array.prototype.map?function(p,g){return Array.prototype.map.call(p,g,void 0)}:function(p,g){for(var w=p.length,N=Array(w),I=typeof p=="string"?p.split(""):p,_=0;_<w;_++)_ in I&&(N[_]=g.call(void 0,I[_],_,p));return N},be={},Ne=null;function St(p){var g=p.length,w=3*g/4;w%3?w=Math.floor(w):"=.".indexOf(p[g-1])!=-1&&(w="=.".indexOf(p[g-2])!=-1?w-2:w-1);var N=new Uint8Array(w),I=0;return ut(p,function(_){N[I++]=_}),I!==w?N.subarray(0,I):N}function ut(p,g){function w(W){for(;N<p.length;){var G=p.charAt(N++),X=Ne[G];if(X!=null)return X;if(!/^[\s\xa0]*$/.test(G))throw Error("Unknown base64 encoding at char: "+G)}return W}pt();for(var N=0;;){var I=w(-1),_=w(0),k=w(64),F=w(64);if(F===64&&I===-1)break;g(I<<2|_>>4),k!=64&&(g(_<<4&240|k>>2),F!=64&&g(k<<6&192|F))}}function pt(){if(!Ne){Ne={};for(var p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),g=["+/=","+/","-_=","-_.","-_"],w=0;5>w;w++){var N=p.concat(g[w].split(""));be[w]=N;for(var I=0;I<N.length;I++){var _=N[I];Ne[_]===void 0&&(Ne[_]=I)}}}}var jn=typeof Uint8Array<"u",ro=!(J("Trident")||J("MSIE"))&&typeof ne.btoa=="function";function Rr(p){if(!ro){var g;g===void 0&&(g=0),pt(),g=be[g];for(var w=Array(Math.floor(p.length/3)),N=g[64]||"",I=0,_=0;I<p.length-2;I+=3){var k=p[I],F=p[I+1],W=p[I+2],G=g[k>>2];k=g[(k&3)<<4|F>>4],F=g[(F&15)<<2|W>>6],W=g[W&63],w[_++]=G+k+F+W}switch(G=0,W=N,p.length-I){case 2:G=p[I+1],W=g[(G&15)<<2]||N;case 1:p=p[I],w[_]=g[p>>2]+g[(p&3)<<4|G>>4]+W+N}return w.join("")}for(g="";10240<p.length;)g+=String.fromCharCode.apply(null,p.subarray(0,10240)),p=p.subarray(10240);return g+=String.fromCharCode.apply(null,p),btoa(g)}var fs=RegExp("[-_.]","g");function Px(p){switch(p){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function vc(p){if(!ro)return St(p);fs.test(p)&&(p=p.replace(fs,Px)),p=atob(p);for(var g=new Uint8Array(p.length),w=0;w<p.length;w++)g[w]=p.charCodeAt(w);return g}var wc;function Aa(){return wc||(wc=new Uint8Array(0))}var ms={},Lx=typeof Uint8Array.prototype.slice=="function",Me=0,ct=0;function $c(p){var g=0>p;p=Math.abs(p);var w=p>>>0;p=Math.floor((p-w)/4294967296),g&&(w=i(Nc(w,p)),g=w.next().value,p=w.next().value,w=g),Me=w>>>0,ct=p>>>0}var Bx=typeof BigInt=="function";function Nc(p,g){return g=~g,p?p=~p+1:g+=1,[p,g]}function Sc(p,g){this.i=p>>>0,this.h=g>>>0}function Cc(p){if(!p)return Tc||(Tc=new Sc(0,0));if(!/^-?\d+$/.test(p))return null;if(16>p.length)$c(Number(p));else if(Bx)p=BigInt(p),Me=Number(p&BigInt(4294967295))>>>0,ct=Number(p>>BigInt(32)&BigInt(4294967295));else{var g=+(p[0]==="-");ct=Me=0;for(var w=p.length,N=g,I=(w-g)%6+g;I<=w;N=I,I+=6)N=Number(p.slice(N,I)),ct*=1e6,Me=1e6*Me+N,4294967296<=Me&&(ct+=Me/4294967296|0,Me%=4294967296);g&&(g=i(Nc(Me,ct)),p=g.next().value,g=g.next().value,Me=p,ct=g)}return new Sc(Me,ct)}var Tc;function Ec(p,g){return Error("Invalid wire type: "+p+" (at position "+g+")")}function Oa(){return Error("Failed to read varint, encoding is invalid.")}function Ic(p,g){return Error("Tried to read past the end of the data "+g+" > "+p)}function Hn(){throw Error("Invalid UTF8")}function kc(p,g){return g=String.fromCharCode.apply(null,g),p==null?g:p+g}var so=void 0,Da,Vx=typeof TextDecoder<"u",_c,Mx=typeof TextEncoder<"u",Rc;function Ac(p){if(p!==ms)throw Error("illegal external caller")}function gs(p,g){if(Ac(g),this.V=p,p!=null&&p.length===0)throw Error("ByteString should be constructed with non-empty values")}function Fa(){return Rc||(Rc=new gs(null,ms))}function Oc(p){Ac(ms);var g=p.V;return g=g==null||jn&&g!=null&&g instanceof Uint8Array?g:typeof g=="string"?vc(g):null,g==null?g:p.V=g}function Ux(p){if(typeof p=="string")return{buffer:vc(p),C:!1};if(Array.isArray(p))return{buffer:new Uint8Array(p),C:!1};if(p.constructor===Uint8Array)return{buffer:p,C:!1};if(p.constructor===ArrayBuffer)return{buffer:new Uint8Array(p),C:!1};if(p.constructor===gs)return{buffer:Oc(p)||Aa(),C:!0};if(p instanceof Uint8Array)return{buffer:new Uint8Array(p.buffer,p.byteOffset,p.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Dc(p,g){this.i=null,this.m=!1,this.h=this.j=this.l=0,Pa(this,p,g)}function Pa(p,g,w){w=w===void 0?{}:w,p.S=w.S===void 0?!1:w.S,g&&(g=Ux(g),p.i=g.buffer,p.m=g.C,p.l=0,p.j=p.i.length,p.h=p.l)}Dc.prototype.reset=function(){this.h=this.l};function Kn(p,g){if(p.h=g,g>p.j)throw Ic(p.j,g)}function ys(p){var g=p.i,w=p.h,N=g[w++],I=N&127;if(N&128&&(N=g[w++],I|=(N&127)<<7,N&128&&(N=g[w++],I|=(N&127)<<14,N&128&&(N=g[w++],I|=(N&127)<<21,N&128&&(N=g[w++],I|=N<<28,N&128&&g[w++]&128&&g[w++]&128&&g[w++]&128&&g[w++]&128&&g[w++]&128)))))throw Oa();return Kn(p,w),I}function Fc(p,g){if(0>g)throw Error("Tried to read a negative byte length: "+g);var w=p.h,N=w+g;if(N>p.j)throw Ic(g,p.j-w);return p.h=N,w}var Pc=[];function La(){this.h=[]}La.prototype.length=function(){return this.h.length},La.prototype.end=function(){var p=this.h;return this.h=[],p};function Lc(p,g,w){for(;0<w||127<g;)p.h.push(g&127|128),g=(g>>>7|w<<25)>>>0,w>>>=7;p.h.push(g)}function qn(p,g){for(;127<g;)p.h.push(g&127|128),g>>>=7;p.h.push(g)}function Ba(p,g){if(Pc.length){var w=Pc.pop();Pa(w,p,g),p=w}else p=new Dc(p,g);this.h=p,this.j=this.h.h,this.i=this.l=-1,this.setOptions(g)}Ba.prototype.setOptions=function(p){p=p===void 0?{}:p,this.ca=p.ca===void 0?!1:p.ca},Ba.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Bc(p){var g=p.h;if(g.h==g.j)return!1;p.j=p.h.h;var w=ys(p.h)>>>0;if(g=w>>>3,w&=7,!(0<=w&&5>=w))throw Ec(w,p.j);if(1>g)throw Error("Invalid field number: "+g+" (at position "+p.j+")");return p.l=g,p.i=w,!0}function oo(p){switch(p.i){case 0:if(p.i!=0)oo(p);else e:{p=p.h;for(var g=p.h,w=g+10,N=p.i;g<w;)if(!(N[g++]&128)){Kn(p,g);break e}throw Oa()}break;case 1:p=p.h,Kn(p,p.h+8);break;case 2:p.i!=2?oo(p):(g=ys(p.h)>>>0,p=p.h,Kn(p,p.h+g));break;case 5:p=p.h,Kn(p,p.h+4);break;case 3:g=p.l;do{if(!Bc(p))throw Error("Unmatched start-group tag: stream EOF");if(p.i==4){if(p.l!=g)throw Error("Unmatched end-group tag");break}oo(p)}while(!0);break;default:throw Ec(p.i,p.j)}}var ao=[];function Wx(){this.j=[],this.i=0,this.h=new La}function Ar(p,g){g.length!==0&&(p.j.push(g),p.i+=g.length)}function zx(p,g){if(g=g.R){Ar(p,p.h.end());for(var w=0;w<g.length;w++)Ar(p,Oc(g[w])||Aa())}}var gn=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Xn(p,g){return gn?p[gn]|=g:p.A!==void 0?p.A|=g:(Object.defineProperties(p,{A:{value:g,configurable:!0,writable:!0,enumerable:!1}}),g)}function Vc(p,g){gn?p[gn]&&(p[gn]&=~g):p.A!==void 0&&(p.A&=~g)}function Be(p){var g;return gn?g=p[gn]:g=p.A,g??0}function sn(p,g){gn?p[gn]=g:p.A!==void 0?p.A=g:Object.defineProperties(p,{A:{value:g,configurable:!0,writable:!0,enumerable:!1}})}function Va(p){return Xn(p,1),p}function Gx(p,g){sn(g,(p|0)&-51)}function io(p,g){sn(g,(p|18)&-41)}var Ma={};function uo(p){return p!==null&&typeof p=="object"&&!Array.isArray(p)&&p.constructor===Object}var xs,Mc=[];sn(Mc,23),xs=Object.freeze(Mc);function Ua(p){if(Be(p.o)&2)throw Error("Cannot mutate an immutable Message")}function Wa(p){var g=p.length;(g=g?p[g-1]:void 0)&&uo(g)?g.g=1:(g={},p.push((g.g=1,g)))}function Uc(p){var g=p.i+p.G;return p.B||(p.B=p.o[g]={})}function jt(p,g){return g===-1?null:g>=p.i?p.B?p.B[g]:void 0:p.o[g+p.G]}function on(p,g,w,N){Ua(p),bs(p,g,w,N)}function bs(p,g,w,N){p.j&&(p.j=void 0),g>=p.i||N?Uc(p)[g]=w:(p.o[g+p.G]=w,(p=p.B)&&g in p&&delete p[g])}function za(p,g,w,N){var I=jt(p,g);Array.isArray(I)||(I=xs);var _=Be(I);if(_&1||Va(I),N)_&2||Xn(I,2),w&1||Object.freeze(I);else{N=!(w&2);var k=_&2;w&1||!k?N&&_&16&&!k&&Vc(I,16):(I=Va(Array.prototype.slice.call(I)),bs(p,g,I))}return I}function Ga(p,g){var w=jt(p,g),N=w==null?w:typeof w=="number"||w==="NaN"||w==="Infinity"||w==="-Infinity"?Number(w):void 0;return N!=null&&N!==w&&bs(p,g,N),N}function Wc(p,g,w,N,I){p.h||(p.h={});var _=p.h[w],k=za(p,w,3,I);if(!_){var F=k;_=[];var W=!!(Be(p.o)&16);k=!!(Be(F)&2);var G=F;!I&&k&&(F=Array.prototype.slice.call(F));for(var X=k,ie=0;ie<F.length;ie++){var re=F[ie],Z=g,ue=!1;if(ue=ue===void 0?!1:ue,re=Array.isArray(re)?new Z(re):ue?new Z:void 0,re!==void 0){Z=re.o;var he=ue=Be(Z);k&&(he|=2),W&&(he|=16),he!=ue&&sn(Z,he),Z=he,X=X||!!(2&Z),_.push(re)}}return p.h[w]=_,W=Be(F),g=W|33,g=X?g&-9:g|8,W!=g&&(X=F,Object.isFrozen(X)&&(X=Array.prototype.slice.call(X)),sn(X,g),F=X),G!==F&&bs(p,w,F),(I||N&&k)&&Xn(_,2),N&&Object.freeze(_),_}return I||(I=Object.isFrozen(_),N&&!I?Object.freeze(_):!N&&I&&(_=Array.prototype.slice.call(_),p.h[w]=_)),_}function co(p,g,w){var N=!!(Be(p.o)&2);if(g=Wc(p,g,w,N,N),p=za(p,w,3,N),!(N||Be(p)&8)){for(N=0;N<g.length;N++){if(w=g[N],Be(w.o)&2){var I=qc(w,!1);I.j=w}else I=w;w!==I&&(g[N]=I,p[N]=I.o)}Xn(p,8)}return g}function an(p,g,w){if(w!=null&&typeof w!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof w+": "+w);on(p,g,w)}function zc(p,g,w,N,I){Ua(p);var _=Wc(p,w,g,!1,!1);return w=N??new w,p=za(p,g,2,!1),I!=null?(_.splice(I,0,w),p.splice(I,0,w.o)):(_.push(w),p.push(w.o)),w.C()&&Vc(p,8),w}function lo(p,g){return p??g}function un(p,g,w){return w=w===void 0?0:w,lo(Ga(p,g),w)}var ho;function jx(p){switch(typeof p){case"number":return isFinite(p)?p:String(p);case"object":if(p)if(Array.isArray(p)){if(Be(p)&128)return p=Array.prototype.slice.call(p),Wa(p),p}else{if(jn&&p!=null&&p instanceof Uint8Array)return Rr(p);if(p instanceof gs){var g=p.V;return g==null?"":typeof g=="string"?g:p.V=Rr(g)}}}return p}function Gc(p,g,w,N){if(p!=null){if(Array.isArray(p))p=ja(p,g,w,N!==void 0);else if(uo(p)){var I={},_;for(_ in p)I[_]=Gc(p[_],g,w,N);p=I}else p=g(p,N);return p}}function ja(p,g,w,N){var I=Be(p);N=N?!!(I&16):void 0,p=Array.prototype.slice.call(p);for(var _=0;_<p.length;_++)p[_]=Gc(p[_],g,w,N);return w(I,p),p}function Hx(p){return p.ja===Ma?p.toJSON():jx(p)}function Kx(p,g){p&128&&Wa(g)}function jc(p,g,w){if(w=w===void 0?io:w,p!=null){if(jn&&p instanceof Uint8Array)return p.length?new gs(new Uint8Array(p),ms):Fa();if(Array.isArray(p)){var N=Be(p);return N&2?p:g&&!(N&32)&&(N&16||N===0)?(sn(p,N|2),p):(p=ja(p,jc,N&4?io:w,!0),g=Be(p),g&4&&g&2&&Object.freeze(p),p)}return p.ja===Ma?Kc(p):p}}function Hc(p,g,w,N,I,_,k){if(p=p.h&&p.h[w]){if(N=Be(p),N&2?N=p:(_=me(p,Kc),io(N,_),Object.freeze(_),N=_),Ua(g),k=N==null?xs:Va([]),N!=null){for(_=!!N.length,p=0;p<N.length;p++){var F=N[p];_=_&&!(Be(F.o)&2),k[p]=F.o}_=(_?8:0)|1,p=Be(k),(p&_)!==_&&(Object.isFrozen(k)&&(k=Array.prototype.slice.call(k)),sn(k,p|_)),g.h||(g.h={}),g.h[w]=N}else g.h&&(g.h[w]=void 0);bs(g,w,k,I)}else on(g,w,jc(N,_,k),I)}function Kc(p){return Be(p.o)&2||(p=qc(p,!0),Xn(p.o,2)),p}function qc(p,g){var w=p.o,N=[];Xn(N,16);var I=p.constructor.h;if(I&&N.push(I),I=p.B,I){N.length=w.length,N.fill(void 0,N.length,w.length);var _={};N[N.length-1]=_}Be(w)&128&&Wa(N),g=g||p.C()?io:Gx,_=p.constructor,ho=N,N=new _(N),ho=void 0,p.R&&(N.R=p.R.slice()),_=!!(Be(w)&16);for(var k=I?w.length-1:w.length,F=0;F<k;F++)Hc(p,N,F-p.G,w[F],!1,_,g);if(I)for(var W in I)Hc(p,N,+W,I[W],!0,_,g);return N}function ft(p,g,w){p==null&&(p=ho),ho=void 0;var N=this.constructor.i||0,I=0<N,_=this.constructor.h,k=!1;if(p==null){p=_?[_]:[];var F=48,W=!0;I&&(N=0,F|=128),sn(p,F)}else{if(!Array.isArray(p)||_&&_!==p[0])throw Error();var G=F=Xn(p,0);if((W=(16&G)!==0)&&((k=(32&G)!==0)||(G|=32)),I){if(128&G)N=0;else if(0<p.length){var X=p[p.length-1];if(uo(X)&&"g"in X){N=0,G|=128,delete X.g;var ie=!0,re;for(re in X){ie=!1;break}ie&&p.pop()}}}else if(128&G)throw Error();F!==G&&sn(p,G)}this.G=(_?0:-1)-N,this.h=void 0,this.o=p;e:{if(_=this.o.length,N=_-1,_&&(_=this.o[N],uo(_))){this.B=_,this.i=N-this.G;break e}g!==void 0&&-1<g?(this.i=Math.max(g,N+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!I&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(w){g=W&&!k&&!0,I=this.i;var Z;for(W=0;W<w.length;W++)k=w[W],k<I?(k+=this.G,(N=p[k])?Xc(N,g):p[k]=xs):(Z||(Z=Uc(this)),(N=Z[k])?Xc(N,g):Z[k]=xs)}}ft.prototype.toJSON=function(){return ja(this.o,Hx,Kx)},ft.prototype.C=function(){return!!(Be(this.o)&2)};function Xc(p,g){if(Array.isArray(p)){var w=Be(p),N=1;!g||w&2||(N|=16),(w&N)!==N&&sn(p,w|N)}}ft.prototype.ja=Ma,ft.prototype.toString=function(){return this.o.toString()};function Yc(p,g,w){if(w){var N={},I;for(I in w){var _=w[I],k=_.qa;k||(N.J=_.wa||_.oa.W,_.ia?(N.aa=tl(_.ia),k=function(F){return function(W,G,X){return F.J(W,G,X,F.aa)}}(N)):_.ka?(N.Z=nl(_.da.P,_.ka),k=function(F){return function(W,G,X){return F.J(W,G,X,F.Z)}}(N)):k=N.J,_.qa=k),k(g,p,_.da),N={J:N.J,aa:N.aa,Z:N.Z}}}zx(g,p)}var po=Symbol();function Qc(p,g,w){return p[po]||(p[po]=function(N,I){return g(N,I,w)})}function Zc(p){var g=p[po];if(!g){var w=Ka(p);g=function(N,I){return rl(N,I,w)},p[po]=g}return g}function qx(p){var g=p.ia;if(g)return Zc(g);if(g=p.va)return Qc(p.da.P,g,p.ka)}function Xx(p){var g=qx(p),w=p.da,N=p.oa.U;return g?function(I,_){return N(I,_,w,g)}:function(I,_){return N(I,_,w)}}function Jc(p,g){var w=p[g];return typeof w=="function"&&w.length===0&&(w=w(),p[g]=w),Array.isArray(w)&&(ws in w||vs in w||0<w.length&&typeof w[0]=="function")?w:void 0}function el(p,g,w,N,I,_){g.P=p[0];var k=1;if(p.length>k&&typeof p[k]!="number"){var F=p[k++];w(g,F)}for(;k<p.length;){w=p[k++];for(var W=k+1;W<p.length&&typeof p[W]!="number";)W++;switch(F=p[k++],W-=k,W){case 0:N(g,w,F);break;case 1:(W=Jc(p,k))?(k++,I(g,w,F,W)):N(g,w,F,p[k++]);break;case 2:W=k++,W=Jc(p,W),I(g,w,F,W,p[k++]);break;case 3:_(g,w,F,p[k++],p[k++],p[k++]);break;case 4:_(g,w,F,p[k++],p[k++],p[k++],p[k++]);break;default:throw Error("unexpected number of binary field arguments: "+W)}}return g}var fo=Symbol();function tl(p){var g=p[fo];if(!g){var w=Ha(p);g=function(N,I){return sl(N,I,w)},p[fo]=g}return g}function nl(p,g){var w=p[fo];return w||(w=function(N,I){return Yc(N,I,g)},p[fo]=w),w}var vs=Symbol();function Yx(p,g){p.push(g)}function Qx(p,g,w){p.push(g,w.W)}function Zx(p,g,w,N){var I=tl(N),_=Ha(N).P,k=w.W;p.push(g,function(F,W,G){return k(F,W,G,_,I)})}function Jx(p,g,w,N,I,_){var k=nl(N,_),F=w.W;p.push(g,function(W,G,X){return F(W,G,X,N,k)})}function Ha(p){var g=p[vs];return g||(g=el(p,p[vs]=[],Yx,Qx,Zx,Jx),ws in p&&vs in p&&(p.length=0),g)}var ws=Symbol();function e0(p,g){p[0]=g}function t0(p,g,w,N){var I=w.U;p[g]=N?function(_,k,F){return I(_,k,F,N)}:I}function n0(p,g,w,N,I){var _=w.U,k=Zc(N),F=Ka(N).P;p[g]=function(W,G,X){return _(W,G,X,F,k,I)}}function r0(p,g,w,N,I,_,k){var F=w.U,W=Qc(N,I,_);p[g]=function(G,X,ie){return F(G,X,ie,N,W,k)}}function Ka(p){var g=p[ws];return g||(g=el(p,p[ws]={},e0,t0,n0,r0),ws in p&&vs in p&&(p.length=0),g)}function rl(p,g,w){for(;Bc(g)&&g.i!=4;){var N=g.l,I=w[N];if(!I){var _=w[0];_&&(_=_[N])&&(I=w[N]=Xx(_))}if(!I||!I(g,p,N)){I=g,N=p,_=I.j,oo(I);var k=I;if(!k.ca){if(I=k.h.h-_,k.h.h=_,k=k.h,I==0)I=Fa();else{if(_=Fc(k,I),k.S&&k.m)I=k.i.subarray(_,_+I);else{k=k.i;var F=_;I=_+I,I=F===I?Aa():Lx?k.slice(F,I):new Uint8Array(k.subarray(F,I))}I=I.length==0?Fa():new gs(I,ms)}(_=N.R)?_.push(I):N.R=[I]}}}return p}function sl(p,g,w){for(var N=w.length,I=N%2==1,_=I?1:0;_<N;_+=2)(0,w[_+1])(g,p,w[_]);Yc(p,g,I?w[0]:void 0)}function $s(p,g){return{U:p,W:g}}var Ht=$s(function(p,g,w){if(p.i!==5)return!1;p=p.h;var N=p.i,I=p.h,_=N[I],k=N[I+1],F=N[I+2];return N=N[I+3],Kn(p,p.h+4),k=(_<<0|k<<8|F<<16|N<<24)>>>0,p=2*(k>>31)+1,_=k>>>23&255,k&=8388607,on(g,w,_==255?k?NaN:1/0*p:_==0?p*Math.pow(2,-149)*k:p*Math.pow(2,_-150)*(k+Math.pow(2,23))),!0},function(p,g,w){if(g=Ga(g,w),g!=null){qn(p.h,8*w+5),p=p.h;var N=+g;N===0?0<1/N?Me=ct=0:(ct=0,Me=2147483648):isNaN(N)?(ct=0,Me=2147483647):(N=(w=0>N?-2147483648:0)?-N:N,34028234663852886e22<N?(ct=0,Me=(w|2139095040)>>>0):11754943508222875e-54>N?(N=Math.round(N/Math.pow(2,-149)),ct=0,Me=(w|N)>>>0):(g=Math.floor(Math.log(N)/Math.LN2),N*=Math.pow(2,-g),N=Math.round(8388608*N),16777216<=N&&++g,ct=0,Me=(w|g+127<<23|N&8388607)>>>0)),w=Me,p.h.push(w>>>0&255),p.h.push(w>>>8&255),p.h.push(w>>>16&255),p.h.push(w>>>24&255)}}),s0=$s(function(p,g,w){if(p.i!==0)return!1;var N=p.h,I=0,_=p=0,k=N.i,F=N.h;do{var W=k[F++];I|=(W&127)<<_,_+=7}while(32>_&&W&128);for(32<_&&(p|=(W&127)>>4),_=3;32>_&&W&128;_+=7)W=k[F++],p|=(W&127)<<_;if(Kn(N,F),128>W)N=I>>>0,W=p>>>0,(p=W&2147483648)&&(N=~N+1>>>0,W=~W>>>0,N==0&&(W=W+1>>>0)),N=4294967296*W+(N>>>0);else throw Oa();return on(g,w,p?-N:N),!0},function(p,g,w){g=jt(g,w),g!=null&&(typeof g=="string"&&Cc(g),g!=null&&(qn(p.h,8*w),typeof g=="number"?(p=p.h,$c(g),Lc(p,Me,ct)):(w=Cc(g),Lc(p.h,w.i,w.h))))}),o0=$s(function(p,g,w){return p.i!==0?!1:(on(g,w,ys(p.h)),!0)},function(p,g,w){if(g=jt(g,w),g!=null&&g!=null)if(qn(p.h,8*w),p=p.h,w=g,0<=w)qn(p,w);else{for(g=0;9>g;g++)p.h.push(w&127|128),w>>=7;p.h.push(1)}}),ol=$s(function(p,g,w){if(p.i!==2)return!1;var N=ys(p.h)>>>0;p=p.h;var I=Fc(p,N);if(p=p.i,Vx){var _=p,k;(k=Da)||(k=Da=new TextDecoder("utf-8",{fatal:!0})),p=I+N,_=I===0&&p===_.length?_:_.subarray(I,p);try{var F=k.decode(_)}catch(ie){if(so===void 0){try{k.decode(new Uint8Array([128]))}catch{}try{k.decode(new Uint8Array([97])),so=!0}catch{so=!1}}throw!so&&(Da=void 0),ie}}else{F=I,N=F+N,I=[];for(var W=null,G,X;F<N;)G=p[F++],128>G?I.push(G):224>G?F>=N?Hn():(X=p[F++],194>G||(X&192)!==128?(F--,Hn()):I.push((G&31)<<6|X&63)):240>G?F>=N-1?Hn():(X=p[F++],(X&192)!==128||G===224&&160>X||G===237&&160<=X||((_=p[F++])&192)!==128?(F--,Hn()):I.push((G&15)<<12|(X&63)<<6|_&63)):244>=G?F>=N-2?Hn():(X=p[F++],(X&192)!==128||(G<<28)+(X-144)>>30||((_=p[F++])&192)!==128||((k=p[F++])&192)!==128?(F--,Hn()):(G=(G&7)<<18|(X&63)<<12|(_&63)<<6|k&63,G-=65536,I.push((G>>10&1023)+55296,(G&1023)+56320))):Hn(),8192<=I.length&&(W=kc(W,I),I.length=0);F=kc(W,I)}return on(g,w,F),!0},function(p,g,w){if(g=jt(g,w),g!=null){var N=!1;if(N=N===void 0?!1:N,Mx){if(N&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(g))throw Error("Found an unpaired surrogate");g=(_c||(_c=new TextEncoder)).encode(g)}else{for(var I=0,_=new Uint8Array(3*g.length),k=0;k<g.length;k++){var F=g.charCodeAt(k);if(128>F)_[I++]=F;else{if(2048>F)_[I++]=F>>6|192;else{if(55296<=F&&57343>=F){if(56319>=F&&k<g.length){var W=g.charCodeAt(++k);if(56320<=W&&57343>=W){F=1024*(F-55296)+W-56320+65536,_[I++]=F>>18|240,_[I++]=F>>12&63|128,_[I++]=F>>6&63|128,_[I++]=F&63|128;continue}else k--}if(N)throw Error("Found an unpaired surrogate");F=65533}_[I++]=F>>12|224,_[I++]=F>>6&63|128}_[I++]=F&63|128}}g=I===_.length?_:_.subarray(0,I)}qn(p.h,8*w+2),qn(p.h,g.length),Ar(p,p.h.end()),Ar(p,g)}}),al=$s(function(p,g,w,N,I){if(p.i!==2)return!1;g=zc(g,w,N),w=p.h.j,N=ys(p.h)>>>0;var _=p.h.h+N,k=_-w;if(0>=k&&(p.h.j=_,I(g,p,void 0,void 0,void 0),k=_-p.h.h),k)throw Error("Message parsing ended unexpectedly. Expected to read "+(N+" bytes, instead read "+(N-k)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return p.h.h=_,p.h.j=w,!0},function(p,g,w,N,I){if(g=co(g,N,w),g!=null)for(N=0;N<g.length;N++){var _=p;qn(_.h,8*w+2);var k=_.h.end();Ar(_,k),k.push(_.i),_=k,I(g[N],p),k=p;var F=_.pop();for(F=k.i+k.h.length()-F;127<F;)_.push(F&127|128),F>>>=7,k.i++;_.push(F),k.i++}});function qa(p){return function(g,w){e:{if(ao.length){var N=ao.pop();N.setOptions(w),Pa(N.h,g,w),g=N}else g=new Ba(g,w);try{var I=Ka(p),_=rl(new I.P,g,I);break e}finally{I=g.h,I.i=null,I.m=!1,I.l=0,I.j=0,I.h=0,I.S=!1,g.l=-1,g.i=-1,100>ao.length&&ao.push(g)}_=void 0}return _}}function Xa(p){return function(){var g=new Wx;sl(this,g,Ha(p)),Ar(g,g.h.end());for(var w=new Uint8Array(g.i),N=g.j,I=N.length,_=0,k=0;k<I;k++){var F=N[k];w.set(F,_),_+=F.length}return g.j=[w],w}}function Or(p){ft.call(this,p)}y(Or,ft);var il=[Or,1,o0,2,Ht,3,ol,4,ol];Or.prototype.l=Xa(il);function Ya(p){ft.call(this,p,-1,a0)}y(Ya,ft),Ya.prototype.addClassification=function(p,g){return zc(this,1,Or,p,g),this};var a0=[1],ul=qa([Ya,1,al,il]);function Dr(p){ft.call(this,p)}y(Dr,ft);var cl=[Dr,1,Ht,2,Ht,3,Ht,4,Ht,5,Ht];Dr.prototype.l=Xa(cl);function ll(p){ft.call(this,p,-1,i0)}y(ll,ft);var i0=[1],hl=qa([ll,1,al,cl]);function mo(p){ft.call(this,p)}y(mo,ft);var dl=[mo,1,Ht,2,Ht,3,Ht,4,Ht,5,Ht,6,s0],u0=qa(dl);mo.prototype.l=Xa(dl);function pl(p,g,w){if(w=p.createShader(w===0?p.VERTEX_SHADER:p.FRAGMENT_SHADER),p.shaderSource(w,g),p.compileShader(w),!p.getShaderParameter(w,p.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+p.getShaderInfoLog(w));return w}function fl(p){return co(p,Or,1).map(function(g){var w=jt(g,1);return{index:w??0,score:un(g,2),label:jt(g,3)!=null?lo(jt(g,3),""):void 0,displayName:jt(g,4)!=null?lo(jt(g,4),""):void 0}})}function ml(p){return{x:un(p,1),y:un(p,2),z:un(p,3),visibility:Ga(p,4)!=null?un(p,4):void 0}}function gl(p){return p.map(function(g){return co(hl(g),Dr,1).map(ml)})}function Qa(p,g){this.i=p,this.h=g,this.m=0}function yl(p,g,w){return c0(p,g),typeof p.h.canvas.transferToImageBitmap=="function"?Promise.resolve(p.h.canvas.transferToImageBitmap()):w?Promise.resolve(p.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(p.h.canvas):(p.j===void 0&&(p.j=document.createElement("canvas")),new Promise(function(N){p.j.height=p.h.canvas.height,p.j.width=p.h.canvas.width,p.j.getContext("2d",{}).drawImage(p.h.canvas,0,0,p.h.canvas.width,p.h.canvas.height),N(p.j)}))}function c0(p,g){var w=p.h;if(p.s===void 0){var N=pl(w,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),I=pl(w,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),_=w.createProgram();if(w.attachShader(_,N),w.attachShader(_,I),w.linkProgram(_),!w.getProgramParameter(_,w.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+w.getProgramInfoLog(_));N=p.s=_,w.useProgram(N),I=w.getUniformLocation(N,"sampler0"),p.l={O:w.getAttribLocation(N,"aVertex"),N:w.getAttribLocation(N,"aTex"),xa:I},p.v=w.createBuffer(),w.bindBuffer(w.ARRAY_BUFFER,p.v),w.enableVertexAttribArray(p.l.O),w.vertexAttribPointer(p.l.O,2,w.FLOAT,!1,0,0),w.bufferData(w.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),w.STATIC_DRAW),w.bindBuffer(w.ARRAY_BUFFER,null),p.u=w.createBuffer(),w.bindBuffer(w.ARRAY_BUFFER,p.u),w.enableVertexAttribArray(p.l.N),w.vertexAttribPointer(p.l.N,2,w.FLOAT,!1,0,0),w.bufferData(w.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),w.STATIC_DRAW),w.bindBuffer(w.ARRAY_BUFFER,null),w.uniform1i(I,0)}N=p.l,w.useProgram(p.s),w.canvas.width=g.width,w.canvas.height=g.height,w.viewport(0,0,g.width,g.height),w.activeTexture(w.TEXTURE0),p.i.bindTexture2d(g.glName),w.enableVertexAttribArray(N.O),w.bindBuffer(w.ARRAY_BUFFER,p.v),w.vertexAttribPointer(N.O,2,w.FLOAT,!1,0,0),w.enableVertexAttribArray(N.N),w.bindBuffer(w.ARRAY_BUFFER,p.u),w.vertexAttribPointer(N.N,2,w.FLOAT,!1,0,0),w.bindFramebuffer(w.DRAW_FRAMEBUFFER?w.DRAW_FRAMEBUFFER:w.FRAMEBUFFER,null),w.clearColor(0,0,0,0),w.clear(w.COLOR_BUFFER_BIT),w.colorMask(!0,!0,!0,!0),w.drawArrays(w.TRIANGLE_FAN,0,4),w.disableVertexAttribArray(N.O),w.disableVertexAttribArray(N.N),w.bindBuffer(w.ARRAY_BUFFER,null),p.i.bindTexture2d(0)}function l0(p){this.h=p}var h0=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function d0(p,g){return g+p}function xl(p,g){window[p]=g}function p0(p){var g=document.createElement("script");return g.setAttribute("src",p),g.setAttribute("crossorigin","anonymous"),new Promise(function(w){g.addEventListener("load",function(){w()},!1),g.addEventListener("error",function(){w()},!1),document.body.appendChild(g)})}function f0(){return U(function(p){switch(p.h){case 1:return p.s=2,C(p,WebAssembly.instantiate(h0),4);case 4:p.h=3,p.s=0;break;case 2:return p.s=0,p.l=null,p.return(!1);case 3:return p.return(!0)}})}function Za(p){if(this.h=p,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=p&&p.locateFile||d0,typeof window=="object")var g=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")g=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=g,p.options){g=i(Object.keys(p.options));for(var w=g.next();!w.done;w=g.next()){w=w.value;var N=p.options[w].default;N!==void 0&&(this.l[w]=typeof N=="function"?N():N)}}}t=Za.prototype,t.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function m0(p){var g,w,N,I,_,k,F,W,G,X,ie;return U(function(re){switch(re.h){case 1:return p.ga?(g=p.h.files===void 0?[]:typeof p.h.files=="function"?p.h.files(p.l):p.h.files,C(re,f0(),2)):re.return();case 2:if(w=re.i,typeof window=="object")return xl("createMediapipeSolutionsWasm",{locateFile:p.locateFile}),xl("createMediapipeSolutionsPackedAssets",{locateFile:p.locateFile}),k=g.filter(function(Z){return Z.data!==void 0}),F=g.filter(function(Z){return Z.data===void 0}),W=Promise.all(k.map(function(Z){var ue=go(p,Z.url);if(Z.path!==void 0){var he=Z.path;ue=ue.then(function(ke){return p.overrideFile(he,ke),Promise.resolve(ke)})}return ue})),G=Promise.all(F.map(function(Z){return Z.simd===void 0||Z.simd&&w||!Z.simd&&!w?p0(p.locateFile(Z.url,p.ha)):Promise.resolve()})).then(function(){var Z,ue,he;return U(function(ke){if(ke.h==1)return Z=window.createMediapipeSolutionsWasm,ue=window.createMediapipeSolutionsPackedAssets,he=p,C(ke,Z(ue),2);he.i=ke.i,ke.h=0})}),X=function(){return U(function(Z){return p.h.graph&&p.h.graph.url?Z=C(Z,go(p,p.h.graph.url),0):(Z.h=0,Z=void 0),Z})}(),C(re,Promise.all([G,W,X]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return N=g.filter(function(Z){return Z.simd===void 0||Z.simd&&w||!Z.simd&&!w}).map(function(Z){return p.locateFile(Z.url,p.ha)}),importScripts.apply(null,u(N)),I=p,C(re,createMediapipeSolutionsWasm(Module),6);case 6:I.i=re.i,p.m=new OffscreenCanvas(1,1),p.i.canvas=p.m,_=p.i.GL.createContext(p.m,{antialias:!1,alpha:!1,ua:typeof WebGL2RenderingContext<"u"?2:1}),p.i.GL.makeContextCurrent(_),re.h=4;break;case 7:if(p.m=document.createElement("canvas"),ie=p.m.getContext("webgl2",{}),!ie&&(ie=p.m.getContext("webgl",{}),!ie))return alert("Failed to create WebGL canvas context when passing video frame."),re.return();p.K=ie,p.i.canvas=p.m,p.i.createContext(p.m,!0,!0,{});case 4:p.j=new p.i.SolutionWasm,p.ga=!1,re.h=0}})}function g0(p){var g,w,N,I,_,k,F,W;return U(function(G){if(G.h==1){if(p.h.graph&&p.h.graph.url&&p.fa===p.h.graph.url)return G.return();if(p.u=!0,!p.h.graph||!p.h.graph.url){G.h=2;return}return p.fa=p.h.graph.url,C(G,go(p,p.h.graph.url),3)}for(G.h!=2&&(g=G.i,p.j.loadGraph(g)),w=i(Object.keys(p.D)),N=w.next();!N.done;N=w.next())I=N.value,p.j.overrideFile(I,p.D[I]);if(p.D={},p.h.listeners)for(_=i(p.h.listeners),k=_.next();!k.done;k=_.next())F=k.value,v0(p,F);W=p.l,p.l={},p.setOptions(W),G.h=0})}t.reset=function(){var p=this;return U(function(g){p.j&&(p.j.reset(),p.s={},p.v={}),g.h=0})},t.setOptions=function(p,g){var w=this;if(g=g||this.h.options){for(var N=[],I=[],_={},k=i(Object.keys(p)),F=k.next();!F.done;_={X:_.X,Y:_.Y},F=k.next())if(F=F.value,!(F in this.l&&this.l[F]===p[F])){this.l[F]=p[F];var W=g[F];W!==void 0&&(W.onChange&&(_.X=W.onChange,_.Y=p[F],N.push(function(G){return function(){var X;return U(function(ie){if(ie.h==1)return C(ie,G.X(G.Y),2);X=ie.i,X===!0&&(w.u=!0),ie.h=0})}}(_))),W.graphOptionXref&&(F=Object.assign({},{calculatorName:"",calculatorIndex:0},W.graphOptionXref,{valueNumber:W.type===1?p[F]:0,valueBoolean:W.type===0?p[F]:!1,valueString:W.type===2?p[F]:""}),I.push(F)))}(N.length!==0||I.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(I),this.F=(this.F===void 0?[]:this.F).concat(N))}};function y0(p){var g,w,N,I,_,k,F;return U(function(W){switch(W.h){case 1:if(!p.u)return W.return();if(!p.F){W.h=2;break}g=i(p.F),w=g.next();case 3:if(w.done){W.h=5;break}return N=w.value,C(W,N(),4);case 4:w=g.next(),W.h=3;break;case 5:p.F=void 0;case 2:if(p.H){for(I=new p.i.GraphOptionChangeRequestList,_=i(p.H),k=_.next();!k.done;k=_.next())F=k.value,I.push_back(F);p.j.changeOptions(I),I.delete(),p.H=void 0}p.u=!1,W.h=0}})}t.initialize=function(){var p=this;return U(function(g){return g.h==1?C(g,m0(p),2):g.h!=3?C(g,g0(p),3):C(g,y0(p),0)})};function go(p,g){var w,N;return U(function(I){return g in p.L?I.return(p.L[g]):(w=p.locateFile(g,""),N=fetch(w).then(function(_){return _.arrayBuffer()}),p.L[g]=N,I.return(N))})}t.overrideFile=function(p,g){this.j?this.j.overrideFile(p,g):this.D[p]=g},t.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},t.send=function(p,g){var w=this,N,I,_,k,F,W,G,X,ie;return U(function(re){switch(re.h){case 1:return w.h.inputs?(N=1e3*(g??performance.now()),C(re,w.I,2)):re.return();case 2:return C(re,w.initialize(),3);case 3:for(I=new w.i.PacketDataList,_=i(Object.keys(p)),k=_.next();!k.done;k=_.next())if(F=k.value,W=w.h.inputs[F]){e:{var Z=p[F];switch(W.type){case"video":var ue=w.s[W.stream];if(ue||(ue=new Qa(w.i,w.K),w.s[W.stream]=ue),ue.m===0&&(ue.m=ue.i.createTexture()),typeof HTMLVideoElement<"u"&&Z instanceof HTMLVideoElement)var he=Z.videoWidth,ke=Z.videoHeight;else typeof HTMLImageElement<"u"&&Z instanceof HTMLImageElement?(he=Z.naturalWidth,ke=Z.naturalHeight):(he=Z.width,ke=Z.height);ke={glName:ue.m,width:he,height:ke},he=ue.h,he.canvas.width=ke.width,he.canvas.height=ke.height,he.activeTexture(he.TEXTURE0),ue.i.bindTexture2d(ue.m),he.texImage2D(he.TEXTURE_2D,0,he.RGBA,he.RGBA,he.UNSIGNED_BYTE,Z),ue.i.bindTexture2d(0),ue=ke;break e;case"detections":for(ue=w.s[W.stream],ue||(ue=new l0(w.i),w.s[W.stream]=ue),ue.data||(ue.data=new ue.h.DetectionListData),ue.data.reset(Z.length),ke=0;ke<Z.length;++ke){he=Z[ke];var Ce=ue.data,Ze=Ce.setBoundingBox,At=ke,mt=he.la,xe=new mo;if(an(xe,1,mt.ra),an(xe,2,mt.sa),an(xe,3,mt.height),an(xe,4,mt.width),an(xe,5,mt.rotation),on(xe,6,mt.pa),mt=xe.l(),Ze.call(Ce,At,mt),he.ea)for(Ce=0;Ce<he.ea.length;++Ce){xe=he.ea[Ce],Ze=ue.data,At=Ze.addNormalizedLandmark,mt=ke,xe=Object.assign({},xe,{visibility:xe.visibility?xe.visibility:0});var Je=new Dr;an(Je,1,xe.x),an(Je,2,xe.y),an(Je,3,xe.z),xe.visibility&&an(Je,4,xe.visibility),xe=Je.l(),At.call(Ze,mt,xe)}if(he.ba)for(Ce=0;Ce<he.ba.length;++Ce)Ze=ue.data,At=Ze.addClassification,mt=ke,xe=he.ba[Ce],Je=new Or,an(Je,2,xe.score),xe.index&&on(Je,1,xe.index),xe.label&&on(Je,3,xe.label),xe.displayName&&on(Je,4,xe.displayName),xe=Je.l(),At.call(Ze,mt,xe)}ue=ue.data;break e;default:ue={}}}switch(G=ue,X=W.stream,W.type){case"video":I.pushTexture2d(Object.assign({},G,{stream:X,timestamp:N}));break;case"detections":ie=G,ie.stream=X,ie.timestamp=N,I.pushDetectionList(ie);break;default:throw Error("Unknown input config type: '"+W.type+"'")}}return w.j.send(I),C(re,w.I,4);case 4:I.delete(),re.h=0}})};function x0(p,g,w){var N,I,_,k,F,W,G,X,ie,re,Z,ue,he,ke;return U(function(Ce){switch(Ce.h){case 1:if(!w)return Ce.return(g);for(N={},I=0,_=i(Object.keys(w)),k=_.next();!k.done;k=_.next())F=k.value,W=w[F],typeof W!="string"&&W.type==="texture"&&g[W.stream]!==void 0&&++I;1<I&&(p.M=!1),G=i(Object.keys(w)),k=G.next();case 2:if(k.done){Ce.h=4;break}if(X=k.value,ie=w[X],typeof ie=="string")return he=N,ke=X,C(Ce,b0(p,X,g[ie]),14);if(re=g[ie.stream],ie.type==="detection_list"){if(re){for(var Ze=re.getRectList(),At=re.getLandmarksList(),mt=re.getClassificationsList(),xe=[],Je=0;Je<Ze.size();++Je){var kn=u0(Ze.get(Je)),w0=un(kn,1),$0=un(kn,2),N0=un(kn,3),S0=un(kn,4),C0=un(kn,5,0),yo=void 0;yo=yo===void 0?0:yo,kn={la:{ra:w0,sa:$0,height:N0,width:S0,rotation:C0,pa:lo(jt(kn,6),yo)},ea:co(hl(At.get(Je)),Dr,1).map(ml),ba:fl(ul(mt.get(Je)))},xe.push(kn)}Ze=xe}else Ze=[];N[X]=Ze,Ce.h=7;break}if(ie.type==="proto_list"){if(re){for(Ze=Array(re.size()),At=0;At<re.size();At++)Ze[At]=re.get(At);re.delete()}else Ze=[];N[X]=Ze,Ce.h=7;break}if(re===void 0){Ce.h=3;break}if(ie.type==="float_list"){N[X]=re,Ce.h=7;break}if(ie.type==="proto"){N[X]=re,Ce.h=7;break}if(ie.type!=="texture")throw Error("Unknown output config type: '"+ie.type+"'");return Z=p.v[X],Z||(Z=new Qa(p.i,p.K),p.v[X]=Z),C(Ce,yl(Z,re,p.M),13);case 13:ue=Ce.i,N[X]=ue;case 7:ie.transform&&N[X]&&(N[X]=ie.transform(N[X])),Ce.h=3;break;case 14:he[ke]=Ce.i;case 3:k=G.next(),Ce.h=2;break;case 4:return Ce.return(N)}})}function b0(p,g,w){var N;return U(function(I){return typeof w=="number"||w instanceof Uint8Array||w instanceof p.i.Uint8BlobList?I.return(w):w instanceof p.i.Texture2dDataOut?(N=p.v[g],N||(N=new Qa(p.i,p.K),p.v[g]=N),I.return(yl(N,w,p.M))):I.return(void 0)})}function v0(p,g){for(var w=g.name||"$",N=[].concat(u(g.wants)),I=new p.i.StringList,_=i(g.wants),k=_.next();!k.done;k=_.next())I.push_back(k.value);_=p.i.PacketListener.implement({onResults:function(F){for(var W={},G=0;G<g.wants.length;++G)W[N[G]]=F.get(G);var X=p.listeners[w];X&&(p.I=x0(p,W,g.outs).then(function(ie){ie=X(ie);for(var re=0;re<g.wants.length;++re){var Z=W[N[re]];typeof Z=="object"&&Z.hasOwnProperty&&Z.hasOwnProperty("delete")&&Z.delete()}ie&&(p.I=ie)}))}}),p.j.attachMultiListener(I,_),I.delete()}t.onResults=function(p,g){this.listeners[g||"$"]=p},se("Solution",Za),se("OptionType",{BOOL:0,NUMBER:1,ta:2,0:"BOOL",1:"NUMBER",2:"STRING"});function bl(p){return p===void 0&&(p=0),p===1?"hand_landmark_full.tflite":"hand_landmark_lite.tflite"}function vl(p){var g=this;p=p||{},this.h=new Za({locateFile:p.locateFile,files:function(w){return[{url:"hands_solution_packed_assets_loader.js"},{simd:!1,url:"hands_solution_wasm_bin.js"},{simd:!0,url:"hands_solution_simd_wasm_bin.js"},{data:!0,url:bl(w.modelComplexity)}]},graph:{url:"hands.binarypb"},inputs:{image:{type:"video",stream:"input_frames_gpu"}},listeners:[{wants:["multi_hand_landmarks","multi_hand_world_landmarks","image_transformed","multi_handedness"],outs:{image:"image_transformed",multiHandLandmarks:{type:"proto_list",stream:"multi_hand_landmarks",transform:gl},multiHandWorldLandmarks:{type:"proto_list",stream:"multi_hand_world_landmarks",transform:gl},multiHandedness:{type:"proto_list",stream:"multi_handedness",transform:function(w){return w.map(function(N){return fl(ul(N))[0]})}}}}],options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumHands:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculator",fieldName:"int_value"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(w){var N,I,_;return U(function(k){return k.h==1?(N=bl(w),I="third_party/mediapipe/modules/hand_landmark/"+N,C(k,go(g.h,N),2)):(_=k.i,g.h.overrideFile(I,_),k.return(!0))})}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"handlandmarktrackinggpu__palmdetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"handlandmarktrackinggpu__handlandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}}}})}t=vl.prototype,t.close=function(){return this.h.close(),Promise.resolve()},t.onResults=function(p){this.h.onResults(p)},t.initialize=function(){var p=this;return U(function(g){return C(g,p.h.initialize(),0)})},t.reset=function(){this.h.reset()},t.send=function(p){var g=this;return U(function(w){return C(w,g.h.send(p),0)})},t.setOptions=function(p){this.h.setOptions(p)},se("Hands",vl),se("HAND_CONNECTIONS",[[0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]]),se("VERSION","0.4.1675469240")}).call(bt);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R0=1e-7,A0=1e-4;class O0{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Yh{refCount(e){return gt("refCount")}incRef(e){return gt("incRef")}timerAvailable(){return!0}time(e){return gt("time")}read(e){return gt("read")}readSync(e){return gt("readSync")}readToGPU(e,n){return gt("readToGPU")}numDataIds(){return gt("numDataIds")}disposeData(e,n){return gt("disposeData")}write(e,n,r){return gt("write")}move(e,n,r,s,o){return gt("move")}createTensorFromGPUData(e,n,r){return gt("createTensorFromGPUData")}memory(){return gt("memory")}floatPrecision(){return gt("floatPrecision")}epsilon(){return this.floatPrecision()===32?R0:A0}dispose(){return gt("dispose")}}function gt(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(t,e,n){return Math.max(t,Math.min(e,n))}function pu(t){return t%2===0?t:t+1}function Ns(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function D0(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function E(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function It(t,e,n=""){E(De(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function es(t){E(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function j(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function F0(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==null&&e[n]!==null&&t[n]!==e[n])return!1;return!0}function De(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function jr(t){return t%1===0}function bi(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function Ur(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function wl(t,e=s=>0,n,r){return new Promise((s,o)=>{let a=0;const i=()=>{if(t()){s();return}a++;const u=e(a);if(n!=null&&a>=n){o();return}r!=null?r(i,u):setTimeout(i,u)};i()})}function P0(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(t[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(t[o]<0)throw Error(`Shapes can not be < 0. Found ${t[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function ze(t,e){const n=e.length;return t=t==null?e.map((r,s)=>s):[].concat(t),E(t.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),E(t.every(r=>jr(r)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(r=>r<0?n+r:r)}function Un(t,e){const n=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:ze(e,t).sort();let a=0;for(let i=0;i<t.length;++i){if(o!=null){if(o[a]===i&&t[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${t[i]}' is not 1`);(o[a]==null||o[a]>i)&&t[i]===1&&(n.push(t[i]),r.push(i)),o[a]<=i&&a++}t[i]!==1&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function Ln(t,e){return We(t,e)}function We(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function L0(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function B0(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function V0(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function Po(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function M0(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function sa(t){return typeof t=="string"||t instanceof String}function U0(t){return typeof t=="boolean"}function W0(t){return typeof t=="number"}function Hs(t){return Array.isArray(t)?Hs(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":W0(t)?"float32":sa(t)?"string":U0(t)?"bool":"float32"}function vi(t){return!!(t&&t.constructor&&t.call&&t.apply)}function wi(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function qe(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function Qh(t,e,n,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=n[t+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<o;u++)s[u]=Qh(t+u*i,a,n,r)}return s}function $i(t,e,n=!1){if(t.length===0)return e[0];const r=t.reduce((s,o)=>s*o)*(n?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return Qh(0,t,e,n)}function Zh(t,e){const n=Bn(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function Bn(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function kt(t){t.forEach(e=>{E(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function Ni(t,e,n){if(e===0)return 0;if(e===1)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function fu(t,e,n){if(e===0)return[];if(e===1)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}function cr(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $l="tfjsflags";class z0{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=G0,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,r){if(this.flagRegistry[e]={evaluationFn:n,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(cr(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);$l in e&&e[$l].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=H0(s,o)})}}function G0(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(j0(e,r[0],r[1]),r.join("="))),e}function j0(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function H0(t,e){const n=e.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:e}function M(){return Jh}let Jh=null;function K0(t){Jh=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ja;function ed(){if(Ja==null){let t;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else if(typeof self<"u")t=self;else throw new Error("Could not find a global object");Ja=t}return Ja}function q0(){const t=ed();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function mu(t,e){const n=q0();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const td="Abs",nd="Acos",rd="Acosh",gu="Add",sd="AddN",od="All",ad="Any",id="ArgMax",ud="ArgMin",cd="Asin",ld="Asinh",hd="Atan",dd="Atanh",pd="Atan2",fd="AvgPool",X0="AvgPoolGrad",md="AvgPool3D",Y0="AvgPool3DGrad",gd="BatchMatMul",yd="BatchToSpaceND",xd="Bincount",bd="BitwiseAnd",vd="BroadcastArgs",yu="Cast",wd="Ceil",$d="ClipByValue",Nd="Complex",Sd="ComplexAbs",Cd="Concat",Td="Conv2D",Ed="Conv2DBackpropFilter",Id="Conv2DBackpropInput",kd="Conv3D",Q0="Conv3DBackpropFilterV2",_d="Conv3DBackpropInputV2",Rd="Cos",Ad="Cosh",Od="Cumprod",Dd="Cumsum",Fd="CropAndResize",Pd="DenseBincount",Ld="DepthToSpace",Bd="DepthwiseConv2dNative",Vd="DepthwiseConv2dNativeBackpropFilter",Md="DepthwiseConv2dNativeBackpropInput",Ud="Diag",Wd="Dilation2D",zd="RealDiv",Gd="Einsum",jd="Elu",Z0="EluGrad",Hd="Erf",Kd="Equal",qd="Exp",Xd="ExpandDims",Yd="Expm1",Qd="FFT",Zd="Fill",Jd="FlipLeftRight",ep="Floor",tp="FloorDiv",np="FusedBatchNorm",rp="GatherV2",sp="GatherNd",op="Greater",ap="GreaterEqual",xu="Identity",ip="IFFT",up="Imag",cp="IsFinite",lp="IsInf",hp="IsNan",dp="LeakyRelu",pp="Less",fp="LessEqual",mp="LinSpace",gp="Log",yp="Log1p",xp="LogicalAnd",bp="LogicalNot",vp="LogicalOr",wp="LRN",J0="LRNGrad",$p="Max",Np="Maximum",Sp="MaxPool",eb="MaxPoolGrad",Cp="MaxPool3D",tb="MaxPool3DGrad",Tp="MaxPoolWithArgmax",Ep="Mean",Ip="Min",kp="Minimum",_p="MirrorPad",Rp="Mod",Ap="Multinomial",Op="Multiply",Dp="Neg",Fp="NotEqual",Pp="NonMaxSuppressionV3",Lp="NonMaxSuppressionV4",Bp="NonMaxSuppressionV5",Vp="OnesLike",Mp="OneHot",Up="Pack",Wp="PadV2",zp="Pow",Gp="Prelu",jp="Prod",Hp="RaggedGather",Kp="RaggedRange",qp="RaggedTensorToTensor",Xp="Range",Yp="Real",Qp="Reciprocal",Zp="Relu",Jp="Reshape",ef="ResizeNearestNeighbor",nb="ResizeNearestNeighborGrad",tf="ResizeBilinear",rb="ResizeBilinearGrad",nf="Relu6",rf="Reverse",sf="Round",of="Rsqrt",af="ScatterNd",uf="TensorScatterUpdate",cf="SearchSorted",lf="Select",hf="Selu",df="Slice",pf="Sin",ff="Sinh",mf="Sign",gf="Sigmoid",yf="Softplus",xf="Sqrt",bf="Sum",vf="SpaceToBatchND",wf="SplitV",$f="Softmax",Nf="SparseFillEmptyRows",Sf="SparseReshape",Cf="SparseSegmentMean",Tf="SparseSegmentSum",Ef="SparseToDense",If="SquaredDifference",sb="Square",kf="StaticRegexReplace",_f="StridedSlice",Rf="StringNGrams",Af="StringSplit",Of="StringToHashBucketFast",Df="Sub",Ff="Tan",Pf="Tanh",bu="Tile",Lf="TopK",Bf="Transform",_o="Transpose",Vf="Unique",Mf="Unpack",Uf="UnsortedSegmentSum",Wf="ZerosLike",zf="Step",Si="FromPixels",Gf="RotateWithOffset",Ci="_FusedMatMul",Ti="FusedConv2D",Ei="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(...t)}function ob(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo=mu("kernelRegistry",()=>new Map),ab=mu("gradRegistry",()=>new Map);function Ii(t,e){const n=jf(t,e);return Lo.get(n)}function Nl(t){return ab.get(t)}function Sl(t){const e=Lo.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===t&&n.push(a)}return n}function ib(t){const{kernelName:e,backendName:n}=t,r=jf(e,n);Lo.has(r)&&Yt(`The kernel '${e}' for backend '${n}' is already registered`),Lo.set(r,t)}function jf(t,e){return`${e}_${t}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hf(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var Kf=Ee,Ft=null;try{Ft=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ee(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}Ee.prototype.__isLong__;Object.defineProperty(Ee.prototype,"__isLong__",{value:!0});function $t(t){return(t&&t.__isLong__)===!0}Ee.isLong=$t;var Cl={},Tl={};function $r(t,e){var n,r,s;return e?(t>>>=0,(s=0<=t&&t<256)&&(r=Tl[t],r)?r:(n=Ie(t,(t|0)<0?-1:0,!0),s&&(Tl[t]=n),n)):(t|=0,(s=-128<=t&&t<128)&&(r=Cl[t],r)?r:(n=Ie(t,t<0?-1:0,!1),s&&(Cl[t]=n),n))}Ee.fromInt=$r;function Pt(t,e){if(isNaN(t))return e?rr:Lt;if(e){if(t<0)return rr;if(t>=qf)return Qf}else{if(t<=-Il)return vt;if(t+1>=Il)return Yf}return t<0?Pt(-t,e).neg():Ie(t%Hr|0,t/Hr|0,e)}Ee.fromNumber=Pt;function Ie(t,e,n){return new Ee(t,e,n)}Ee.fromBits=Ie;var Bo=Math.pow;function vu(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return Lt;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return vu(t.substring(1),e,n).neg();for(var s=Pt(Bo(n,8)),o=Lt,a=0;a<t.length;a+=8){var i=Math.min(8,t.length-a),u=parseInt(t.substring(a,a+i),n);if(i<8){var c=Pt(Bo(n,i));o=o.mul(c).add(Pt(u))}else o=o.mul(s),o=o.add(Pt(u))}return o.unsigned=e,o}Ee.fromString=vu;function tn(t,e){return typeof t=="number"?Pt(t,e):typeof t=="string"?vu(t,e):Ie(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}Ee.fromValue=tn;var El=65536,ub=1<<24,Hr=El*El,qf=Hr*Hr,Il=qf/2,kl=$r(ub),Lt=$r(0);Ee.ZERO=Lt;var rr=$r(0,!0);Ee.UZERO=rr;var Mr=$r(1);Ee.ONE=Mr;var Xf=$r(1,!0);Ee.UONE=Xf;var ki=$r(-1);Ee.NEG_ONE=ki;var Yf=Ie(-1,2147483647,!1);Ee.MAX_VALUE=Yf;var Qf=Ie(-1,-1,!0);Ee.MAX_UNSIGNED_VALUE=Qf;var vt=Ie(0,-2147483648,!1);Ee.MIN_VALUE=vt;var Y=Ee.prototype;Y.toInt=function(){return this.unsigned?this.low>>>0:this.low};Y.toNumber=function(){return this.unsigned?(this.high>>>0)*Hr+(this.low>>>0):this.high*Hr+(this.low>>>0)};Y.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(vt)){var n=Pt(e),r=this.div(n),s=r.mul(n).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=Pt(Bo(e,6),this.unsigned),a=this,i="";;){var u=a.div(o),c=a.sub(u.mul(o)).toInt()>>>0,l=c.toString(e);if(a=u,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};Y.getHighBits=function(){return this.high};Y.getHighBitsUnsigned=function(){return this.high>>>0};Y.getLowBits=function(){return this.low};Y.getLowBitsUnsigned=function(){return this.low>>>0};Y.getNumBitsAbs=function(){if(this.isNegative())return this.eq(vt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};Y.isZero=function(){return this.high===0&&this.low===0};Y.eqz=Y.isZero;Y.isNegative=function(){return!this.unsigned&&this.high<0};Y.isPositive=function(){return this.unsigned||this.high>=0};Y.isOdd=function(){return(this.low&1)===1};Y.isEven=function(){return(this.low&1)===0};Y.equals=function(e){return $t(e)||(e=tn(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Y.eq=Y.equals;Y.notEquals=function(e){return!this.eq(e)};Y.neq=Y.notEquals;Y.ne=Y.notEquals;Y.lessThan=function(e){return this.comp(e)<0};Y.lt=Y.lessThan;Y.lessThanOrEqual=function(e){return this.comp(e)<=0};Y.lte=Y.lessThanOrEqual;Y.le=Y.lessThanOrEqual;Y.greaterThan=function(e){return this.comp(e)>0};Y.gt=Y.greaterThan;Y.greaterThanOrEqual=function(e){return this.comp(e)>=0};Y.gte=Y.greaterThanOrEqual;Y.ge=Y.greaterThanOrEqual;Y.compare=function(e){if($t(e)||(e=tn(e)),this.eq(e))return 0;var n=this.isNegative(),r=e.isNegative();return n&&!r?-1:!n&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Y.comp=Y.compare;Y.negate=function(){return!this.unsigned&&this.eq(vt)?vt:this.not().add(Mr)};Y.neg=Y.negate;Y.add=function(e){$t(e)||(e=tn(e));var n=this.high>>>16,r=this.high&65535,s=this.low>>>16,o=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,c=e.low&65535,l=0,h=0,d=0,f=0;return f+=o+c,d+=f>>>16,f&=65535,d+=s+u,h+=d>>>16,d&=65535,h+=r+i,l+=h>>>16,h&=65535,l+=n+a,l&=65535,Ie(d<<16|f,l<<16|h,this.unsigned)};Y.subtract=function(e){return $t(e)||(e=tn(e)),this.add(e.neg())};Y.sub=Y.subtract;Y.multiply=function(e){if(this.isZero())return Lt;if($t(e)||(e=tn(e)),Ft){var n=Ft.mul(this.low,this.high,e.low,e.high);return Ie(n,Ft.get_high(),this.unsigned)}if(e.isZero())return Lt;if(this.eq(vt))return e.isOdd()?vt:Lt;if(e.eq(vt))return this.isOdd()?vt:Lt;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(kl)&&e.lt(kl))return Pt(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,o=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,c=e.low>>>16,l=e.low&65535,h=0,d=0,f=0,m=0;return m+=a*l,f+=m>>>16,m&=65535,f+=o*l,d+=f>>>16,f&=65535,f+=a*c,d+=f>>>16,f&=65535,d+=s*l,h+=d>>>16,d&=65535,d+=o*c,h+=d>>>16,d&=65535,d+=a*u,h+=d>>>16,d&=65535,h+=r*l+s*c+o*u+a*i,h&=65535,Ie(f<<16|m,h<<16|d,this.unsigned)};Y.mul=Y.multiply;Y.divide=function(e){if($t(e)||(e=tn(e)),e.isZero())throw Error("division by zero");if(Ft){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Ft.div_u:Ft.div_s)(this.low,this.high,e.low,e.high);return Ie(n,Ft.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?rr:Lt;var r,s,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return rr;if(e.gt(this.shru(1)))return Xf;o=rr}else{if(this.eq(vt)){if(e.eq(Mr)||e.eq(ki))return vt;if(e.eq(vt))return Mr;var a=this.shr(1);return r=a.div(e).shl(1),r.eq(Lt)?e.isNegative()?Mr:ki:(s=this.sub(e.mul(r)),o=r.add(s.div(e)),o)}else if(e.eq(vt))return this.unsigned?rr:Lt;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=Lt}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(r)/Math.LN2),u=i<=48?1:Bo(2,i-48),c=Pt(r),l=c.mul(e);l.isNegative()||l.gt(s);)r-=u,c=Pt(r,this.unsigned),l=c.mul(e);c.isZero()&&(c=Mr),o=o.add(c),s=s.sub(l)}return o};Y.div=Y.divide;Y.modulo=function(e){if($t(e)||(e=tn(e)),Ft){var n=(this.unsigned?Ft.rem_u:Ft.rem_s)(this.low,this.high,e.low,e.high);return Ie(n,Ft.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Y.mod=Y.modulo;Y.rem=Y.modulo;Y.not=function(){return Ie(~this.low,~this.high,this.unsigned)};Y.and=function(e){return $t(e)||(e=tn(e)),Ie(this.low&e.low,this.high&e.high,this.unsigned)};Y.or=function(e){return $t(e)||(e=tn(e)),Ie(this.low|e.low,this.high|e.high,this.unsigned)};Y.xor=function(e){return $t(e)||(e=tn(e)),Ie(this.low^e.low,this.high^e.high,this.unsigned)};Y.shiftLeft=function(e){return $t(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ie(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ie(0,this.low<<e-32,this.unsigned)};Y.shl=Y.shiftLeft;Y.shiftRight=function(e){return $t(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ie(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ie(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Y.shr=Y.shiftRight;Y.shiftRightUnsigned=function(e){if($t(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var r=this.low;return Ie(r>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?Ie(n,0,this.unsigned):Ie(n>>>e-32,0,this.unsigned)};Y.shru=Y.shiftRightUnsigned;Y.shr_u=Y.shiftRightUnsigned;Y.toSigned=function(){return this.unsigned?Ie(this.low,this.high,!1):this};Y.toUnsigned=function(){return this.unsigned?this:Ie(this.low,this.high,!0)};Y.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Y.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Y.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Ee.fromBytes=function(e,n,r){return r?Ee.fromBytesLE(e,n):Ee.fromBytesBE(e,n)};Ee.fromBytesLE=function(e,n){return new Ee(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};Ee.fromBytesBE=function(e,n){return new Ee(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};const Zf=js(Kf),cb=k0({__proto__:null,default:Zf},[Kf]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=Zf||cb;function oa(t){return Jn.fromString(t,!0,16)}const Jf=oa("c3a5c85c97cb3127"),Zn=oa("b492b66fbe98f273"),rt=oa("9ae16a3b2f90404f");function _i(t){return t.xor(t.shru(47))}function em(t,e,n){const r=t.slice(e,e+n);return Jn.fromBytes(Array.from(r),!0,!0)}function Se(t,e){return em(t,e,8)}function _l(t,e){return em(t,e,4)}function Ue(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function Dn(t,e,n=oa("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function lb(t,e,n,r,s,o){s=s.add(t),o=Ue(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(n),o=o.add(Ue(s,44)),[s.add(r),o.add(a)]}function xo(t,e,n,r){return lb(Se(t,e),Se(t,e+8),Se(t,e+16),Se(t,e+24),n,r)}function hb(t,e=t.length){if(e>=8){const n=rt.add(e*2),r=Se(t,0).add(rt),s=Se(t,e-8),o=Ue(s,37).mul(n).add(r),a=Ue(r,25).add(s).mul(n);return Dn(o,a,n)}if(e>=4){const n=rt.add(e*2),r=_l(t,0);return Dn(r.shl(3).add(e),_l(t,e-4),n)}if(e>0){const n=t[0],r=t[e>>1],s=t[e-1],o=n+(r<<8),a=e+(s<<2);return _i(rt.mul(o).xor(Jf.mul(a))).mul(rt)}return rt}function db(t,e=t.length){const n=rt.add(e*2),r=Se(t,0).mul(Zn),s=Se(t,8),o=Se(t,e-8).mul(n),a=Se(t,e-16).mul(rt);return Dn(Ue(r.add(s),43).add(Ue(o,30)).add(a),r.add(Ue(s.add(rt),18)).add(o),n)}function pb(t,e=t.length){const n=rt.add(e*2),r=Se(t,0).mul(rt),s=Se(t,8),o=Se(t,e-8).mul(n),a=Se(t,e-16).mul(rt),i=Ue(r.add(s),43).add(Ue(o,30)).add(a),u=Dn(i,r.add(Ue(s.add(rt),18)).add(o),n),c=Se(t,16).mul(n),l=Se(t,24),h=i.add(Se(t,e-32)).mul(n),d=u.add(Se(t,e-24)).mul(n);return Dn(Ue(c.add(l),43).add(Ue(h,30)).add(d),c.add(Ue(l.add(r),18)).add(h),n)}function fb(t,e=t.length){const n=Jn.fromNumber(81,!0);if(e<=32)return e<=16?hb(t,e):db(t,e);if(e<=64)return pb(t,e);let r=n,s=n.mul(Zn).add(113),o=_i(s.mul(rt).add(113)).mul(rt),a=[Jn.UZERO,Jn.UZERO],i=[Jn.UZERO,Jn.UZERO];r=r.mul(rt).add(Se(t,0));let u=0;const c=(e-1>>6)*64,l=c+(e-1&63)-63;do r=Ue(r.add(s).add(a[0]).add(Se(t,u+8)),37).mul(Zn),s=Ue(s.add(a[1]).add(Se(t,u+48)),42).mul(Zn),r=r.xor(i[1]),s=s.add(a[0]).add(Se(t,u+40)),o=Ue(o.add(i[0]),33).mul(Zn),a=xo(t,u,a[1].mul(Zn),r.add(i[0])),i=xo(t,u+32,o.add(i[1]),s.add(Se(t,u+16))),[o,r]=[r,o],u+=64;while(u!==c);const h=Zn.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=Ue(r.add(s).add(a[0]).add(Se(t,u+8)),37).mul(h),s=Ue(s.add(a[1]).add(Se(t,u+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(Se(t,u+40))),o=Ue(o.add(i[0]),33).mul(h),a=xo(t,u,a[1].mul(h),r.add(i[0])),i=xo(t,u+32,o.add(i[1]),s.add(Se(t,u+16))),[o,r]=[r,o],Dn(Dn(a[0],i[0],h).add(_i(s).mul(Jf)).add(o),Dn(a[1],i[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(t,e){return e==="string"?ar(t):aa([t],e)}function mb(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function aa(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=lr(t)),M().getBool("DEBUG")&&L0(t,e),mb(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let r=0;r<n.length;++r)Math.round(t[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${e}`)}function Kt(){return M().platform.now()}function ar(t,e="utf-8"){return e=e||"utf-8",M().platform.encode(t,e)}function Kr(t,e="utf-8"){return e=e||"utf-8",M().platform.decode(t,e)}function Mt(t){return M().platform.isTypedArray!=null?M().platform.isTypedArray(t):Hf(t)}function lr(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||cr(t)||t==null||Mt(t)&&n)e.push(t);else if(Array.isArray(t)||Mt(t))for(let r=0;r<t.length;++r)lr(t[r],e,n);else{let r=-1;for(const s of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)lr(t[s],e,n)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gb{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new xb)}profileKernel(e,n,r){let s;const o=()=>{s=r()};let a;const i=Kt();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of s)c.dataSync();a=Promise.resolve({kernelMs:Kt()-i})}if(M().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<s.length;c++){const l=s[c];l.data().then(h=>{yb(h,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:n,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(i=>{Promise.all([i.data(),s,a]).then(u=>{this.logger.logKernelProfile(n,i,u[0],u[1],o,u[2])})})}}function yb(t,e,n){if(e!=="float32")return!1;for(let r=0;r<t.length;r++){const s=t[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class xb{logKernelProfile(e,n,r,s,o,a){const i=typeof s=="number"?Ur(`${s}ms`,9):s.error,u=Ur(e,25),c=n.rank,l=n.size,h=Ur(n.shape.toString(),14);let d="";for(const f in o){const m=o[f];if(m!=null){const x=m.shape||n.shape,y=x.length;d+=`${f}: ${y}D ${y>0?x:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${h}	%c${l}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(t,e,n){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const c=t[u],l=c.inputs;for(const h in l){const d=l[h];let f=!1;for(let m=0;m<e.length;m++)if(r[d.id]){c.outputs.forEach(x=>r[x.id]=!0),f=!0,s[c.id]=!0;break}if(f)break}}const o={};o[n.id]=!0;const a={};for(let u=t.length-1;u>=0;u--){const c=t[u],l=c.inputs;for(let h=0;h<c.outputs.length;h++)if(o[c.outputs[h].id]){for(const d in l)o[l[d].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<t.length;u++){const c=t[u];if(s[c.id]&&a[c.id]){const l={};for(const d in c.inputs){const f=c.inputs[d];r[f.id]&&(l[d]=f)}const h=Object.assign({},c);h.inputs=l,h.outputs=c.outputs,i.push(h)}}return i}function vb(t,e,n,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const c=t[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=n(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!De(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(t[l.id]==null)t[l.id]=c;else{const h=t[l.id];t[l.id]=r(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rl=20,Ss=3,ei=7;function wb(t,e,n,r){const s=qe(e),o=$b(t,e,n,s),a=e.length,i=Ro(t,e,n,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function $b(t,e,n,r){const s=j(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u=n==="complex64"?Es(t):t;if(i>1)for(let c=0;c<s/o;c++){const l=c*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],Ts(u[l+h],0,n).length)}return a}function Ts(t,e,n){let r;return Array.isArray(t)?r=`${parseFloat(t[0].toFixed(ei))} + ${parseFloat(t[1].toFixed(ei))}j`:sa(t)?r=`'${t}'`:n==="bool"?r=tm(t):r=parseFloat(t.toFixed(ei)).toString(),Ur(r,e)}function tm(t){return t===0?"false":"true"}function Ro(t,e,n,r,s,o=!0){const a=n==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(n==="complex64"){const x=Es(t);return[Ts(x[0],0,n)]}return n==="bool"?[tm(t[0])]:[t[0].toString()]}if(u===1){if(i>Rl){const y=Ss*a;let b=Array.from(t.slice(0,y)),$=Array.from(t.slice((i-Ss)*a,i*a));return n==="complex64"&&(b=Es(b),$=Es($)),["["+b.map((T,C)=>Ts(T,s[C],n)).join(", ")+", ..., "+$.map((T,C)=>Ts(T,s[i-Ss+C],n)).join(", ")+"]"]}return["["+(n==="complex64"?Es(t):Array.from(t)).map((y,b)=>Ts(y,s[b],n)).join(", ")+"]"]}const c=e.slice(1),l=r.slice(1),h=r[0]*a,d=[];if(i>Rl){for(let x=0;x<Ss;x++){const y=x*h,b=y+h;d.push(...Ro(t.slice(y,b),c,n,l,s,!1))}d.push("...");for(let x=i-Ss;x<i;x++){const y=x*h,b=y+h;d.push(...Ro(t.slice(y,b),c,n,l,s,x===i-1))}}else for(let x=0;x<i;x++){const y=x*h,b=y+h;d.push(...Ro(t.slice(y,b),c,n,l,s,x===i-1))}const f=u===2?",":"";d[0]="["+(i>0?d[0]+f:"");for(let x=1;x<d.length-1;x++)d[x]=" "+d[x]+f;let m=`,
`;for(let x=2;x<u;x++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":m),d}function Es(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qr{constructor(e,n,r){if(this.dtype=n,this.shape=e.slice(),this.size=j(e),r!=null){const s=r.length;E(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||We(n,this.size),this.strides=qe(e)}set(e,...n){n.length===0&&(n=[0]),E(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const r=this.locToIndex(n);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const s of e){if(s<0||s>=this.shape[n]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}n++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let r=0;r<n.length-1;++r)n[r]=Math.floor(e/this.strides[r]),e-=n[r]*this.strides[r];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return qt().makeTensor(this.values,this.shape,this.dtype)}}let qt=null,Lr=null;function Nb(t){qt=t}function Sb(t){Lr=t}class Ve{constructor(e,n,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=j(e),this.strides=qe(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Lr.buffer(this.shape,this.dtype,e)}bufferSync(){return Lr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return $i(this.shape,e,this.dtype==="complex64")}arraySync(){return $i(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=qt().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(r=>Kr(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),qt().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=qt().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>Kr(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await qt().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),qt().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Lr.print(this,e)}clone(){return this.throwIfDisposed(),Lr.clone(this)}toString(e=!1){const n=this.dataSync();return wb(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Lr.cast(this,e)}variable(e=!0,n,r){return this.throwIfDisposed(),qt().makeVariable(this,e,n,r)}}Object.defineProperty(Ve,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function nm(){return mu("Tensor",()=>Ve)}nm();class Vo extends Ve{constructor(e,n,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=n,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!De(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);qt().disposeTensor(this),this.dataId=e.dataId,qt().incRef(this,null)}dispose(){qt().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Vo,Symbol.hasInstance,{value:t=>t instanceof Ve&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Al;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(Al||(Al={}));var Ri;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(Ri||(Ri={}));var Ai;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(Ai||(Ai={}));var Oi;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(Oi||(Oi={}));var Di;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(Di||(Di={}));const Cb={float32:Oi,int32:Ri,bool:Ai,complex64:Di};function fn(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Cb[t][e]}function wu(t){return fn(t,"int32")}function rm(t){return t!=null&&typeof t=="object"&&"texture"in t&&t.texture instanceof WebGLTexture}function sm(t){return typeof GPUBuffer<"u"&&t!=null&&typeof t=="object"&&"buffer"in t&&t.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(t,e){if(t.dtype===e.dtype)return[t,e];const n=fn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Tb(t,e){E(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function om(t){const e=[];return am(t,e,new Set),e}function am(t,e,n){if(t==null)return;if(t instanceof Ve){e.push(t);return}if(!Eb(t))return;const r=t;for(const s in r){const o=r[s];n.has(o)||(n.add(o),am(o,e,n))}}function Eb(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ti(t){return t.kernelName!=null}class Ol{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Xr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ol}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const r=e[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,r=1){return e in this.registryFactory?(Yt(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:r}=this.initializeBackend(e);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new gb(this.backendInstance),!0}setupRegisteredKernels(){Sl(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Sl(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(r&&!(r instanceof Yh)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Yt(`Initialization of backend ${e} failed`),Yt(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Yt(`Initialization of backend ${e} failed`),Yt(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const r=e[n],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const r=this.state.tensorInfo.get(n),s=r.backend,o=this.readSync(n),a=s.refCount(n);s.disposeData(n,!0),r.backend=e,e.move(n,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let r=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=n(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,n,r){e();try{const s=r();return n(),s}catch(s){throw n(),s}}nextTensorId(){return Xr.nextTensorId++}nextVariableId(){return Xr.nextVariableId++}clone(e){const n=D.runKernel(xu,{x:e}),r={x:e},s=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return D.runKernel(yu,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[n],s,o,{}),n}runKernel(e,n,r){if(this.backendName==null&&this.backend,!(Ii(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-n-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let n,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=ti(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ti(e)){const{kernelName:m,inputs:x,attrs:y}=e;this.backendName==null&&this.backend;const b=Ii(m,this.backendName);E(b!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),i=()=>{const $=this.backend.numDataIds();u=b.kernelFunc({inputs:x,attrs:y,backend:this.backend});const T=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,$,T);const C=T.map(R=>R.rank!=null?R:this.makeTensorFromTensorInfo(R));if(s){const R=this.getTensorsForGradient(m,x,C);r=this.saveTensorsForBackwardMode(R)}return C}}else{const{forwardFunc:m}=e,x=y=>{s&&(r=y.map(b=>this.keep(this.clone(b))))};i=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>m(this.backend,x));const b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b),b}}const{inputs:l,attrs:h}=e,d=ti(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=i():(f=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),n=f.outputs)}),s&&this.addTapeNode(c,l,n,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(m=>l[m]!=null?l[m].shape:null),outputShapes:n.map(m=>m.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,n,r){const s=Nl(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let i;s.saveAllInputs?(E(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(n).map(c=>n[c])):i=o.map(c=>n[c]);const u=r.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(e,n,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&sa(e[0])&&(o=e.map(u=>ar(u)));const a=s.write(o,n,r),i=new Ve(n,r,a,this.nextTensorId());if(this.trackTensor(i,s),r==="string"){const u=this.state.tensorInfo.get(a),c=M0(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(e,n,r,s){r=r||"float32";const o={dataId:e,shape:n,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,n){const{dataId:r,shape:s,dtype:o}=e,a=new Ve(s,o,r,this.nextTensorId());return this.trackTensor(a,n),a}makeVariable(e,n=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new Vo(e,n,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Po(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Vo||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*Po(e.dtype);this.state.numBytes-=r}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,r,s,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:r,saved:o},u=Nl(e);u!=null&&(s=u.gradFunc),s!=null&&(i.gradient=c=>(c=c.map((l,h)=>{if(l==null){const d=r[h],f=Bn(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return l}),s(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=om(e),r=new Set(n.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,n,r,s=!1){if(E(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));E(o instanceof Ve,()=>"The result y returned by f() must be a tensor.");const a=bb(this.state.activeTape,n,o);if(!s&&a.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=r??Ib(o.shape),vb(i,a,c=>this.tidy(c),kb);const u=n.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return E(vi(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{E(n.every(i=>i instanceof Ve),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};n.forEach((i,u)=>{s[u]=i});const o=(i,u)=>(r=e(...n,u),E(r.value instanceof Ve,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(vi(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(i,u)=>{const c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];E(l.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(l.every(d=>d instanceof Ve),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return l.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=Kt(),r=await this.backend.time(e);return r.wallMs=Kt()-n,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ol;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Xr.nextTensorId=0;Xr.nextVariableId=0;function Ib(t){const e=Zh(j(t),"float32");return D.makeTensor(e,t,"float32")}function im(){const t=ed();if(t._tfengine==null){const e=new z0(t);t._tfengine=new Xr(e)}return K0(t._tfengine.ENV),Nb(()=>t._tfengine),t._tfengine}const D=im();function kb(t,e){const n={a:t,b:e};return D.runKernel(gu,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(){return typeof navigator<"u"&&navigator!=null}function um(t){if(t||_b()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window<"u"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function cm(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ht=M();ht.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ht.registerFlag("IS_BROWSER",()=>cm());ht.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ht.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ht.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ht.registerFlag("PROD",()=>!1);ht.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ht.getBool("DEBUG"));ht.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ht.registerFlag("IS_TEST",()=>!1);ht.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ht.getBool("DEBUG"));ht.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ht.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ht.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(t,e){let n=t;if(Mt(t))return e==="string"?[]:[t.length];if(rm(t)){const s=t.channels||"RGBA";return[t.height,t.width*s.length]}else if(sm(t))return[t.buffer.size/(e==null?4:Po(e))];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Mt(n)&&e!=="string";)r.push(n.length),n=n[0];return Array.isArray(t)&&M().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&lm(t,r,[]),r}function lm(t,e,n){if(n=n||[],!Array.isArray(t)&&!Mt(t)){E(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}E(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),E(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let s=0;s<t.length;++s)lm(t[s],r,n.concat(s))}function Dl(t,e,n,r){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function S(t,e,n,r="numeric"){if(t instanceof nm())return Dl(r,t.dtype,e,n),t;let s=Hs(t);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Dl(r,s,e,n),t==null||!Mt(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const u=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Wn(t,s);!Mt(t)&&!Array.isArray(t)&&(t=[t]);const i=s!=="string"?aa(t,s):lr(t,[],!0);return D.makeTensor(i,o,s)}function Mo(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((o,a)=>S(o,`${e}[${a}]`,n,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hm="__op";function A(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+hm;const s=(...o)=>{D.startScope(n);try{const a=r(...o);return cr(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(t,e){const n=S(t,"real","complex"),r=S(e,"imag","complex");It(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return D.runKernel(Nd,s)}const Vn=A({complex_:Rb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(t,e,n,r){if(r==null)r=Hs(t);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(sm(t)||rm(t)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return D.backend.createTensorFromGPUData(t,e||n,r)}if(!Mt(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){kt(e);const s=j(e),o=j(n);E(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<n.length;++a){const i=n[a],u=a===n.length-1?i!==j(e.slice(a)):!0;E(n[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!Mt(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=r!=="string"?aa(t,r):lr(t,[],!0),D.makeTensor(t,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(t,e,n){const r=Wn(t,n);return zn(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class nn{static join(e){return new nn(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>Mt(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let n=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=n+s.byteLength;this.shards.push({buffer:s,start:n,end:o}),n=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,n=isNaN(Number(n))?0:n,e=Math.max(0,e),n=Math.min(this.byteLength,n),n<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=n-e,o=new ArrayBuffer(s),a=new Uint8Array(o);let i=0;for(let u=r;u<this.shards.length;u++){const c=this.shards[u],h=e+i-c.start,d=i,m=Math.min(n,c.end)-c.start,x=new Uint8Array(c.buffer,h,m-h);if(a.set(x,d),i+=x.length,n<c.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function n(s){return e<s.start?-1:e>=s.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=Ab(this.shards,n);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function Ab(t,e){let n=0,r=t.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,o=e(t[s]);if(o===0)return s;o<0?r=s:n=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(){return D}function de(t,e){return D.tidy(t,e)}function Ae(t){om(t).forEach(n=>n.dispose())}function ln(t){return D.keep(t)}function Ob(t){return D.setBackend(t)}function Db(){return D.backendName}function Fb(t,e,n=1){return D.registerBackend(t,e,n)}function Pb(){return D.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mn=4;async function Lb(t,e){const n=[],r=[],s=Array.isArray(t)?t.map(a=>a.name):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],u=Array.isArray(t)?t[a].tensor:t[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async h=>{const d=await u.bytes(),f=d.reduce((y,b)=>y+b.length,0)+Mn*d.length,m=new Uint8Array(f);let x=0;for(let y=0;y<d.length;y++){const b=d[y],$=new Uint8Array(new Uint32Array([b.length]).buffer);m.set($,x),x+=Mn,m.set(b,x),x+=b.length}h(m)});r.push(l)}else r.push(u.data());e!=null&&(c.group=e),n.push(c)}const o=await Promise.all(r);return{data:Mb(o),specs:n}}function dm(t,e){const n=new nn(t),r={};let s=0;for(const o of e){const a=Bb(o,(i,u)=>n.slice(s+i,s+u));r[o.name]=pm(o,n.slice(s,s+a)),s+=a}return r}function Bb(t,e){const n=j(t.shape);let r;if("quantization"in t){const s=t.quantization;r=hr[s.dtype]}else if(t.dtype==="string"){let s=0;for(let o=0;o<n;o++)s+=Mn+new Uint32Array(e(s,s+Mn))[0];return s}else r=hr[t.dtype];return n*r}async function Vb(t,e){const n=j(t.shape);let r;if("quantization"in t){const s=t.quantization;r=hr[s.dtype]}else if(t.dtype==="string"){let s=0;for(let o=0;o<n;o++)s+=Mn+new Uint32Array(await e(s,s+Mn))[0];return s}else r=hr[t.dtype];return n*r}function pm(t,e){const n=t.name,r=t.dtype,s=t.shape,o=j(s);let a,i=0;if("quantization"in t){const u=t.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${t.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${t.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${t.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=hr[u.dtype],l=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){a=new Float32Array(l.length);for(let h=0;h<l.length;h++){const d=l[h];a[h]=d*u.scale+u.min}}else if(u.dtype==="float16")a=Kb()(l);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(r==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);a=new Int32Array(l.length);for(let h=0;h<l.length;h++){const d=l[h];a[h]=Math.round(d*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);i+=o*c}else if(r==="string"){const u=j(t.shape);a=[];for(let c=0;c<u;c++){const l=new Uint32Array(e.slice(i,i+Mn))[0];i+=Mn;const h=new Uint8Array(e.slice(i,i+l));a.push(h),i+=l}}else{const u=hr[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const c=new Float32Array(a.length/2),l=new Float32Array(a.length/2);for(let m=0;m<c.length;m++)c[m]=a[m*2],l[m]=a[m*2+1];const h=dn(c,s,"float32"),d=dn(l,s,"float32"),f=Vn(h,d);return h.dispose(),d.dispose(),f}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);i+=o*u}return dn(a,s,r)}async function Fl(t,e,n){let r=new Uint8Array(e);for(;r.byteLength<n;){const{done:s,value:o}=await t.read();if(s&&o==null){const i=n-r.byteLength;throw new Error(`Reader is done but ${i} bytes are still expected`)}const a=new Uint8Array(r.length+o.byteLength);a.set(r,0),a.set(new Uint8Array(o),r.length),r=a}return r.buffer}async function fm(t,e){const n={},r=t.getReader();let s=new ArrayBuffer(0);for(const o of e){const a=await Vb(o,async(c,l)=>(s=await Fl(r,s,l),s.slice(c,l)));s=await Fl(r,s,a);const i=s.slice(0,a);s=s.slice(a);const u=pm(o,i);if(n[o.name]=u,Db()==="webgpu"){const c=Pb();"uploadToGPU"in c&&j(u.shape)>=M().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(u.dataId)}}return n}function Mb(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(o=>{if(e+=o.byteLength,n.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return n.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const $u=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Pl(t){return $u?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function Ub(t){if($u)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,s=e.length;r<s;r++)n+=String.fromCharCode(e[r]);return btoa(n)}function Wb(t){if($u){const r=Buffer.from(t,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer}function zb(t){return nn.join(t)}function Ll(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function mm(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function gm(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(r.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return t.signature!=null&&(r.signature=t.signature),t.userDefinedMetadata!=null&&(r.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(r.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(r.initializerSignature=t.initializerSignature),r}async function Nu(t,e){let n,r;return t.weightsManifest!=null&&([n,r]=await e(t.weightsManifest)),gm(t,n,r)}function Ks(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:Pl(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:Pl(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:new nn(t.weightData).byteLength}}function Fi(t){const e=[];for(const n of t)e.push(...n.weights);return e}function Gb(){const t=n=>{let r=n<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function jb(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function Hb(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function Kb(){const t=Gb(),e=jb(),n=Hb();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let a=0;a<r.length;a++){const i=r[a],u=t[n[i>>10]+(i&1023)]+e[i>>10];o[a]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Re{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Re.instance==null&&(Re.instance=new Re),Re.instance}static registerSaveRouter(e){Re.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Re.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Re.getHandlers(e,"save")}static getLoadHandlers(e,n){return Re.getHandlers(e,"load",n)}static getHandlers(e,n,r){const s=[];return(n==="load"?Re.getInstance().loadRouters:Re.getInstance().saveRouters).forEach(a=>{const i=a(e,r);i!==null&&s.push(i)}),s}}const qb=t=>Re.registerSaveRouter(t),Xb=t=>Re.registerLoadRouter(t),Yb=t=>Re.getSaveHandlers(t),Qb=(t,e)=>Re.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pi="tensorflowjs",Li=1,sr="models_store",An="model_info_store";function ym(){if(!M().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window>"u"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Bi(t){const e=t.result;e.createObjectStore(sr,{keyPath:"modelPath"}),e.createObjectStore(An,{keyPath:"modelPath"})}class dr{constructor(e){if(this.indexedDB=ym(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((r,s)=>{const o=this.indexedDB.open(Pi,Li);o.onupgradeneeded=()=>Bi(o),o.onsuccess=()=>{const a=o.result;if(n==null){const i=a.transaction(sr,"readonly"),c=i.objectStore(sr).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=l=>(a.close(),s(c.error)),i.oncomplete=()=>a.close()}else{n.weightData=nn.join(n.weightData);const i=Ks(n),u=a.transaction(An,"readwrite");let c=u.objectStore(An),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return s(d)}let h;l.onsuccess=()=>{h=a.transaction(sr,"readwrite");const d=h.objectStore(sr);let f;try{f=d.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:i})}catch(m){return s(m)}f.onsuccess=()=>r({modelArtifactsInfo:i}),f.onerror=m=>{c=u.objectStore(An);const x=c.delete(this.modelPath);x.onsuccess=()=>(a.close(),s(f.error)),x.onerror=y=>(a.close(),s(f.error))}},l.onerror=d=>(a.close(),s(l.error)),u.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}dr.URL_SCHEME="indexeddb://";const xm=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(dr.URL_SCHEME)?Zb(t.slice(dr.URL_SCHEME.length)):null;Re.registerSaveRouter(xm);Re.registerLoadRouter(xm);function Zb(t){return new dr(t)}function Jb(t){return t.startsWith(dr.URL_SCHEME)?t.slice(dr.URL_SCHEME.length):t}class e1{constructor(){this.indexedDB=ym()}async listModels(){return new Promise((e,n)=>{const r=this.indexedDB.open(Pi,Li);r.onupgradeneeded=()=>Bi(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(An,"readonly"),i=o.objectStore(An).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},i.onerror=u=>(s.close(),n(i.error)),o.oncomplete=()=>s.close()},r.onerror=s=>n(r.error)})}async removeModel(e){return e=Jb(e),new Promise((n,r)=>{const s=this.indexedDB.open(Pi,Li);s.onupgradeneeded=()=>Bi(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(An,"readwrite"),i=a.objectStore(An),u=i.get(e);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),h=()=>{c=o.transaction(sr,"readwrite");const f=c.objectStore(sr).delete(e);f.onsuccess=()=>n(u.result.modelArtifactsInfo),f.onerror=m=>r(u.error)};l.onsuccess=h,l.onerror=d=>(h(),o.close(),r(u.error))}},u.onerror=l=>(o.close(),r(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn="/",Br="tensorflowjs_models",bm="info",t1="model_topology",n1="weight_specs",r1="weight_data",s1="model_metadata";function vm(t){return{info:[Br,t,bm].join(bn),topology:[Br,t,t1].join(bn),weightSpecs:[Br,t,n1].join(bn),weightData:[Br,t,r1].join(bn),modelMetadata:[Br,t,s1].join(bn)}}function wm(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function o1(t){const e=t.split(bn);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(bn)}function a1(t){return t.startsWith(pr.URL_SCHEME)?t.slice(pr.URL_SCHEME.length):t}class pr{constructor(e){if(!M().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=vm(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Ks(e),o=nn.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Ub(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw wm(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);n.format=i.format,n.generatedBy=i.generatedBy,n.convertedBy=i.convertedBy,i.signature!=null&&(n.signature=i.signature),i.userDefinedMetadata!=null&&(n.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(n.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(n.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(n.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=Wb(a),n}}pr.URL_SCHEME="localstorage://";const $m=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(pr.URL_SCHEME)?i1(t.slice(pr.URL_SCHEME.length)):null;Re.registerSaveRouter($m);Re.registerLoadRouter($m);function i1(t){return new pr(t)}class u1{constructor(){E(M().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=Br+bn,r=bn+bm;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(n)&&o.endsWith(r)){const a=o1(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=a1(e);const n=vm(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return wm(n),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr="://";class nt{constructor(){this.managers={}}static getInstance(){return nt.instance==null&&(nt.instance=new nt),nt.instance}static registerManager(e,n){E(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Wr)&&(e=e.slice(0,e.indexOf(Wr))),E(e.length>0,()=>"scheme must not be an empty string.");const r=nt.getInstance();E(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=n}static getManager(e){const n=nt.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(nt.getInstance().managers)}}function Ao(t){if(t.indexOf(Wr)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${nt.getSchemes().join(",")}`);return{scheme:t.split(Wr)[0],path:t.split(Wr)[1]}}async function Nm(t,e,n=!1){E(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=Re.getLoadHandlers(t);E(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),E(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const s=r[0],o=Re.getSaveHandlers(e);E(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),E(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=o[0],i=Ao(t).scheme,u=Ao(t).path,c=i===Ao(t).scheme,l=await s.load();n&&c&&await nt.getManager(i).removeModel(u);const h=await a.save(l);return n&&!c&&await nt.getManager(i).removeModel(u),h.modelArtifactsInfo}async function c1(){const t=nt.getSchemes(),e={};for(const n of t){const r=await nt.getManager(n).listModels();for(const s in r){const o=n+Wr+s;e[o]=r[s]}}return e}async function l1(t){const e=Ao(t);return nt.getManager(e.scheme).removeModel(e.path)}async function h1(t,e){return Nm(t,e,!1)}async function d1(t,e){return Nm(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p1{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window>"u"||!M().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Hf(e)}}if(M().get("IS_BROWSER")){M().setPlatform("browser",new p1);try{nt.registerManager(pr.URL_SCHEME,new u1)}catch{}try{nt.registerManager(dr.URL_SCHEME,new e1)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f1={importFetch:()=>require("node-fetch")};let ni;class m1{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return M().global.fetch!=null?M().global.fetch(e,n):(ni==null&&(ni=f1.importFetch()),ni(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}M().get("IS_NODE")&&!M().get("IS_BROWSER")&&M().setPlatform("node",new m1);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(t,e="float32",n){return e=e||"float32",kt(t),new qr(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g1(t,e){const n=S(t,"x","cast");if(!B0(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return D.runKernel(yu,r,s)}const Oe=A({cast_:g1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y1(t){const n={x:S(t,"x","clone","string_or_numeric")};return D.runKernel(xu,n)}const Fn=A({clone_:y1});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */im();const x1={buffer:Fe,cast:Oe,clone:Fn,print:Sm};Sb(x1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b1(t,e){let n=S(t,"a","add"),r=S(e,"b","add");[n,r]=Pe(n,r);const s={a:n,b:r};return D.runKernel(gu,s)}const ae=A({add_:b1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v1(t,e){let n=S(t,"a","floorDiv"),r=S(e,"b","floorDiv");[n,r]=Pe(n,r);const s={a:n,b:r};return D.runKernel(tp,s)}const Cm=A({floorDiv_:v1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w1(t,e){let n=S(t,"a","div"),r=S(e,"b","div");if([n,r]=Pe(n,r),n.dtype==="int32"&&r.dtype==="int32")return Cm(n,r);const s={a:n,b:r},o={};return D.runKernel(zd,s,o)}const pe=A({div_:w1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $1(t,e){let n=S(t,"a","mul"),r=S(e,"b","mul");[n,r]=Pe(n,r);const s={a:n,b:r};return D.runKernel(Op,s)}const H=A({mul_:$1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N1(t){const e=S(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return D.runKernel(Sd,n)}else{const n={x:e};return D.runKernel(td,n)}}const Ct=A({abs_:N1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S1(t){const n={x:S(t,"x","acos")};return D.runKernel(nd,n)}const C1=A({acos_:S1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1(t){const n={x:S(t,"x","acosh")};return D.runKernel(rd,n)}const E1=A({acosh_:T1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I1(t){E(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),E(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((s,o)=>S(s,`tensors${o}`,"addN")),n=e[0];e.forEach(s=>{if(s.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!De(s.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return D.runKernel(sd,r)}const k1=A({addN_:I1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _1(t,e=null,n=!1){const s={x:S(t,"x","all","bool")},o={axis:e,keepDims:n};return D.runKernel(od,s,o)}const R1=A({all_:_1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A1(t,e=null,n=!1){const s={x:S(t,"x","any","bool")},o={axis:e,keepDims:n};return D.runKernel(ad,s,o)}const O1=A({any_:A1});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D1(t,e=0){const r={x:S(t,"x","argMax")},s={axis:e};return D.runKernel(id,r,s)}const F1=A({argMax_:D1});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P1(t,e=0){const r={x:S(t,"x","argMin")},s={axis:e};return D.runKernel(ud,r,s)}const L1=A({argMin_:P1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(t){const n={x:S(t,"x","asin")};return D.runKernel(cd,n)}const V1=A({asin_:B1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M1(t){const n={x:S(t,"x","asinh")};return D.runKernel(ld,n)}const U1=A({asinh_:M1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W1(t){const n={x:S(t,"x","atan")};return D.runKernel(hd,n)}const z1=A({atan_:W1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1(t,e){let n=S(t,"a","atan2"),r=S(e,"b","atan2");[n,r]=Pe(n,r);const s={a:n,b:r};return D.runKernel(pd,s)}const j1=A({atan2_:G1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H1(t){const n={x:S(t,"x","atanh")};return D.runKernel(dd,n)}const K1=A({atanh_:H1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tm(t,e,n,r,s="NHWC",o){const a=t[3],i=[...e,a],u=ns(s);return _t(t,i,n,o,r,null,null,u)}function Nr(t,e,n,r,s,o,a="channelsLast"){const[i,u]=As(e);let c;if(a==="channelsLast")c=[i,u,t[3],t[3]];else if(a==="channelsFirst")c=[i,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return _t(t,c,n,r,s,o,!1,a)}function qs(t,e,n,r,s,o,a="NDHWC"){const[i,u,c]=Vi(e);let l,h;if(a==="NDHWC")h="channelsLast",l=[i,u,c,t[4],t[4]];else if(a==="NCDHW")h="channelsFirst",l=[i,u,c,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return Xs(t,l,n,r,s,!1,h,o)}function _t(t,e,n,r,s,o,a=!1,i="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,h]=t;else if(i==="channelsFirst")[u,h,c,l]=t;else throw new Error(`Unknown dataFormat ${i}`);const[d,f,,m]=e,[x,y]=As(n),[b,$]=As(r),T=zr(d,b),C=zr(f,$),{padInfo:R,outHeight:L,outWidth:P}=Y1(s,c,l,x,y,T,C,o,i),O=a?m*h:m;let B;return i==="channelsFirst"?B=[u,O,L,P]:i==="channelsLast"&&(B=[u,L,P,O]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:h,outHeight:L,outWidth:P,outChannels:O,padInfo:R,strideHeight:x,strideWidth:y,filterHeight:d,filterWidth:f,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationHeight:b,dilationWidth:$,inShape:t,outShape:B,filterShape:e}}function Xs(t,e,n,r,s,o=!1,a="channelsLast",i){let[u,c,l,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,h,d]=t;else if(a==="channelsFirst")[u,d,c,l,h]=t;else throw new Error(`Unknown dataFormat ${a}`);const[f,m,x,,y]=e,[b,$,T]=Vi(n),[C,R,L]=Vi(r),P=zr(f,C),O=zr(m,R),B=zr(x,L),{padInfo:V,outDepth:U,outHeight:K,outWidth:ee}=Q1(s,c,l,h,b,$,T,P,O,B,i),ne=o?y*d:y;let se;return a==="channelsFirst"?se=[u,ne,U,K,ee]:a==="channelsLast"&&(se=[u,U,K,ee,ne]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:h,inChannels:d,outDepth:U,outHeight:K,outWidth:ee,outChannels:ne,padInfo:V,strideDepth:b,strideHeight:$,strideWidth:T,filterDepth:f,filterHeight:m,filterWidth:x,effectiveFilterDepth:P,effectiveFilterHeight:O,effectiveFilterWidth:B,dilationDepth:C,dilationHeight:R,dilationWidth:L,inShape:t,outShape:se,filterShape:e}}function q1(t,e,n,r,s){r==null&&(r=Su(t,e,n));const o=t[0],a=t[1],i=Os((o-e+2*r)/n+1,s),u=Os((a-e+2*r)/n+1,s);return[i,u]}function X1(t,e,n,r,s,o){s==null&&(s=Su(t,e[0],r[0]));const a=[0,0,0,n];for(let i=0;i<3;i++)t[i]+2*s>=e[i]&&(a[i]=Os((t[i]-e[i]+2*s)/r[i]+1,o));return a}function Su(t,e,n,r=1){const s=zr(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function As(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function Vi(t){return typeof t=="number"?[t,t,t]:t}function zr(t,e){return e<=1?t:t+(t-1)*(e-1)}function Y1(t,e,n,r,s,o,a,i,u){let c,l,h;if(typeof t=="number"){c={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const f=q1([e,n],o,r,t,i);l=f[0],h=f[1]}else if(t==="same"){l=Math.ceil(e/r),h=Math.ceil(n/s);const d=Math.max(0,(l-1)*r+o-e),f=Math.max(0,(h-1)*s+a-n),m=Math.floor(d/2),x=d-m,y=Math.floor(f/2),b=f-y;c={top:m,bottom:x,left:y,right:b,type:"SAME"}}else if(t==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-o+1)/r),h=Math.ceil((n-a+1)/s);else if(typeof t=="object"){const d=u==="channelsLast"?t[1][0]:t[2][0],f=u==="channelsLast"?t[1][1]:t[2][1],m=u==="channelsLast"?t[2][0]:t[3][0],x=u==="channelsLast"?t[2][1]:t[3][1];c={top:d,bottom:f,left:m,right:x,type:d===0&&f===0&&m===0&&x===0?"VALID":"EXPLICIT"},l=Os((e-o+d+f)/r+1,i),h=Os((n-a+m+x)/s+1,i)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:c,outHeight:l,outWidth:h}}function Q1(t,e,n,r,s,o,a,i,u,c,l){let h,d,f,m;if(t==="valid"&&(t=0),typeof t=="number"){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const y=X1([e,n,r,1],[i,u,c],1,[s,o,a],t,l);d=y[0],f=y[1],m=y[2]}else if(t==="same"){d=Math.ceil(e/s),f=Math.ceil(n/o),m=Math.ceil(r/a);const x=(d-1)*s+i-e,y=(f-1)*o+u-n,b=(m-1)*a+c-r,$=Math.floor(x/2),T=x-$,C=Math.floor(y/2),R=y-C,L=Math.floor(b/2),P=b-L;h={top:C,bottom:R,left:L,right:P,front:$,back:T,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:m}}function Os(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ds(t){const[e,n,r]=As(t);return e===1&&n===1&&r===1}function Nt(t,e){return Ds(t)||Ds(e)}function fr(t){return As(t).every(e=>e>0)}function ns(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function Ut(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")E(jr(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{E(jr(s),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${s}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(t,e){const r={x:S(t,"x","reshape","string_or_numeric")},s={shape:e};return D.runKernel(Jp,r,s)}const z=A({reshape_:Z1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1(t,e,n,r,s){const o=S(t,"x","avgPool","float32"),a=1;E(Nt(n,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Ut("avgPool",r,s);const c={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let h=D.runKernel(fd,c,l);return h=Oe(h,o.dtype),u?z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Em=A({avgPool_:J1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ev(t,e,n,r,s,o="NDHWC"){const a=S(t,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),E(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),E(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Ut("avgPool3d",r,s);const c={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o};let h=D.runKernel(md,c,l);return h=Oe(h,i.dtype),u?z(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const tv=A({avgPool3d_:ev});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(t,e=0){E(t.length>=1,()=>"Pass at least one tensor to concat");const n=Mo(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),n.length===1)return Fn(n[0]);const r=n,s={axis:e};return D.runKernel(Cd,r,s)}const Xe=A({concat_:nv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rv(t,e,n=!1,r=!1){let s=S(t,"a","matMul"),o=S(e,"b","matMul");[s,o]=Pe(s,o);const a={a:s,b:o},i={transposeA:n,transposeB:r};return D.runKernel(gd,a,i)}const we=A({matMul_:rv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sv(t){const n={x:S(t,"x","sigmoid","float32")};return D.runKernel(gf,n)}const ir=A({sigmoid_:sv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ov(t,e,n){const r=S(t,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:n};return D.runKernel(df,s,o)}const ce=A({slice_:ov});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(t){const n={x:S(t,"x","tanh","float32")};return D.runKernel(Pf,n)}const Mi=A({tanh_:av});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iv(t,e,n,r,s,o){const a=S(t,"forgetBias","basicLSTMCell"),i=S(e,"lstmKernel","basicLSTMCell"),u=S(n,"lstmBias","basicLSTMCell"),c=S(r,"data","basicLSTMCell"),l=S(s,"c","basicLSTMCell"),h=S(o,"h","basicLSTMCell"),d=Xe([c,h],1),f=we(d,i),m=ae(f,u),x=m.shape[0],y=m.shape[1]/4,b=[x,y],$=ce(m,[0,0],b),T=ce(m,[0,y],b),C=ce(m,[0,y*2],b),R=ce(m,[0,y*3],b),L=ae(H(ir($),Mi(T)),H(l,ir(ae(a,C)))),P=H(Mi(L),ir(R));return[L,P]}const uv=A({basicLSTMCell_:iv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cv(t,e,n){const r=S(t,"x","batchToSpaceND"),s=e.reduce((i,u)=>i*u);E(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),E(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),E(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:n};return D.runKernel(yd,o,a)}const Im=A({batchToSpaceND_:cv});function lv(t){let e;return t.rank===0||t.rank===1?e=z(t,[1,1,1,t.size]):t.rank===2?e=z(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=z(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(t,e,n,r,s,o){o==null&&(o=.001);const a=S(t,"x","batchNorm"),i=S(e,"mean","batchNorm"),u=S(n,"variance","batchNorm");let c;s!=null&&(c=S(s,"scale","batchNorm"));let l;r!=null&&(l=S(r,"offset","batchNorm")),E(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:lv(a),scale:c,offset:l,mean:i,variance:u},f={varianceEpsilon:o},m=D.runKernel(np,d,f);return z(m,a.shape)}const ia=A({batchNorm_:hv});function dv(t,e,n,r,s,o){const a=S(t,"x","batchNorm"),i=S(e,"mean","batchNorm"),u=S(n,"variance","batchNorm");let c;s!=null&&(c=S(s,"scale","batchNorm"));let l;return r!=null&&(l=S(r,"offset","batchNorm")),E(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),E(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),E(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&E(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),ia(a,i,u,l,c,o)}const pv=A({batchNorm2d_:dv});function fv(t,e,n,r,s,o){const a=S(t,"x","batchNorm"),i=S(e,"mean","batchNorm"),u=S(n,"variance","batchNorm");let c;s!=null&&(c=S(s,"scale","batchNorm"));let l;return r!=null&&(l=S(r,"offset","batchNorm")),E(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),E(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),E(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&E(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),ia(a,i,u,l,c,o)}const mv=A({batchNorm3d_:fv});function gv(t,e,n,r,s,o){const a=S(t,"x","batchNorm"),i=S(e,"mean","batchNorm"),u=S(n,"variance","batchNorm");let c;s!=null&&(c=S(s,"scale","batchNorm"));let l;return r!=null&&(l=S(r,"offset","batchNorm")),E(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),E(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),E(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&E(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),ia(a,i,u,l,c,o)}const yv=A({batchNorm4d_:gv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(t,e,n){const r=S(t,"x","bincount"),s=S(e,"weights","bincount");E(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),E(n>=0,()=>`size must be non-negative, but got ${n}.`),E(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:n};return D.runKernel(xd,o,a)}const km=A({bincount_:xv});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bv(t,e){const n=S(t,"x","bitwiseAnd"),r=S(e,"y","bitwiseAnd");if(!De(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return D.runKernel(bd,s)}const vv=A({bitwiseAnd_:bv});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(t,e){const n=S(t,"s0","broadcastArgs","int32"),r=S(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return D.runKernel(vd,s)}const $v=A({broadcastArgs_:wv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nv(t,e){let n=S(t,"broadcastTo","x");const r=n.shape;if(kt(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const c=n.shape.slice();for(;c.length<e.length;)c.unshift(1);n=z(n,c)}const s=n.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return Fn(n);const i={x:n},u={reps:o};return D.runKernel(bu,i,u)}const _s=A({broadcastTo_:Nv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sv(t){const n={x:S(t,"x","ceil","float32")};return D.runKernel(wd,n)}const Cv=A({ceil_:Sv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(t,e,n){kt(t),n=n||Hs(e);const r={shape:t,value:e,dtype:n};return D.runKernel(Zd,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(t,e,n){const r=S(t,"x","clipByValue");if(E(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return Ys(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:n};return D.runKernel($d,s,o)}const _m=A({clipByValue_:Tv});function Ev(t){return Xe(t,0)}const Iv=A({concat1d_:Ev});function kv(t,e){return Xe(t,e)}const _v=A({concat2d_:kv});function Rv(t,e){return Xe(t,e)}const Av=A({concat3d_:Rv});function Ov(t,e){return Xe(t,e)}const Dv=A({concat4d_:Ov});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fv(t,e,n,r,s="NHWC",o=[1,1],a){const i=S(t,"x","conv2d","float32"),u=S(e,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),E(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Ut("conv2d",r,a);const h=s==="NHWC"?c.shape[3]:c.shape[1];E(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),E(Nt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),E(fr(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),E(fr(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},m=D.runKernel(Td,d,f);return l?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ua=A({conv2d_:Fv});function Pv(t,e,n,r,s="NWC",o=1,a){const i=S(t,"x","conv1d"),u=S(e,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=z(i,[1,i.shape[0],i.shape[1]])),E(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),E(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Ut("conv1d",r,a),E(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),E(Nt(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),E(fr(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),E(fr(n),()=>"Error in conv1D: Stride should be larger than 0."),E(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=z(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=z(c,[c.shape[0],1,c.shape[1],c.shape[2]]),y=ua(d,h,[1,n],r,"NHWC",[1,o],a);return l?z(y,[y.shape[2],y.shape[3]]):z(y,[y.shape[0],y.shape[2],y.shape[3]])}const Lv=A({conv1d_:Pv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(t,e,n,r,s,o="NHWC",a){E(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let i=t,u=e,c=!1;e.rank===3&&(c=!0,u=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),E(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),E(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),E(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const l=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?u.shape[3]:u.shape[1];E(l===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`),E(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),Ut("conv2dDerInput",s,a);const d={dy:u,filter:n},f={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},m=D.runKernel(Id,d,f);return c?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Rm=A({conv2DBackpropInput_:Bv});function Vv(t,e,n,r,s,o){const a=S(t,"x","conv2dTranspose"),i=S(e,"filter","conv2dTranspose");return Rm(n,a,i,r,s,"NHWC",o)}const Mv=A({conv2dTranspose_:Vv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uv(t,e,n,r,s="NDHWC",o=[1,1,1]){const a=S(t,"x","conv3d"),i=S(e,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),E(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),E(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),E(Nt(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),E(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),E(fr(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),E(fr(n),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},h={strides:n,pad:r,dataFormat:s,dilations:o},d=D.runKernel(kd,l,h);return c?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Wv=A({conv3d_:Uv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zv(t,e,n,r,s){E(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,a=e,i=!1;e.rank===4&&(i=!0,a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const u=o[4],c=a.shape[4];E(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),E(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),E(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),E(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),E(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const l={dy:a,filter:n},h={pad:s,strides:r,inputShape:o},d=D.runKernel(_d,l,h);return i?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Gv=A({conv3DBackpropInput_:zv});function jv(t,e,n,r,s){const o=S(t,"x","conv3dTranspose"),a=S(e,"filter","conv3dTranspose");return Gv(n,o,a,r,s)}const Hv=A({conv3dTranspose_:jv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kv(t){const n={x:S(t,"x","cos","float32")};return D.runKernel(Rd,n)}const qv=A({cos_:Kv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xv(t){const n={x:S(t,"x","cosh","float32")};return D.runKernel(Ad,n)}const Yv=A({cosh_:Xv});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qv(t,e=0,n=!1,r=!1){const o={x:S(t,"x","cumprod")},a={axis:e,exclusive:n,reverse:r};return D.runKernel(Od,o,a)}const Zv=A({cumprod_:Qv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jv(t,e=0,n=!1,r=!1){const o={x:S(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:r};return D.runKernel(Dd,o,a)}const ew=A({cumsum_:Jv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tw(t,e,n,r=!1){const s=S(t,"x","denseBincount"),o=S(e,"weights","denseBincount");E(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),E(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),E(n>=0,()=>`size must be non-negative, but got ${n}.`),E(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},i={size:n,binaryOutput:r};return D.runKernel(Pd,a,i)}const nw=A({denseBincount_:tw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rw(t,e,n="NHWC"){const r=S(t,"x","depthToSpace","float32"),s=n==="NHWC"?r.shape[1]:r.shape[2],o=n==="NHWC"?r.shape[2]:r.shape[3],a=n==="NHWC"?r.shape[3]:r.shape[1];E(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),E(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),E(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),E(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:e,dataFormat:n};return D.runKernel(Ld,i,u)}const sw=A({depthToSpace_:rw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(t,e,n,r,s="NHWC",o=[1,1],a){const i=S(t,"x","depthwiseConv2d","float32"),u=S(e,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),E(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=s==="NHWC"?c.shape[3]:c.shape[1];E(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),Ut("depthwiseConv2d",r,a);const d={x:c,filter:u},f={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},m=D.runKernel(Bd,d,f);return l?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Cu=A({depthwiseConv2d_:ow});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aw(t){const n={x:S(t,"x","diag")};return D.runKernel(Ud,n)}const iw=A({diag_:aw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(t,e,n,r,s=[1,1],o="NHWC"){const a=S(t,"x","dilation2d"),i=S(e,"filter","dilation2d");E(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),E(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),E(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),E(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},h={strides:n,pad:r,dilations:s},d=D.runKernel(Wd,l,h);return c?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const cw=A({dilation2d_:uw});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,a=t[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Am(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&n.unshift(o)}return n}function ye(t,e){const n=Math.max(t.length,e.length),r=new Array(n);for(let s=0;s<n;s++){let o=t[t.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)r[n-s-1]=a;else if(a===1)r[n-s-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(i)}else r[n-s-1]=o}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lw(t,e){let n=S(t,"a","equal","string_or_numeric"),r=S(e,"b","equal","string_or_numeric");[n,r]=Pe(n,r),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(Kd,s)}const Om=A({equal_:lw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hw(t,e,n){const r=S(e,"a","where"),s=S(n,"b","where"),o=S(t,"condition","where","bool"),a=ye(ye(o.shape,r.shape),s.shape),i=_s(o,a),u=_s(r,a),c=_s(s,a),l={condition:i,t:u,e:c};return D.runKernel(lf,l)}const Pn=A({where_:hw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dw(t){const n={x:S(t,"x","zerosLike")};return D.runKernel(Wf,n)}const Et=A({zerosLike_:dw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pw(t,e){let n=S(t,"a","div"),r=S(e,"b","div");[n,r]=Pe(n,r);const s=pe(n,r),o=Et(s),a=Om(r,o);return Pn(a,o,s)}const fw=A({divNoNan_:pw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mw(t,e){const n=S(t,"t1","dot"),r=S(e,"t2","dot");E((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=n.rank===1?n.size:n.shape[1],o=r.rank===1?r.size:r.shape[0];if(E(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),n.rank===1&&r.rank===1){const a=z(n,[1,-1]),i=z(r,[-1,1]),u=we(a,i);return z(u,[])}else if(n.rank===1&&r.rank===2){const a=z(n,[1,-1]),i=z(r,[r.shape[0],r.shape[1]]),u=we(a,i);return z(u,[u.size])}else if(n.rank===2&&r.rank===1){const a=z(r,[-1,1]),i=we(n,a);return z(i,[i.size])}else{const a=z(r,[r.shape[0],r.shape[1]]);return we(n,a)}}const gw=A({dot_:mw});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(t,...e){const n=e.map((s,o)=>S(s,`tensors${o}`,"einsum")),r={equation:t};return D.runKernel(Gd,n,r)}const Vr=A({einsum_:yw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xw(t){const n={x:S(t,"x","elu","float32")};return D.runKernel(jd,n)}const Dm=A({elu_:xw});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bw(t,e){const n=S(t,"x","ensureShape","string_or_numeric");if(!F0(n.shape,e))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${e}`);return t}const vw=A({ensureShape_:bw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ww(t){let e=S(t,"x","erf");E(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Oe(e,"float32"));const n={x:e};return D.runKernel(Hd,n)}const $w=A({erf_:ww});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tu(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Fm(t,e,n){const r=t.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)n.indexOf(i)===-1?s.push(t[o++]):s.push(e[a++]);return s}function mn(t,e){const n=[],r=t.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&n.push(t[o]);const s=e.map(o=>t[o]);return[n,s]}function Rt(t,e){const n=e.map(r=>1);return Fm(t,n,e)}function rn(t,e,n){E(Tu(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function Wt(t,e){if(Tu(t,e))return null;const n=[];for(let r=0;r<e;++r)t.indexOf(r)===-1&&n.push(r);return t.forEach(r=>n.push(r)),n}function Eu(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function zt(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nw(t,e=null,n=!1){const s={x:S(t,"x","max")},o={reductionIndices:e,keepDims:n};return D.runKernel($p,s,o)}const Gr=A({max_:Nw});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sw(t,e=null,n=!1){const s={x:S(t,"x","min")},o={axis:e,keepDims:n};return D.runKernel(Ip,s,o)}const Ui=A({min_:Sw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw(t,e){let n=S(t,"base","pow"),r=S(e,"exp","pow");[n,r]=Pe(n,r);const s={a:n,b:r};return D.runKernel(zp,s)}const Fs=A({pow_:Cw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(t,e){if((Mt(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Mt(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return zn(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(t){const n={x:S(t,"x","sqrt","float32")};return D.runKernel(xf,n)}const wn=A({sqrt_:Tw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(t){const e=S(t,"x","square"),n={};return D.runKernel("Square",{x:e},n)}const Qt=A({square_:Ew});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iw(t,e=null,n=!1){let r=S(t,"x","sum");r.dtype==="bool"&&(r=Oe(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return D.runKernel(bf,s,o)}const Te=A({sum_:Iw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kw(t,e="euclidean",n=null,r=!1){t=S(t,"x","norm");const s=Pm(t,e,n);let o=s.shape;if(r){const a=ze(n,t.shape);o=Rt(s.shape,a)}return z(s,o)}function Pm(t,e,n=null){if(t.rank===0)return Ct(t);if(t.rank!==1&&n===null)return Pm(z(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return Te(Ct(t),n);if(e===1/0)return Gr(Ct(t),n);if(e===-1/0)return Ui(Ct(t),n);if(e==="euclidean"||e===2)return wn(Te(Fs(Ct(t),fe(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return Gr(Te(Ct(t),n[0]),n[1]-1);if(e===1/0)return Gr(Te(Ct(t),n[1]),n[0]);if(e===-1/0)return Ui(Te(Ct(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return wn(Te(Qt(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ca=A({norm_:kw});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w(t,e=null,n=!1){return ca(t,"euclidean",e,n)}const Rw=A({euclideanNorm_:_w});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(t){const n={x:S(t,"x","exp")};return D.runKernel(qd,n)}const $n=A({exp_:Aw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ow(t,e=0){const n=S(t,"x","expandDims","string_or_numeric");E(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:e};return D.runKernel(Xd,r,s)}const cn=A({expandDims_:Ow});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dw(t){const n={x:S(t,"x","expm1")};return D.runKernel(Yd,n)}const Fw=A({expm1_:Dw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pw(t,e){const n=S(t,"x","tile","string_or_numeric");E(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r={x:n},s={reps:e};return D.runKernel(bu,r,s)}const Rs=A({tile_:Pw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(t,e,n,r="float32"){e==null&&(e=t);const s=Fe([t,e],r),o=t<=e?t:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=z(s.toTensor(),[t,e]);if(n==null)return a;if(n.length===1)return Rs(cn(a,0),[n[0],1,1]);if(n.length===2)return Rs(cn(cn(a,0),0),[n[0],n[1],1,1]);if(n.length===3)return Rs(cn(cn(cn(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const Lm=A({eye_:Lw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(t){const n={x:S(t,"x","floor","float32")};return D.runKernel(ep,n)}const Bm=A({floor_:Bw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(t,e,n=0,r=0){const s=S(t,"x","gather"),o=S(e,"indices","gather","int32"),a={x:s,indices:o},i={axis:n,batchDims:r};return D.runKernel(rp,a,i)}const Vm=A({gather_:Vw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mw(t,e){let n=S(t,"a","greater","string_or_numeric"),r=S(e,"b","greater","string_or_numeric");[n,r]=Pe(n,r),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(op,s)}const la=A({greater_:Mw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uw(t,e){let n=S(t,"a","greaterEqual","string_or_numeric"),r=S(e,"b","greaterEqual","string_or_numeric");[n,r]=Pe(n,r),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(ap,s)}const Mm=A({greaterEqual_:Uw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ww(t){const n={input:S(t,"input","imag")};return D.runKernel(up,n)}const ha=A({imag_:Ww});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zw(t){const n={x:S(t,"x","isFinite")};return D.runKernel(cp,n)}const Gw=A({isFinite_:zw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jw(t){const n={x:S(t,"x","isInf")};return D.runKernel(lp,n)}const Hw=A({isInf_:jw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(t){const n={x:S(t,"x","isNaN")};return D.runKernel(hp,n)}const qw=A({isNaN_:Kw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xw(t,e=.2){const r={x:S(t,"x","leakyRelu")},s={alpha:e};return D.runKernel(dp,r,s)}const Um=A({leakyRelu_:Xw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yw(t,e){let n=S(t,"a","less","string_or_numeric"),r=S(e,"b","less","string_or_numeric");[n,r]=Pe(n,r),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(pp,s)}const Wi=A({less_:Yw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qw(t,e){let n=S(t,"a","lessEqual","string_or_numeric"),r=S(e,"b","lessEqual","string_or_numeric");[n,r]=Pe(n,r),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(fp,s)}const Iu=A({lessEqual_:Qw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return D.runKernel(mp,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jw(t,e=5,n=1,r=1,s=.5){const o=S(t,"x","localResponseNormalization");E(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),E(jr(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:e,bias:n,alpha:r,beta:s},l=D.runKernel(wp,u,c);return i?z(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const e$=A({localResponseNormalization_:Jw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(t){const n={x:S(t,"x","log","float32")};return D.runKernel(gp,n)}const Ps=A({log_:t$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(t){const n={x:S(t,"x","log1p")};return D.runKernel(yp,n)}const Wm=A({log1p_:n$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(t,e){E(vi(t),()=>"The f passed in variableGrads(f) must be a function"),E(e==null||Array.isArray(e)&&e.every(c=>c instanceof Vo),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const c in D.registeredVariables)e.push(D.registeredVariables[c])}const r=n?e.filter(c=>!c.trainable):null,s=e.length;e=e.filter(c=>c.trainable),E(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:i}=D.gradients(t,e,null,o);E(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),r!=null&&r.forEach(c=>u[c.name]=null),{value:a,grads:u}}function Nn(t){return D.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(t){const n={x:S(t,"x","neg")};return D.runKernel(Dp,n)}const pn=A({neg_:s$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(t){const n={x:S(t,"x","softplus")};return D.runKernel(yf,n)}const zm=A({softplus_:o$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(t){const e=S(t,"x","logSigmoid");return Nn(r=>({value:pn(zm(pn(r))),gradFunc:a=>H(a,ir(pn(r)))}))(e)}const i$=A({logSigmoid_:a$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(t,e){let n=S(t,"a","sub"),r=S(e,"b","sub");[n,r]=Pe(n,r);const s={a:n,b:r};return D.runKernel(Df,s)}const le=A({sub_:u$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(t,e=-1){const n=S(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Nn((s,o)=>{const i=Gr(s,e,!0),u=le(s,i),c=le(Oe(u,"float32"),Ps(Te($n(u),e,!0)));return o([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,m=!0,x=$n(f);return le(h,H(Te(h,e,m),x))}}})(n)}const l$=A({logSoftmax_:c$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(t,e=null,n=!1){const r=S(t,"x","logSumExp"),s=ze(e,r.shape),o=Gr(r,s,!0),a=le(r,o),i=$n(a),u=Te(i,s),c=Ps(u),l=ae(z(o,c.shape),c);if(n){const h=Rt(l.shape,s);return z(l,h)}return l}const Gm=A({logSumExp_:h$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(t,e){const n=S(t,"a","logicalAnd","bool"),r=S(e,"b","logicalAnd","bool");ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(xp,s)}const Wo=A({logicalAnd_:d$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(t){const n={x:S(t,"x","logicalNot","bool")};return D.runKernel(bp,n)}const jm=A({logicalNot_:p$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(t,e){const n=S(t,"a","logicalOr","bool"),r=S(e,"b","logicalOr","bool");ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(vp,s)}const Hm=A({logicalOr_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(t,e){const n=S(t,"a","logicalXor","bool"),r=S(e,"b","logicalXor","bool");return ye(n.shape,r.shape),Wo(Hm(t,e),jm(Wo(t,e)))}const g$=A({logicalXor_:m$});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=2147483648;function y$(t,e,n="left"){const r=S(t,"sortedSequence","searchSorted"),s=S(e,"values","searchSorted"),o=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],i=z(r,[-1,o]),u=z(s,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(j(u.shape)>=bo)throw new Error(`values tensor size must less than ${bo}`);if(i.shape[1]>=bo)throw new Error(`trailing dim_size must less than ${bo} for int32 output type, was ${i.shape[1]}`);const c={sortedSequence:i,values:u},l={side:n};return D.runKernel(cf,c,l)}const ku=A({searchSorted_:y$});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(t,e){return ku(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(t,e,n,r,s){const o=S(t,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),E(Nt(n,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Ut("maxPool",r,s);const c={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s},h=D.runKernel(Sp,c,l);return u?z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Km=A({maxPool_:b$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(t,e=[1,1,1],n,r,s,o="NDHWC"){const a=S(t,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),E(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Ut("maxPool3d",r,s);const c={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o},h=D.runKernel(Cp,c,l);return u?z(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const w$=A({maxPool3d_:v$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(t,e,n,r,s=!1){const a={x:S(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},u=D.runKernel(Tp,a,i);return{result:u[0],indexes:u[1]}}const N$=A({maxPoolWithArgmax_:$$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(t,e){let n=S(t,"a","maximum"),r=S(e,"b","maximum");[n,r]=Pe(n,r),n.dtype==="bool"&&(n=Oe(n,"int32"),r=Oe(r,"int32")),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(Np,s)}const qm=A({maximum_:S$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(t,e=null,n=!1){const s={x:S(t,"x","mean")},o={axis:e,keepDims:n};return D.runKernel(Ep,s,o)}const zo=A({mean_:C$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(t,e="float32"){if(kt(t),e==="complex64"){const r=mr(t,"float32"),s=mr(t,"float32");return Vn(r,s)}const n=Bn(j(t),e);return D.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(t,e="float32"){if(kt(t),e==="complex64"){const r=or(t,"float32"),s=mr(t,"float32");return Vn(r,s)}const n=Zh(j(t),e);return D.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let r=S(t,"x","meshgrid",t instanceof Ve?t.dtype:"float32");if(e===void 0)return[r];let s=S(e,"y","meshgrid",e instanceof Ve?e.dtype:"float32");const o=j(r.shape),a=j(s.shape);return n==="xy"?(r=z(r,[1,-1]),s=z(s,[-1,1]),[we(or([a,1],r.dtype),r),we(s,or([1,o],s.dtype))]):(r=z(r,[-1,1]),s=z(s,[1,-1]),[we(r,or([1,a],r.dtype)),we(or([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(t,e){let n=S(t,"a","minimum"),r=S(e,"b","minimum");[n,r]=Pe(n,r),n.dtype==="bool"&&(n=Oe(n,"int32"),r=Oe(r,"int32")),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(kp,s)}const Go=A({minimum_:E$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(t,e,n){E(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=S(t,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=n==="reflect"?1:0;for(let i=0;i<r.rank;i++)E(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),E(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:n},a={x:r};return D.runKernel(_p,a,o)}const k$=A({mirrorPad_:I$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(t,e){let n=S(t,"a","mod"),r=S(e,"b","mod");[n,r]=Pe(n,r);const s={a:n,b:r};return D.runKernel(Rp,s)}const R$=A({mod_:_$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(t,e=null,n=!1){t=S(t,"x","moments");const r=ze(e,t.shape),s=zo(t,r,n);let o=s.shape;n||(o=Rt(s.shape,r));const a=Qt(le(Oe(t,"float32"),z(s,o))),i=zo(a,r,n);return{mean:s,variance:i}}const O$=A({moments_:A$});function D$(t,e,n,r){const s=S(e,"data","multiRNNCell"),o=Mo(n,"c","multiRNNCell"),a=Mo(r,"h","multiRNNCell");let i=s;const u=[];for(let h=0;h<t.length;h++){const d=t[h](i,o[h],a[h]);u.push(d[0]),u.push(d[1]),i=d[1]}const c=[],l=[];for(let h=0;h<u.length;h+=2)c.push(u[h]),l.push(u[h+1]);return[c,l]}const F$=A({multiRNNCell_:D$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(t,e,n,r=!1){const s=S(t,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const u={logits:a===1?z(s,[1,-1]):s},c={numSamples:e,seed:n,normalized:r},l=D.runKernel(Ap,u,c);return a===1?z(l,[l.size]):l}const L$=A({multinomial_:P$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(t,e){let n=S(t,"a","notEqual","string_or_numeric"),r=S(e,"b","notEqual","string_or_numeric");[n,r]=Pe(n,r),ye(n.shape,r.shape);const s={a:n,b:r};return D.runKernel(Fp,s)}const Xm=A({notEqual_:B$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(t,e,n=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:S(t,"indices","oneHot","int32")},i={dtype:s,depth:e,onValue:n,offValue:r};return D.runKernel(Mp,a,i)}const M$=A({oneHot_:V$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(t){const n={x:S(t,"x","onesLike")};return D.runKernel(Vp,n)}const W$=A({onesLike_:U$});function z$(t,e){const n=S(t,"v1","outerProduct"),r=S(e,"v2","outerProduct");E(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=z(n,[-1,1]),o=z(r,[1,-1]);return we(s,o)}const G$=A({outerProduct_:z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(t,e,n=0){const r=S(t,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},o={x:r};return D.runKernel(Wp,o,s)}const Qs=A({pad_:j$});function H$(t,e,n=0){return E(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Qs(t,[e],n)}const K$=A({pad1d_:H$});function q$(t,e,n=0){return E(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qs(t,e,n)}const X$=A({pad2d_:q$});function Y$(t,e,n=0){return E(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qs(t,e,n)}const Q$=A({pad3d_:Y$});function Z$(t,e,n=0){return E(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qs(t,e,n)}const J$=A({pad4d_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(t,e,n){const r=S(t,"x","spaceToBatchND");E(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),E(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),E(r.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+n[u-1][0]+n[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:n};return D.runKernel(vf,s,o)}const Ym=A({spaceToBatchND_:eN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(t,e,n,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const i=S(t,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(Nt(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const l=Nr(u.shape,e,o,s,r),h=[l.dilationHeight,l.dilationWidth];let d;r==="same"?d=rN([l.filterHeight,l.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[m,x]=nN([l.inHeight,l.inWidth],h,d),y=f?r:"valid",b=f?u:Ym(u,h,m),T=(n==="avg"?()=>Em(b,e,o,y,a):()=>Km(b,e,o,y,a))(),C=f?T:Im(T,h,x);return c?z(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function nN(t,e,n){const r=n.map(l=>l[0]),s=n.map(l=>l[1]),o=t.concat(r,s),a=e.map((l,h)=>(l-o[h]%l)%l),i=s.map((l,h)=>l+a[h]),u=e.map((l,h)=>[r[h],i[h]]),c=e.map((l,h)=>[0,a[h]]);return[u,c]}function rN(t,e){const r=t.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,i)=>a-s[i]);return r.map((a,i)=>[s[i],o[i]])}const sN=A({pool_:tN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(t,e){const n=S(t,"x","prelu"),r=S(e,"alpha","prelu"),s={x:n,alpha:r};return D.runKernel(Gp,s)}const Qm=A({prelu_:oN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(t,e=null,n=!1){let r=S(t,"x","prod");r.dtype==="bool"&&(r=Oe(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return D.runKernel(jp,s,o)}const iN=A({prod_:aN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(t,e,n,r){const s=t.map((l,h)=>S(l,`tensors${h}`,"raggedGather","int32")),o=S(e,"paramsDenseValues","raggedGather"),a=S(n,"indices","raggedGather","int32"),i={paramsNestedSplits:s,paramsDenseValues:o,indices:a},u={outputRaggedRank:r},c=D.runKernel(Hp,i,u);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const cN=A({raggedGather_:uN});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(t,e,n){const r=S(t,"starts","raggedRange"),s=S(e,"limits","raggedRange",r.dtype),o=S(n,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:o},i=D.runKernel(Kp,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const hN=A({raggedRange_:lN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(t,e,n,r,s){const o=S(t,"shape","raggedTensorToTensor","int32"),a=S(e,"values","raggedTensorToTensor"),i=S(n,"defaultValue","raggedTensorToTensor",a.dtype),u=r.map((h,d)=>S(h,`tensors${d}`,"raggedTensorToTensor","int32")),c={shape:o,values:a,defaultValue:i,rowPartitionTensors:u},l={rowPartitionTypes:s};return D.runKernel(qp,c,l)}const pN=A({raggedTensorToTensor_:dN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(t,e,n){kt(t);const r=j(t);let s=null;if(n==null||n==="float32")s=new Float32Array(r);else if(n==="int32")s=new Int32Array(r);else if(n==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let o=0;o<r;o++)s[o]=e();return D.makeTensor(s,t,n)}const mN=A({rand_:fN});var _u={exports:{}};_u.exports;(function(t){(function(e,n,r){function s(u){var c=this,l=i();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function a(u,c){var l=new s(u),h=c&&c.state,d=l.next;return d.int32=function(){return l.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,l),d.state=function(){return o(l,{})}),d}function i(){var u=4022871197,c=function(l){l=String(l);for(var h=0;h<l.length;h++){u+=l.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return c}n&&n.exports?n.exports=a:this.alea=a})(bt,t)})(_u);var gN=_u.exports,Ru={exports:{}};Ru.exports;(function(t){(function(e,n,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}n&&n.exports?n.exports=a:this.xor128=a})(bt,t)})(Ru);var yN=Ru.exports,Au={exports:{}};Au.exports;(function(t){(function(e,n,r){function s(i){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}n&&n.exports?n.exports=a:this.xorwow=a})(bt,t)})(Au);var xN=Au.exports,Ou={exports:{}};Ou.exports;(function(t){(function(e,n,r){function s(i){var u=this;u.next=function(){var l=u.x,h=u.i,d,f;return d=l[h],d^=d>>>7,f=d^d<<24,d=l[h+1&7],f^=d^d>>>10,d=l[h+3&7],f^=d^d>>>3,d=l[h+4&7],f^=d^d<<7,d=l[h+7&7],d=d^d<<13,f^=d^d<<9,l[h]=f,u.i=h+1&7,f};function c(l,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],l.x=f,l.i=0,d=256;d>0;--d)l.next()}c(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(l.x&&o(l,c),h.state=function(){return o(c,{})}),h}n&&n.exports?n.exports=a:this.xorshift7=a})(bt,t)})(Ou);var bN=Ou.exports,Du={exports:{}};Du.exports;(function(t){(function(e,n,r){function s(i){var u=this;u.next=function(){var l=u.w,h=u.X,d=u.i,f,m;return u.w=l=l+1640531527|0,m=h[d+34&127],f=h[d=d+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[d]=m^f,u.i=d,m+(l^l>>>16)|0};function c(l,h){var d,f,m,x,y,b=[],$=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,$=Math.max($,h.length)),m=0,x=-32;x<$;++x)h&&(f^=h.charCodeAt((x+32)%h.length)),x===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,x>=0&&(y=y+1640531527|0,d=b[x&127]^=f+y,m=d==0?m+1:0);for(m>=128&&(b[(h&&h.length||0)&127]=-1),m=127,x=4*128;x>0;--x)f=b[m+34&127],d=b[m=m+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,b[m]=f^d;l.w=y,l.X=b,l.i=m}c(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(l.X&&o(l,c),h.state=function(){return o(c,{})}),h}n&&n.exports?n.exports=a:this.xor4096=a})(bt,t)})(Du);var vN=Du.exports,Fu={exports:{}};Fu.exports;(function(t){(function(e,n,r){function s(i){var u=this,c="";u.next=function(){var h=u.b,d=u.c,f=u.d,m=u.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^m,m=m-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-f|0,u.d=f<<16^d>>>16^m,u.a=m-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(d+f)/(1<<21);while(m===0);return m},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}n&&n.exports?n.exports=a:this.tychei=a})(bt,t)})(Fu);var wN=Fu.exports,Zm={exports:{}};const $N={},NN=Object.freeze(Object.defineProperty({__proto__:null,default:$N},Symbol.toStringTag,{value:"Module"})),SN=Xh(NN);(function(t){(function(e,n,r){var s=256,o=6,a=52,i="random",u=r.pow(s,o),c=r.pow(2,a),l=c*2,h=s-1,d;function f(C,R,L){var P=[];R=R==!0?{entropy:!0}:R||{};var O=b(y(R.entropy?[C,T(n)]:C??$(),3),P),B=new m(P),V=function(){for(var U=B.g(o),K=u,ee=0;U<c;)U=(U+ee)*s,K*=s,ee=B.g(1);for(;U>=l;)U/=2,K/=2,ee>>>=1;return(U+ee)/K};return V.int32=function(){return B.g(4)|0},V.quick=function(){return B.g(4)/4294967296},V.double=V,b(T(B.S),n),(R.pass||L||function(U,K,ee,ne){return ne&&(ne.S&&x(ne,B),U.state=function(){return x(B,{})}),ee?(r[i]=U,K):U})(V,O,"global"in R?R.global:this==r,R.state)}function m(C){var R,L=C.length,P=this,O=0,B=P.i=P.j=0,V=P.S=[];for(L||(C=[L++]);O<s;)V[O]=O++;for(O=0;O<s;O++)V[O]=V[B=h&B+C[O%L]+(R=V[O])],V[B]=R;(P.g=function(U){for(var K,ee=0,ne=P.i,se=P.j,J=P.S;U--;)K=J[ne=h&ne+1],ee=ee*s+J[h&(J[ne]=J[se=h&se+K])+(J[se]=K)];return P.i=ne,P.j=se,ee})(s)}function x(C,R){return R.i=C.i,R.j=C.j,R.S=C.S.slice(),R}function y(C,R){var L=[],P=typeof C,O;if(R&&P=="object")for(O in C)try{L.push(y(C[O],R-1))}catch{}return L.length?L:P=="string"?C:C+"\0"}function b(C,R){for(var L=C+"",P,O=0;O<L.length;)R[h&O]=h&(P^=R[h&O]*19)+L.charCodeAt(O++);return T(R)}function $(){try{var C;return d&&(C=d.randomBytes)?C=C(s):(C=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(C)),T(C)}catch{var R=e.navigator,L=R&&R.plugins;return[+new Date,e,L,e.screen,T(n)]}}function T(C){return String.fromCharCode.apply(0,C)}if(b(r.random(),n),t.exports){t.exports=f;try{d=SN}catch{}}else r["seed"+i]=f})(typeof self<"u"?self:bt,[],Math)})(Zm);var CN=Zm.exports,TN=gN,EN=yN,IN=xN,kN=bN,_N=vN,RN=wN,Sr=CN;Sr.alea=TN;Sr.xor128=EN;Sr.xorwow=IN;Sr.xorshift7=kN;Sr.xor4096=_N;Sr.tychei=RN;var Pu=Sr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lu{constructor(e,n,r,s,o){this.mean=e,this.stdDev=n,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Pu.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,n,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,n=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class AN{constructor(e,n,r,s){this.alpha=e,this.beta=1/n,this.dtype=r;const o=s||Math.random();this.randu=Pu.alea(o.toString()),this.randn=new Lu(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,r,s,o,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,n=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<n||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class ON{constructor(e=0,n=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=Pu.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(t,e,n=1,r="float32",s){if(kt(t),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new AN(e,n,r,s),a=Fe(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const FN=A({randomGamma_:DN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(t,e=0,n=1,r,s){if(kt(t),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new Lu(e,n,r,!1,s),a=Fe(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Jm=A({randomNormal_:PN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Jm(t,0,1,e,n)}const BN=A({randomStandardNormal_:LN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(t,e=0,n=1,r="float32",s){kt(t);const o=Fe(t,r),a=new ON(e,n,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Bu=A({randomUniform_:VN});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(t,e,n,r){return Bu(t,e,n,"int32",r)}const UN=A({randomUniformInt_:MN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(t,e,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return D.runKernel(Xp,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(t){const n={input:S(t,"input","real")};return D.runKernel(Yp,n)}const Bs=A({real_:WN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(t){const n={x:S(t,"x","reciprocal")};return D.runKernel(Qp,n)}const GN=A({reciprocal_:zN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(t){const n={x:S(t,"x","relu")};return D.runKernel(Zp,n)}const da=A({relu_:jN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(t){const n={x:S(t,"x","relu6")};return D.runKernel(nf,n)}const eg=A({relu6_:HN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(t,e){const r={x:S(t,"x","reverse")},s={dims:e};return D.runKernel(rf,r,s)}const gr=A({reverse_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(t){const e=S(t,"x","reverse");return E(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),gr(e,0)}const XN=A({reverse1d_:qN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(t,e){const n=S(t,"x","reverse");return E(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),gr(n,e)}const QN=A({reverse2d_:YN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(t,e){const n=S(t,"x","reverse");return E(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),gr(n,e)}const JN=A({reverse3d_:ZN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(t,e){const n=S(t,"x","reverse");return E(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),gr(n,e)}const tS=A({reverse4d_:eS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(t){const n={x:S(t,"x","round")};return D.runKernel(sf,n)}const tg=A({round_:nS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(t){const n={x:S(t,"x","rsqrt","float32")};return D.runKernel(of,n)}const sS=A({rsqrt_:rS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(t){const n={x:S(t,"x","selu")};return D.runKernel(hf,n)}const aS=A({selu_:oS});function iS(t,e,n,r,s,o=[1,1],a="NHWC"){const i=S(t,"x","separableConv2d"),u=S(e,"depthwiseFilter","separableConv2d"),c=S(n,"pointwiseFilter","separableConv2d");let l=i,h=!1;if(i.rank===3&&(h=!0,l=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),E(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),E(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),E(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=u.shape[2],f=u.shape[3];E(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const m=Cu(l,u,r,s,a,o),y=ua(m,c,1,"valid",a);return h?z(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const uS=A({separableConv2d_:iS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cS(t,e){const n=S(t,"x","setdiff1d"),r=S(e,"y","setdiff1d");E(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),E(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),E(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),o=await r.data(),a=new Set(o);let i=0;for(let l=0;l<s.length;l++)a.has(s[l])||i++;const u=new qr([i],n.dtype),c=new qr([i],"int32");for(let l=0,h=0;l<s.length;l++)a.has(s[l])||(u.values[h]=s[l],c.values[h]=l,h++);return[u.toTensor(),c.toTensor()]}const lS=cS;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(t){const n={x:S(t,"x","sign")};return D.runKernel(mf,n)}const dS=A({sign_:hS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(t){const n={x:S(t,"x","sin","float32")};return D.runKernel(pf,n)}const fS=A({sin_:pS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(t){const n={x:S(t,"x","sinh")};return D.runKernel(ff,n)}const gS=A({sinh_:mS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(t,e,n){const r=S(t,"x","slice1d");return E(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ce(r,[e],[n])}const xS=A({slice1d_:yS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(t,e,n){const r=S(t,"x","slice2d");return E(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ce(r,e,n)}const vS=A({slice2d_:bS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(t,e,n){const r=S(t,"x","slice3d");return E(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ce(r,e,n)}const $S=A({slice3d_:wS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(t,e,n){const r=S(t,"x","slice4d");return E(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ce(r,e,n)}const SS=A({slice4d_:NS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(t,e=-1){const n=S(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return D.runKernel($f,r,s)}const TS=A({softmax_:CS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(t){E(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return D.runKernel(Qd,e)}const Vu=A({fft_:ES});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(t){E(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return D.runKernel(ip,e)}const jo=A({ifft_:IS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=z(t,[n,e]);r=jo(s)}else{const s=[n,2*(e-1)],o=z(Bs(t),[n,e]),a=z(ha(t),[n,e]),i=gr(ce(o,[0,1],[n,e-2]),1),u=H(gr(ce(a,[0,1],[n,e-2]),1),fe(-1)),c=Xe([o,i],1),l=Xe([a,u],1),h=z(Vn(c,l),[s[0],s[1]]);r=jo(h)}if(r=Bs(r),t.rank===3&&t.shape[0]!==0){const s=r,o=t.shape[0];r=z(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const ng=A({irfft_:kS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(t,e,n=0){const s={x:S(t,"x","split")},o={numOrSizeSplits:e,axis:n};return D.runKernel(wf,s,o)}const Vs=A({split_:_S});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(t,e){E(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(e!=null&&e<n){const m=t.shape.map(y=>0),x=t.shape.map(y=>y);x[t.shape.length-1]=e,s=ce(t,m,x),n=e}else if(e!=null&&e>n){const m=t.shape.map(x=>x);m[t.shape.length-1]=e-n,s=Xe([t,mr(m)],t.shape.length-1),n=e}else s=t;const o=Et(s),a=z(Vn(s,o),[r,n]),i=Vu(a),u=Math.floor(n/2)+1,c=Bs(i),l=ha(i),h=Vs(c,[u,n-u],c.shape.length-1),d=Vs(l,[u,n-u],l.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,z(Vn(h[0],d[0]),f)}const Mu=A({rfft_:RS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(t,e){let n=S(t,"a","squaredDifference"),r=S(e,"b","squaredDifference");[n,r]=Pe(n,r),ye(n.shape,r.shape);const s={a:n,b:r},o={};return D.runKernel(If,s,o)}const rg=A({squaredDifference_:AS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(t,e){const n=S(t,"x","squeeze","string_or_numeric");return z(n,Un(n.shape,e).newShape)}const Ge=A({squeeze_:OS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(t,e=0){const n=Mo(t,"tensors","stack","string_or_numeric");E(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&E(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:e};return D.runKernel(Up,r,s)}const Sn=A({stack_:DS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(t,e=0){const r={x:S(t,"x","step")},s={alpha:e};return D.runKernel(zf,r,s)}const sg=A({step_:FS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(t,e,n,r,s=0,o=0,a=0,i=0,u=0){const l={x:S(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return D.runKernel(_f,l,h)}const LS=A({stridedSlice_:PS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(t){const n={x:S(t,"x","tan","float32")};return D.runKernel(Ff,n)}const VS=A({tan_:BS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function et(t,e){es(t);const n=Wn(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return zn(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ur(t,e,n){if(es(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=Wn(t,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return zn(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function og(t,e,n){if(es(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=Wn(t,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return zn(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(t,e,n){if(es(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=Wn(t,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return zn(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(t,e,n){if(es(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=Wn(t,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return zn(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(t,e,n){if(es(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=Wn(t,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,zn(t,e,r,n)}function ag(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(o+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(o+` update.rank != ${s+t.length-r}`);for(let a=0;a<s;++a)if(n.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<n.rank-s;++a)if(n.shape[a+s]!==t[a+r])throw new Error(o+` updates.shape[${a+s}] (${n.shape[a+s]}) != shape[${a+s}] (${t[a+s]})`)}function Uu(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}ag(n,e,t)}function pa(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=n.length;let a=1;for(let h=s;h<o;++h)a*=n[h];const i=s<1?1:s,u=j(e.shape)/i,c=[...qe(n.slice(0,s)),1],l=j(n);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:c,outputSize:l}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(t,e,n){const r=S(t,"tensor","tensorScatterupdate"),s=S(e,"indices","tensorScatterupdate","int32"),o=S(n,"updates","tensorScatterupdate");if(Uu(o,s,r.shape),r.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${o.dtype}.`);const a={tensor:r,indices:s,updates:o},i={};return D.runKernel(uf,a,i)}const GS=A({tensorScatterUpdate_:zS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(t,e=1,n=!0){const r=S(t,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:n},[i,u]=D.runKernel(Lf,o,a);return{values:i,indices:u}}const HS=A({topk_:jS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(t,e=0,n=1,r,s){if(kt(t),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Lu(e,n,r,!0,s),a=Fe(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const qS=A({truncatedNormal_:KS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(t,e=0){const n=S(t,"x","unique","string_or_numeric");E(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:e},[o,a]=D.runKernel(Vf,r,s);return{values:o,indices:a}}const YS=A({unique_:XS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(t,e,n){const r=S(t,"x","unsortedSegmentSum"),s=S(e,"segmentIds","unsortedSegmentSum","int32");E(jr(n),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:n};return D.runKernel(Uf,o,a)}const ZS=A({unsortedSegmentSum_:QS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(t,e=0){const n=S(t,"x","unstack","string_or_numeric");E(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:e};return D.runKernel(Mf,r,s)}const Cr=A({unstack_:JS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(t,e){return ku(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(t,e=!0,n,r){return D.makeVariable(t,e,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ig(t,e){const n=[];for(let o=0;o<e.length;o++)e[o]&&n.push(o);const r=Fe(t,"int32"),s=Fe([n.length,t.length],"int32");for(let o=0;o<n.length;o++){const a=r.indexToLoc(n[o]),i=o*t.length;s.values.set(a,i)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nC(t){const e=S(t,"condition","whereAsync","bool"),n=await e.data(),r=ig(e.shape,n);return t!==e&&e.dispose(),r}const ug=nC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rC(t,e,n){const r=S(t,"tensor","boolMask"),s=S(e,"mask","boolMask","bool"),o=n??0,a=s.rank,i=r.shape;E(a>0,()=>"mask cannot be scalar"),It(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let x=o;x<o+a;x++)u*=i[x];const c=i.slice(0,o).concat([u],i.slice(o+a)),l=z(r,c),h=z(s,[-1]),d=await ug(h),f=Ge(d,[1]),m=Vm(l,f,o);return t!==r&&r.dispose(),e!==s&&s.dispose(),f.dispose(),l.dispose(),h.dispose(),d.dispose(),m}const sC=rC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(t,e,n){const r=S(t,"x","transpose");if(e==null&&(e=r.shape.map((a,i)=>i).reverse()),E(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{E(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?de(()=>{let a=Bs(r),i=ha(r);return a=D.runKernel(_o,{x:a},o),i=D.runKernel(_o,{x:i},o),n&&(i=pn(i)),Vn(a,i)}):D.runKernel(_o,s,o)}const zi=A({transpose_:oC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aC(t,e,n,r,s=!0){const o=S(t,"v","movingAverage"),a=S(e,"x","movingAverage"),i=S(n,"decay","movingAverage");Tb(o,a),E(De(o.shape,a.shape),()=>"Shape mismatch in v and x");const u=fe(1),c=le(u,i);let l=H(le(a,o),c);if(s){E(r!=null,()=>"When using zeroDebias: true, step is required.");const h=S(r,"step","movingAverage");l=pe(l,le(u,Fs(i,h)))}return ae(o,l)}const iC=A({movingAverage_:aC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(t,e,n){kt(n);const r=S(t,"indices","scatterND","int32"),s=S(e,"updates","scatterND");Uu(s,r,n);const o={indices:r,updates:s},a={shape:n};return D.runKernel(af,o,a)}const cC=A({scatterND_:uC});function lC(t,e,n,r){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(t,e,n,r=0){kt(n);const s=S(t,"sparseIndices","sparseToDense","int32"),o=S(e,"sparseValues","sparseToDense","string_or_numeric"),a=S(r,"defaultValue","sparseToDense",o.dtype);lC(s,o,n,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},u={outputShape:n};return D.runKernel(Ef,i,u)}const dC=A({sparseToDense_:hC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(t,e){const n=S(e,"indices","gatherND","int32"),s={params:S(t,"x","gatherND","string_or_numeric"),indices:n};return D.runKernel(sp,s)}const fC=A({gatherND_:pC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(t,e){if(e==null)return t.shape.slice();if(De(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)e[r]==null&&t.shape[r]!=null?n.push(t.shape[r]):n.push(e[r]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(t,e,n,r){const s=S(t,"x","dropout");if(E(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),E(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof Ve?s.clone():s;const o=mC(s,n),a=1-e,i=pe(Bm(ae(Bu(o,0,1,"float32",r),a)),a);return H(s,i)}const yC=A({dropout_:gC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cg(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Wu(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let o=0;o<t;++o){const a=2*Math.PI*o/(t+r-1);s[o]=e-n*Math.cos(a)}return et(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xC(t,e,n=1){const r=S(t,"predictions","inTopK"),s=S(e,"targets","inTopK");E(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),E(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),It(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];E(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const a=await r.data(),i=await s.data(),[u,c]=[a.length/o,o],l=Ln("bool",u);for(let h=0;h<u;h++){const d=h*c,f=a.subarray(d,d+c),m=[];for(let x=0;x<f.length;x++)m.push({value:f[x],index:x});m.sort((x,y)=>y.value-x.value),l[h]=0;for(let x=0;x<n;x++)if(m[x].index===i[h]){l[h]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),dn(l,s.shape,"bool")}const bC=xC;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vC(t,e,n,r,s,o="NHWC",a){let i=t;t.rank===3&&(i=z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;u.rank===3&&(u=z(e,[1,e.shape[0],e.shape[1],e.shape[2]])),E(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),E(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),E(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];E(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),E(l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),Ut("conv2dDerFilter",s,a);const h={x:i,dy:u},d={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:n};return D.runKernel(Ed,h,d)}const wC=A({conv2DBackpropFilter_:vC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return H(t,sg(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ma(t,e){let n=e;const r=Am(t.shape,e.shape);return r.length>0&&(n=Te(n,r)),z(n,t.shape)}function ga(t,e,n,r){if(e==="linear")return t;if(e==="relu")return da(t);if(e==="elu")return Dm(t);if(e==="relu6")return eg(t);if(e==="prelu")return Qm(t,n);if(e==="leakyrelu")return Um(t,r);if(e==="sigmoid")return ir(t);throw new Error(`Unknown fused activation ${e}.`)}const ya=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",ya(D.state.gradientDepth,u)===!1){E(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let L=ua(t,e,n,r,s,o,a);return i!=null&&(L=ae(L,i)),ga(L,u,c,l)}const h=S(t,"x","conv2d","float32"),d=S(e,"filter","conv2d","float32");let f=h,m=!1;h.rank===3&&(m=!0,f=z(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),E(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Ut("fused conv2d",r,a);const x=s==="NHWC"?f.shape[3]:f.shape[1];E(d.shape[2]===x,()=>`Error in conv2d: depth of input (${x}) must match input depth for filter ${d.shape[2]}.`),E(Nt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const y=_t(f.shape,d.shape,n,o,r,a);let b;i!=null&&(b=S(i,"bias","fused conv2d"),[b]=Pe(b,h),s==="NHWC"?ye(y.outShape,b.shape):(E(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),E(b.shape.length===0||b.shape[0]===y.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let $;if(c!=null){const L=c.shape;if(E(L.length<=1||L.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${L.length}.`),L.length===1)E(L[0]===1||L[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${L}) is not compatible with the number of output channels (${y.outChannels}).`);else if(L.length===3)try{ye(L,y.outShape)}catch{const O=`Error in fused conv2d: PReLU activation weights (${L}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(O)}$=S(c,"prelu weights","fused conv2d")}const T=(L,P)=>{E(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[O,B,V,U]=P,K=fa(L,V,u);E(Ds(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const ee=Rm(B.shape,K,O,n,r),ne=wC(B,K,O.shape,n,r),se=[ee,ne];if(U!=null){const J=ma(U,K);se.push(J)}return se},C={x:f,filter:d,bias:b,preluActivationWeights:$},R={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Nn((P,O,B)=>{let V=D.runKernel(Ti,C,R);return B([O,P,V]),m&&(V=z(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:T}})(f,d):Nn((P,O,B,V)=>{let U=D.runKernel(Ti,C,R);return V([O,P,U,B]),m&&(U=z(U,[U.shape[1],U.shape[2],U.shape[3]])),{value:U,gradFunc:T}})(f,d,b)}const NC=A({fusedConv2d_:$C});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(t,e,n,r,s,o=[1,1],a){let i=t;t.rank===3&&(i=z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;u.rank===3&&(u=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:n};return D.runKernel(Vd,c,l)}const CC=A({depthwiseConv2dNativeBackpropFilter_:SC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TC(t,e,n,r,s,o=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:n},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:t},h=D.runKernel(Md,c,l);return u?z(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const EC=A({depthwiseConv2dNativeBackpropInput_:TC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(ya(D.state.gradientDepth,u)===!1){let R=Cu(t,e,n,r,s,o,a);return i!=null&&(R=ae(R,i)),ga(R,u,c,l)}const h=S(t,"x","depthwiseConv2d","float32"),d=S(e,"filter","depthwiseConv2d","float32");let f=h,m=!1;h.rank===3&&(m=!0,f=z(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),E(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),E(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),E(Nt(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Ut("fused depthwiseConv2d",r,a);const x=_t(f.shape,d.shape,n,o,r,a,!0);let y;i!=null&&(y=S(i,"bias","fused conv2d"),[y]=Pe(y,h),ye(x.outShape,y.shape));let b;c!=null&&(b=S(c,"prelu weights","fused depthwiseConv2d"));const $=(R,L)=>{E(Ds(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[P,O,B,V]=L,U=fa(R,B,u),K=EC(O.shape,U,P,n,r,o,a),ee=CC(O,U,P.shape,n,r,o,a);if(V!=null){const ne=ma(y,U);return[K,ee,ne]}return[K,ee]},T={x:f,filter:d,bias:y,preluActivationWeights:b},C={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Nn((L,P,O)=>{let B=D.runKernel(Ei,T,C);return O([P,L,B]),m&&(B=z(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:$}})(f,d):Nn((L,P,O,B)=>{let V=D.runKernel(Ei,T,C);return B([P,L,V,O]),m&&(V=z(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:$}})(f,d,y)}const kC=A({fusedDepthwiseConv2d_:IC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _C({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(ya(D.state.gradientDepth,o)===!1){let U=we(t,e,n,r);return s!=null&&(U=ae(U,s)),ga(U,o,a,i)}let u=S(t,"a","fused matMul"),c=S(e,"b","fused matMul");[u,c]=Pe(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?c.shape[c.rank-1]:c.shape[c.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),x=c.shape.slice(0,-2),y=j(m),b=j(x);E(l===h,()=>`Error in fused matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`);const T=ye(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),C=n?z(u,[y,l,d]):z(u,[y,d,l]),R=r?z(c,[b,f,h]):z(c,[b,h,f]);let L;s!=null&&(L=S(s,"bias","fused matMul"),[L]=Pe(L,u),ye(T,L.shape));let P;a!=null&&(P=S(a,"prelu weights","fused matMul"));const O=(U,K)=>{const[ee,ne,se,J]=K,me=fa(z(U,se.shape),se,o);let be,Ne;if(!n&&!r?(be=we(me,ne,!1,!0),Ne=we(ee,me,!0,!1)):!n&&r?(be=we(me,ne,!1,!1),Ne=we(me,ee,!0,!1)):n&&!r?(be=we(ne,me,!1,!0),Ne=we(ee,me,!1,!1)):(be=we(ne,me,!0,!0),Ne=we(me,ee,!0,!0)),s!=null){const St=ma(J,me);return[be,Ne,St]}else return[be,Ne]},B={a:C,b:R,bias:L,preluActivationWeights:P},V={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:i};return s==null?Nn((K,ee,ne)=>{const se=D.runKernel(Ci,B,V);return ne([K,ee,se]),{value:z(se,T),gradFunc:O}})(C,R):Nn((K,ee,ne,se)=>{const J=D.runKernel(Ci,B,V);return se([K,ee,J,ne]),{value:z(J,T),gradFunc:O}})(C,R,L)}const RC=A({fusedMatMul_:_C});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AC=Object.freeze(Object.defineProperty({__proto__:null,conv2d:NC,depthwiseConv2d:kC,matMul:RC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(t){return Wu(t,.54,.46)}const DC=A({hammingWindow_:OC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FC(t){return Wu(t,.5,.5)}const lg=A({hannWindow_:FC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PC(t,e,n,r=!1,s=0){let o=0;const a=[];for(;o+e<=t.size;)a.push(ce(t,o,e)),o+=n;if(r)for(;o<t.size;){const i=o+e-t.size,u=Xe([ce(t,o,e-i),Ys([i],s)]);a.push(u),o+=n}return a.length===0?ur([],[0,e]):z(Xe(a),[a.length,e])}const hg=A({frame_:PC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(t,e,n,r,s=lg){r==null&&(r=cg(e));const o=hg(t,e,n),a=H(o,s(e));return Mu(a,r)}const BC=A({stft_:LC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(t,e,n,r,s="bilinear",o=0){const a=S(t,"image","cropAndResize"),i=S(e,"boxes","cropAndResize","float32"),u=S(n,"boxInd","cropAndResize","int32"),c=i.shape[0];E(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),E(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),E(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),E(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),E(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),E(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const l={image:a,boxes:i,boxInd:u},h={method:s,extrapolationValue:o,cropSize:r};return D.runKernel(Fd,l,h)}const MC=A({cropAndResize_:VC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(t){const e=S(t,"image","flipLeftRight","float32");E(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return D.runKernel(Jd,n,{})}const WC=A({flipLeftRight_:UC});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zC(t){const e=S(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];E(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),E(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,Rs(e,s)}const GC=A({grayscaleToRGB_:zC});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(t){const e=S(t,"image","RGBToGrayscale"),n=e.rank-1,r=e.shape[n];E(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),E(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=Oe(e,"float32"),a=et([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Vr("ij,j->i",o,a);break;case 3:i=Vr("ijk,k->ij",o,a);break;case 4:i=Vr("ijkl,l->ijk",o,a);break;case 5:i=Vr("ijklm,m->ijkl",o,a);break;case 6:i=Vr("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=cn(i,-1),Oe(i,s)}const HC=A({rgbToGrayscale_:jC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(t,e,n=0,r=.5){const s=S(t,"image","rotateWithOffset","float32");E(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:n,center:r};return D.runKernel(Gf,o,a)}const qC=A({rotateWithOffset_:KC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(t,e,n,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=t.shape[0];return n=Math.min(n,a),E(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),E(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),E(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),E(e.rank===1,()=>"scores must be a 1D tensor"),E(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),E(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=S(t,"boxes","nonMaxSuppression","float32"),a=S(e,"scores","nonMaxSuppression","float32"),i=rs(o,a,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return D.runKernel(Pp,{boxes:o,scores:a},u)}const YC=A({nonMaxSuppression_:XC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(t,e,n){const r=ZC(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function ZC(t,e,n){return e2(t,e,n||JC)}function JC(t,e){return t>e?1:t<e?-1:0}function e2(t,e,n){let r=0,s=t.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=n(e,t[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dg(t,e,n,r,s){return zu(t,e,n,r,s,0)}function pg(t,e,n,r,s,o){return zu(t,e,n,r,s,0,!1,o,!0)}function fg(t,e,n,r,s,o){return zu(t,e,n,r,s,o,!0)}function zu(t,e,n,r,s,o,a=!1,i=!1,u=!1){const c=[];for(let y=0;y<e.length;y++)e[y]>s&&c.push({score:e[y],boxIndex:y,suppressBeginIndex:0});c.sort(Bl);const l=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&c.length>0;){const y=c.pop(),{score:b,boxIndex:$,suppressBeginIndex:T}=y;if(b<s)break;let C=!1;for(let R=h.length-1;R>=T;--R){const L=t2(t,$,h[R]);if(L>=r){C=!0;break}if(y.score=y.score*n2(r,l,L),y.score<=s)break}y.suppressBeginIndex=h.length,C||(y.score===b?(h.push($),d.push(y.score)):y.score>s&&QC(c,y,Bl))}const f=h.length,m=n-f;i&&m>0&&(h.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const x={selectedIndices:h};return a&&(x.selectedScores=d),u&&(x.validOutputs=f),x}function t2(t,e,n){const r=t.subarray(e*4,e*4+4),s=t.subarray(n*4,n*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),f=(i-o)*(u-a),m=(h-c)*(d-l);if(f<=0||m<=0)return 0;const x=Math.max(o,c),y=Math.max(a,l),b=Math.min(i,h),$=Math.min(u,d),T=Math.max(b-x,0)*Math.max($-y,0);return T/(f+m-T)}function n2(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Bl(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function r2(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=S(t,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),i=rs(o,a,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),c=u[0],l=u[1],{selectedIndices:h}=dg(c,l,n,r,s);return o!==t&&o.dispose(),a!==e&&a.dispose(),et(h,"int32")}const s2=r2;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=S(t,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),u=rs(a,i,n,r,s,o);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},h=D.runKernel(Bp,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}const a2=A({nonMaxSuppressionWithScore_:o2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function i2(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=S(t,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),u=rs(a,i,n,r,s,o);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),l=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=fg(l,h,n,r,s,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:et(d,"int32"),selectedScores:et(f)}}const u2=i2;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=S(t,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),u=rs(a,i,n,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,d={boxes:a,scores:i},f={maxOutputSize:c,iouThreshold:l,scoreThreshold:h,padToMaxOutputSize:o},m=D.runKernel(Lp,d,f);return{selectedIndices:m[0],validOutputs:m[1]}}const l2=A({nonMaxSuppressionPadded_:c2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function h2(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=S(t,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),u=rs(a,i,n,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[d,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:m,validOutputs:x}=pg(d,f,c,l,h,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:et(m,"int32"),validOutputs:fe(x,"int32")}}const d2=h2;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(t,e,n=!1,r=!1){const s=S(t,"images","resizeBilinear");E(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),E(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),E(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},c=D.runKernel(tf,i,u);return a?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const f2=A({resizeBilinear_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(t,e,n=!1,r=!1){const s=S(t,"images","resizeNearestNeighbor");E(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),E(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),E(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),E(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},c=D.runKernel(ef,i,u);return a?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const g2=A({resizeNearestNeighbor_:m2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(t,e="binary",n=!1,r=.5){const s=S(t,"image","threshold"),o=.2989,a=.587,i=.114,u=s.shape[0]*s.shape[1];let c=H(et([r]),255),l,h,d,f;if(E(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),E(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),E(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),E(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[l,h,d]=Vs(s,[1,1,1],-1);const y=H(l,o),b=H(h,a),$=H(d,i);f=ae(ae(y,b),$)}else f=t;if(e==="otsu"){const y=km(Oe(tg(f),"int32"),dn([]),256);c=x2(y,u)}const m=n?Iu(f,c):la(f,c);return Oe(H(m,255),"int32")}function x2(t,e){let n=et([-1]),r=et([0]),s=et([0]),o,a,i,u,c,l;for(let h=0;h<t.size-1;h++){o=ce(t,0,h+1),a=ce(t,h+1),c=pe(Te(o),e),l=pe(Te(a),e);const d=Te(H(o,Ls(0,o.size)));i=pe(d,Te(o));const f=Ys(a.shape,o.size),m=ae(Ls(0,a.size),f),x=H(a,m);u=pe(Te(x),Te(a));const y=le(i,u),b=le(i,u),$=H(c,l);s=H(H($,y),b);const T=la(s,r);r=Pn(T,s,r),n=Pn(T,et([h]),n)}return n}const b2=A({threshold_:y2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(t,e,n="nearest",r="constant",s=0,o){const a=S(t,"image","transform","float32"),i=S(e,"transforms","transform","float32");E(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),E(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return D.runKernel(Bf,u,c)}const w2=A({transform_:v2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(t,e,n){const r=S(t,"a","bandPart");E(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);let i,u;typeof e=="number"?(E(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),E(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=S(e<0?o:e,"numLower","bandPart")):(E(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=Pn(Wi(e,0),o,Go(e,o))),typeof n=="number"?(E(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),E(n<=a,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`),u=S(n<0?a:n,"numUpper","bandPart")):(E(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=Pn(Wi(n,0),a,Go(n,a)));const c=z(Ls(0,o,1,"int32"),[-1,1]),l=Ls(0,a,1,"int32"),h=le(c,l),d=Wo(Iu(h,i),Mm(h,pn(u))),f=mr([o,a],r.dtype);return z(Sn(Cr(z(r,[-1,o,a])).map(m=>Pn(d,m,f))),s)}const N2=A({bandPart_:$2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(t){let e;if(Array.isArray(t)){e=!1,E(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=t[0].shape[0];for(let o=1;o<t.length;++o)E(t[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[o].shape[0]} vs. ${s})`)}else e=!0,t=Vs(t,t.shape[0],0).map(s=>Ge(s,[0]));E(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let s=0;s<t.length;++s)n.push(D.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const i=H(Te(H(n[a],o)),n[a]);o=le(o,i)}return pe(o,ca(o,"euclidean"))}));return e?Sn(n,0):n}const C2=A({gramSchmidt_:S2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(t,e=!1){if(E(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return Vl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((u,c)=>u*c),r=Cr(z(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[c,l]=Vl(u,e);s.push(c),o.push(l)});const a=z(Sn(s,0),t.shape),i=z(Sn(o,0),t.shape);return[a,i]}}function Vl(t,e=!1){return D.tidy(()=>{E(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=Lm(n),o=Fn(t);const a=ur([[1]],[1,1]);let i=Fn(a);const u=n>=r?r:n;for(let c=0;c<u;++c){const l=o,h=i,d=s;[i,o,s]=D.tidy(()=>{const f=ce(o,[c,c],[n-c,1]),m=ca(f),x=ce(o,[c,c],[1,1]),y=Pn(la(x,0),ur([[-1]]),ur([[1]])),b=le(x,H(y,m)),$=pe(f,b);$.shape[0]===1?i=Fn(a):i=Xe([a,ce($,[1,0],[$.shape[0]-1,$.shape[1]])],0);const T=pn(pe(we(y,b),m)),C=ce(o,[c,0],[n-c,r]),R=H(T,i),L=zi(i);if(c===0)o=le(C,we(R,we(L,C)));else{const B=le(C,we(R,we(L,C)));o=Xe([ce(o,[0,0],[c,r]),B],0)}const P=zi(R),O=ce(s,[0,c],[n,s.shape[1]-c]);if(c===0)s=le(O,we(we(O,i),P));else{const B=le(O,we(we(O,i),P));s=Xe([ce(s,[0,0],[n,c]),B],1)}return[i,o,s]}),Ae([l,h,d])}return!e&&n>r&&(s=ce(s,[0,0],[n,r]),o=ce(o,[0,0],[r,r])),[s,o]})}const E2=A({qr_:T2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lt;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(lt||(lt={}));function I2(t,e,n=lt.SUM_BY_NONZERO_WEIGHTS){const r=S(t,"losses","computeWeightedLoss");let s=null;e!=null&&(s=S(e,"weights","computeWeightedLoss"));const o=s==null?r:H(r,s);if(n===lt.NONE)return o;if(n===lt.SUM)return Te(o);if(n===lt.MEAN){if(s==null)return zo(o);{const a=r.size/s.size,i=pe(Te(o),Te(s));return a>1?pe(i,fe(a)):i}}if(n===lt.SUM_BY_NONZERO_WEIGHTS){if(s==null)return pe(Te(o),fe(r.size));{const a=H(s,or(r.shape)),i=Oe(Te(Xm(a,fe(0))),"float32");return pe(Te(o),i)}}throw Error(`Unknown reduction: ${n}`)}const Cn=A({computeWeightedLoss_:I2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(t,e,n,r=lt.SUM_BY_NONZERO_WEIGHTS){const s=S(t,"labels","absoluteDifference"),o=S(e,"predictions","absoluteDifference");let a=null;n!=null&&(a=S(n,"weights","absoluteDifference")),It(s.shape,o.shape,"Error in absoluteDifference: ");const i=Ct(le(s,o));return Cn(i,a,r)}const _2=A({absoluteDifference_:k2});function R2(t,e,n,r,s=lt.SUM_BY_NONZERO_WEIGHTS){const o=S(t,"labels","cosineDistance"),a=S(e,"predictions","cosineDistance");let i=null;r!=null&&(i=S(r,"weights","cosineDistance")),It(o.shape,a.shape,"Error in cosineDistance: ");const u=fe(1),c=le(u,Te(H(o,a),n,!0));return Cn(c,i,s)}const A2=A({cosineDistance_:R2});function O2(t,e,n,r=lt.SUM_BY_NONZERO_WEIGHTS){let s=S(t,"labels","hingeLoss");const o=S(e,"predictions","hingeLoss");let a=null;n!=null&&(a=S(n,"weights","hingeLoss")),It(s.shape,o.shape,"Error in hingeLoss: ");const i=fe(1);s=le(H(fe(2),s),i);const u=da(le(i,H(s,o)));return Cn(u,a,r)}const D2=A({hingeLoss_:O2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(t,e,n,r=1,s=lt.SUM_BY_NONZERO_WEIGHTS){const o=S(t,"labels","huberLoss"),a=S(e,"predictions","huberLoss");let i=null;n!=null&&(i=S(n,"weights","huberLoss")),It(o.shape,a.shape,"Error in huberLoss: ");const u=fe(r),c=Ct(le(a,o)),l=Go(c,u),h=le(c,l),d=ae(H(fe(.5),Qt(l)),H(u,h));return Cn(d,i,s)}const P2=A({huberLoss_:F2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(t,e,n,r=1e-7,s=lt.SUM_BY_NONZERO_WEIGHTS){const o=S(t,"labels","logLoss"),a=S(e,"predictions","logLoss");let i=null;n!=null&&(i=S(n,"weights","logLoss")),It(o.shape,a.shape,"Error in logLoss: ");const u=fe(1),c=fe(r),l=pn(H(o,Ps(ae(a,c)))),h=H(le(u,o),Ps(ae(le(u,a),c))),d=le(l,h);return Cn(d,i,s)}const B2=A({logLoss_:L2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(t,e,n,r=lt.SUM_BY_NONZERO_WEIGHTS){const s=S(t,"labels","meanSquaredError"),o=S(e,"predictions","meanSquaredError");let a=null;n!=null&&(a=S(n,"weights","meanSquaredError")),It(s.shape,o.shape,"Error in meanSquaredError: ");const i=rg(s,o);return Cn(i,a,r)}const M2=A({meanSquaredError_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(t,e){const n=S(t,"labels","sigmoidCrossEntropyWithLogits"),r=S(e,"logits","sigmoidCrossEntropyWithLogits");It(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=da(r),o=H(r,n),a=Wm($n(pn(Ct(r))));return ae(le(s,o),a)}function W2(t,e,n,r=0,s=lt.SUM_BY_NONZERO_WEIGHTS){let o=S(t,"multiClassLabels","sigmoidCrossEntropy");const a=S(e,"logits","sigmoidCrossEntropy");let i=null;if(n!=null&&(i=S(n,"weights","sigmoidCrossEntropy")),It(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const c=fe(r),l=fe(1),h=fe(.5);o=ae(H(o,le(l,c)),H(h,c))}const u=U2(o,a);return Cn(u,i,s)}const z2=A({sigmoidCrossEntropy_:W2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Nn((s,o,a)=>{const u=Gm(o,[n],!0),c=le(Oe(o,"float32"),u);a([s,c]);const l=pn(H(c,s));return{value:Te(l,[n]),gradFunc:(f,m)=>{const[x,y]=m,b=Rt(f.shape,[n]);return[H(z(f,b),le(Oe(x,"float32"),$n(y))),H(z(f,b),le($n(y),Oe(x,"float32")))]}}})(t,e)}function j2(t,e,n,r=0,s=lt.SUM_BY_NONZERO_WEIGHTS){let o=S(t,"onehotLabels","softmaxCrossEntropy");const a=S(e,"logits","softmaxCrossEntropy");let i=null;if(n!=null&&(i=S(n,"weights","softmaxCrossEntropy")),It(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const c=fe(r),l=fe(1),h=fe(o.shape[1]);o=ae(H(o,le(l,c)),pe(c,h))}const u=G2(o,a);return Cn(u,i,s)}const H2=A({softmaxCrossEntropy_:j2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(t,e,n,r){const s=S(t,"indices","sparseFillEmptyRows","int32"),o=S(e,"values","sparseFillEmptyRows"),a=S(n,"denseShape","sparseFillEmptyRows","int32"),i=S(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:i},c=D.runKernel(Nf,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const q2=A({sparseFillEmptyRows_:K2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(t,e,n){const r=S(t,"inputIndices","sparseReshape","int32"),s=S(e,"inputShape","sparseReshape","int32"),o=S(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=D.runKernel(Sf,a);return{outputIndices:i[0],outputShape:i[1]}}const Y2=A({sparseReshape_:X2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(t,e,n){const r=S(t,"data","sparseSegmentMean"),s=S(e,"indices","sparseSegmentMean","int32"),o=S(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return D.runKernel(Cf,a)}const Z2=A({sparseSegmentMean_:Q2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(t,e,n){const r=S(t,"data","sparseSegmentSum"),s=S(e,"indices","sparseSegmentSum","int32"),o=S(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return D.runKernel(Tf,a)}const eT=A({sparseSegmentSum_:J2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(t,e,n,r,s,o,a,i){const u=S(t,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=S(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},h={data:u,dataSplits:c},d=D.runKernel(Rf,h,l);return{nGrams:d[0],nGramsSplits:d[1]}}const nT=A({stringNGrams_:tT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(t,e,n=!0){const r=S(t,"input","stringSplit","string"),s=S(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:n},a={input:r,delimiter:s},i=D.runKernel(Af,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const sT=A({stringSplit_:rT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(t,e){const n=S(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return D.runKernel(Of,s,r)}const aT=A({stringToHashBucketFast_:oT});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(t,e,n,r=!0){const s=S(t,"input","staticRegexReplace","string"),o={pattern:e,rewrite:n,replaceGlobal:r};return D.runKernel(kf,{x:s},o)}const uT=A({staticRegexReplace_:iT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cT={fft:Vu,ifft:jo,rfft:Mu,irfft:ng},lT={hammingWindow:DC,hannWindow:lg,frame:hg,stft:BC},xa={flipLeftRight:WC,grayscaleToRGB:GC,resizeNearestNeighbor:g2,resizeBilinear:f2,rgbToGrayscale:HC,rotateWithOffset:qC,cropAndResize:MC,nonMaxSuppression:YC,nonMaxSuppressionAsync:s2,nonMaxSuppressionWithScore:a2,nonMaxSuppressionWithScoreAsync:u2,nonMaxSuppressionPadded:l2,nonMaxSuppressionPaddedAsync:d2,threshold:b2,transform:w2},hT={bandPart:N2,gramSchmidt:C2,qr:E2},dT={absoluteDifference:_2,computeWeightedLoss:Cn,cosineDistance:A2,hingeLoss:D2,huberLoss:P2,logLoss:B2,meanSquaredError:M2,sigmoidCrossEntropy:z2,softmaxCrossEntropy:H2},pT={sparseFillEmptyRows:q2,sparseReshape:Y2,sparseSegmentMean:Z2,sparseSegmentSum:eT},fT={stringNGrams:nT,stringSplit:sT,stringToHashBucketFast:aT,staticRegexReplace:uT};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT=new Map,gT=new Map;class yT{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class er{constructor(){this.classNameMap={}}static getMap(){return er.instance==null&&(er.instance=new er),er.instance}static register(e){er.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function xT(t,e,n){E(t.className!=null,()=>"Class being registered does not have the static className property defined."),E(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),E(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof n>"u"&&(n=t.className);const r=n,s=e+">"+r;return er.register(t),mT.set(s,t),gT.set(t,s),t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tr extends yT{minimize(e,n=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Ae(o),n?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return r$(e,n)}dispose(){this.iterations_!=null&&Ae(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:fe(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Tr,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bT extends Tr{static get className(){return"Adadelta"}constructor(e,n,r=null){super(),this.learningRate=e,this.rho=n,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:de(()=>Et(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:de(()=>Et(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;de(()=>{const l=ae(H(u,this.rho),H(Qt(i),1-this.rho)),h=H(pe(wn(ae(c,this.epsilon)),wn(ae(u,this.epsilon))),i),d=ae(H(c,this.rho),H(Qt(h),1-this.rho));u.assign(l),c.assign(d);const f=ae(H(h,-this.learningRate),o);o.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ae(this.accumulatedGrads.map(e=>e.variable)),Ae(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vT extends Tr{static get className(){return"Adagrad"}constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:de(()=>Ys(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const i=this.accumulatedGrads[s].variable;de(()=>{const u=ae(i,Qt(a));i.assign(u);const c=ae(H(pe(a,wn(ae(u,D.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ae(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wT extends Tr{static get className(){return"Adam"}constructor(e,n,r,s=null){super(),this.learningRate=e,this.beta1=n,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],de(()=>{this.accBeta1=fe(n).variable(),this.accBeta2=fe(r).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);de(()=>{const r=le(1,this.accBeta1),s=le(1,this.accBeta2);n.forEach((o,a)=>{const i=D.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:de(()=>Et(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:de(()=>Et(i).variable(u))});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=ae(H(l,this.beta1),H(c,1-this.beta1)),f=ae(H(h,this.beta2),H(Qt(c),1-this.beta2)),m=pe(d,r),x=pe(f,s);l.assign(d),h.assign(f);const y=ae(H(pe(m,ae(wn(x),this.epsilon)),-this.learningRate),i);i.assign(y)}),this.accBeta1.assign(H(this.accBeta1,this.beta1)),this.accBeta2.assign(H(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ae(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),de(()=>{this.accBeta1.assign(Fs(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fs(this.beta2,this.iterations_+1))});const n=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $T extends Tr{static get className(){return"Adamax"}constructor(e,n,r,s=null,o=0){super(),this.learningRate=e,this.beta1=n,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],de(()=>{this.iteration=fe(0).variable(),this.accBeta1=fe(n).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);de(()=>{const r=le(1,this.accBeta1),s=pe(-this.learningRate,ae(H(this.iteration,this.decay),1));n.forEach((o,a)=>{const i=D.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Et(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Et(i).variable(u)});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=ae(H(l,this.beta1),H(c,1-this.beta1)),f=H(h,this.beta2),m=Ct(c),x=qm(f,m);l.assign(d),h.assign(x);const y=ae(H(pe(s,r),pe(d,ae(x,this.epsilon))),i);i.assign(y)}),this.iteration.assign(ae(this.iteration,1)),this.accBeta1.assign(H(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ae(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mg extends Tr{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=D.registeredVariables[r];de(()=>{const i=ae(H(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=ln(fe(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NT extends mg{static get className(){return"Momentum"}constructor(e,n,r=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=r,this.accumulations=[],this.m=fe(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:de(()=>Et(o).variable(!1))});const a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[r];i!=null&&de(()=>{let u;const c=ae(H(this.m,a),i);this.useNesterov?u=ae(H(this.c,ae(i,H(c,this.m))),o):u=ae(H(this.c,c),o),a.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ae(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ST extends Tr{static get className(){return"RMSProp"}constructor(e,n=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=D.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:de(()=>Et(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:de(()=>Et(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:de(()=>Et(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedMeanSquares[s].variable,c=this.accumulatedMoments[s].variable;de(()=>{const l=ae(H(u,this.decay),H(Qt(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[s].variable,d=ae(H(h,this.decay),H(i,1-this.decay)),f=pe(H(i,this.learningRate),wn(le(l,ae(Qt(d),this.epsilon)))),m=ae(H(c,this.momentum),f);u.assign(l),h.assign(d),c.assign(m);const x=le(o,m);o.assign(x)}else{const h=ae(H(u,this.decay),H(Qt(i),1-this.decay)),d=ae(H(c,this.momentum),pe(H(i,this.learningRate),wn(ae(h,this.epsilon))));u.assign(h),c.assign(d);const f=le(o,d);o.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ae(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ae(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ae(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CT=[bT,vT,wT,$T,NT,ST,mg];function TT(){for(const t of CT)xT(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ET="model",IT=".json",kT=".weights.bin";function Ml(t){return new Promise(e=>setTimeout(e)).then(t)}class yr{constructor(e){if(!M().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(yr.URL_SCHEME)&&(e=e.slice(yr.URL_SCHEME.length)),(e==null||e.length===0)&&(e=ET),this.modelJsonFileName=e+IT,this.weightDataFileName=e+kT}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=nn.join(e.weightData),r=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=mm(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await Ml(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=r,await Ml(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ks(e)}}}}yr.URL_SCHEME="downloads://";class _T{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),a=o.modelTopology;if(a==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const u=Nu(o,c=>this.loadWeights(c));e(u)},r.onerror=s=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const n=[],r=[];for(const a of e)n.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(o).then(a=>[n,a])}loadWeightsFile(e,n){return new Promise((r,s)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;r(i)},o.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],r=this.weightsFiles.map(o=>Ll(o.name)),s={};for(const o of e)o.paths.forEach(a=>{const i=Ll(a);if(n.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(n.push(i),r.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(i)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const RT=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(yr.URL_SCHEME)?AT(t.slice(yr.URL_SCHEME.length)):null;Re.registerSaveRouter(RT);function AT(t="model"){return new yr(t)}function OT(t){return new _T(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(t,e,n,r){a(t),n=n??0,r=r??1,i(n,r);let s=0;const o=u=>(u.then(c=>{const l=n+ ++s/t.length*(r-n);return e(l),c}),u);function a(u){E(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,c){E(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),E(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),E(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(t.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function gg(t,e){e==null&&(e={});const n=e.fetchFunc==null?M().platform.fetch:e.fetchFunc,r=t.map(h=>n(h,e.requestInit,{isBinary:!0})),i=(e.onProgress==null?await Promise.all(r):await Ul(r,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(i):await Ul(i,e.onProgress,.5,1)}function DT(t,e){var n;const r=e.fetchFunc==null?M().platform.fetch:e.fetchFunc;let s=0,o;return(n=e.onProgress)===null||n===void 0||n.call(e,0),new ReadableStream({pull:async a=>{for(var i;s<t.length;){o||(o=(await r(t[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:c}=await o.read();if(u){s++,o=void 0,(i=e.onProgress)===null||i===void 0||i.call(e,s/t.length);continue}a.enqueue(c);return}a.close()}})}async function FT(t,e="",n,r){return yg(a=>gg(a,{requestInit:r}))(t,e,n)}function yg(t){return async(e,n="",r)=>{const s=e.map(()=>!1),o={},a=r!=null?r.map(()=>!1):[],i=[];if(e.forEach((f,m)=>{let x=0;f.weights.forEach(y=>{const b="quantization"in y?y.quantization.dtype:y.dtype,$=hr[b]*j(y.shape),T=()=>{s[m]=!0,o[m]==null&&(o[m]=[]),o[m].push({manifestEntry:y,groupOffset:x,sizeBytes:$})};r!=null?r.forEach((C,R)=>{C===y.name&&(T(),a[R]=!0)}):T(),i.push(y.name),x+=$})}),!a.every(f=>f)){const f=r.filter((m,x)=>!a[x]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce((f,m,x)=>(m&&f.push(x),f),[]),c=[];u.forEach(f=>{e[f].paths.forEach(m=>{const x=n+(n.endsWith("/")?"":"/")+m;c.push(x)})});const l=await t(c),h={};let d=0;return u.forEach(f=>{const m=e[f].paths.length,x=new nn(l.slice(d,d+m));o[f].forEach(b=>{const $=x.slice(b.groupOffset,b.groupOffset+b.sizeBytes),T=dm($,[b.manifestEntry]);for(const C in T)h[C]=T[C]}),d+=m}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PT="application/octet-stream",LT="application/json";class Gu{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(E(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=M().platform.fetch,E(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&E(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=mm(e,r);if(n.body.append("model.json",new Blob([JSON.stringify(s)],{type:LT}),"model.json"),e.weightData!=null){const a=nn.join(e.weightData);n.body.append("model.weights.bin",new Blob([a],{type:PT}),"model.weights.bin")}const o=await this.fetch(this.path,n);if(o.ok)return{modelArtifactsInfo:Ks(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=n.modelTopology,s=n.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Nu(e,n=>this.loadWeights(n))}async loadStream(){const e=await this.loadModelJSON(),n=await this.getWeightUrls(e.weightsManifest),r=Fi(e.weightsManifest),s=()=>DT(n,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=BT(n),o=this.weightPathPrefix||r,a=[],i=[];for(const u of e)for(const c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):a.push(o+c+s);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const n=await this.getWeightUrls(e),r=Fi(e),s=await gg(n,this.loadOptions);return[r,s]}}Gu.URL_SCHEME_REGEX=/^https?:\/\//;function BT(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}function Gi(t){return t.match(Gu.URL_SCHEME_REGEX)!=null}const xg=(t,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(r=>Gi(r)):n=Gi(t),n)return ju(t,e)}return null};Re.registerSaveRouter(xg);Re.registerLoadRouter(xg);function ju(t,e){return new Gu(t,e)}function VT(t,e){return ju(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ri{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class bg{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class MT{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function UT(t,e,n,r){const s=arguments;return new MT(vg(...s))}function vg(t,e,n,r){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new ri(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ri({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ri({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function WT(t){return new bg(t)}function zT(t){return new bg(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wg=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:nn,browserFiles:OT,browserHTTPRequest:VT,concatenateArrayBuffers:zb,copyModel:h1,decodeWeights:dm,decodeWeightsStream:fm,encodeWeights:Lb,fromMemory:UT,fromMemorySync:vg,getLoadHandlers:Qb,getModelArtifactsForJSON:Nu,getModelArtifactsForJSONSync:gm,getModelArtifactsInfoForJSON:Ks,getSaveHandlers:Yb,getWeightSpecs:Fi,http:ju,isHTTPScheme:Gi,listModels:c1,loadWeights:FT,moveModel:d1,registerLoadRouter:Xb,registerSaveRouter:qb,removeModel:l1,weightsLoaderFactory:yg,withSaveHandler:WT,withSaveHandlerSync:zT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yn;function GT(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&t instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement)o=!0;else if(t.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&t instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(Ii(Si,D.backendName)!=null){const m={pixels:t},x={numChannels:e};return D.runKernel(Si,m,x)}const[c,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h;if(a)h=t.getContext("2d").getImageData(0,0,c,l).data;else if(r||n)h=t.data;else if(o||s||i){if(Yn==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Yn=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Yn=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Yn.canvas.width=c,Yn.canvas.height=l,Yn.drawImage(t,0,0,c,l),h=Yn.getImageData(0,0,c,l).data}let d;if(e===4)d=new Int32Array(h);else{const m=c*l;d=new Int32Array(m*e);for(let x=0;x<m;x++)for(let y=0;y<e;++y)d[x*e+y]=h[x*4+y]}return og(d,[l,c,e],"int32")}function jT(t){if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const e=t.rank===2?1:t.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`)}async function HT(t,e){let n=S(t,"img","toPixels");if(!(t instanceof Ve)){const c=n;n=Oe(c,"int32"),c.dispose()}jT(n);const[r,s]=n.shape.slice(0,2),o=n.rank===2?1:n.shape[2],a=await n.data(),i=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let c=0;c<r*s;++c){const l=[0,0,0,255];for(let d=0;d<o;d++){const f=a[c*o+d];if(n.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(n.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);o===1?(l[0]=f*i,l[1]=f*i,l[2]=f*i):l[d]=f*i}const h=c*4;u[h+0]=Math.round(l[0]),u[h+1]=Math.round(l[1]),u[h+2]=Math.round(l[2]),u[h+3]=Math.round(l[3])}return n!==t&&n.dispose(),u}const KT=A({fromPixels_:GT});function $g(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(j(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const i=t.shape,u=s.slice();u.pop();let c=1;for(let h=o;h<n;++h)c*=i[h],u.push(i[h]);const l=[...qe(t.shape).map(h=>h/c),1].slice(0,o);return[u,a,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji=-2,qT=-1;function Ng(t,e,n){const r=t.shape.length;E(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),E(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)E(e[s]+n[s]<=t.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function XT(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function Sg(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Cg(t,e,n,r){const s=[...t];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<n;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Tg(t,e,n){return n<=t?n:n-(e-1)}function Eg(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function YT(t,e,n,r,s,o,a,i,u){const c=t.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&n>0){const f=e[0],m=n+1;l=Ig(a,f,m,r,t),h=kg(i,f,m,s,t),d=Cg(o,f,m,t)}else for(let f=0;f<c;f++)l[f]=Rg(a,r,o,t,f,u),h[f]=Ag(i,s,o,t,f,u),d[f]=_g(o,f,u);return{begin:l,end:h,strides:d}}function Ig(t,e,n,r,s){const o=[...s],a=Eg(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=Tg(e,n,i);let c=r[u];t&1<<u&&(c=0),o[i]=c}return o}function kg(t,e,n,r,s){const o=[...s],a=Eg(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=Tg(e,n,i);let c=r[u];t&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const u=s[i];o[i]<0&&(o[i]+=u),o[i]=Fo(0,o[i],s[i])}return o}function _g(t,e,n){let r=t[e];return(n&1<<e||r==null)&&(r=1),r}function Rg(t,e,n,r,s,o){let a=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=Fo(0,a,u-1),a}function Ag(t,e,n,r,s,o){let a=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),i>0?a=Fo(0,a,u):a=Fo(-1,a,u-1),a}function Hu(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Ku(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Og(t,e,n){let r;const s=t.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{E(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return n==null?o=new Array(s).fill(-1):typeof n=="number"?o=[n,...new Array(s-1).fill(-1)]:n.length<s?o=n.concat(new Array(s-n.length).fill(-1)):o=n,o=o.map((a,i)=>a>=0?a:(E(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),t.shape[i]-r[i])),[r,o]}function Dg(t,e,n,r,s,o,a,i,u){let c;if(r==null?(c=new Array(e.length),c.fill(1)):c=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let T=0;T<h.dims;T++)l&&1<<T&i&&h.numAddAxisAfterEllipsis++,1<<T&a&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};QT(h,d);let f=!0,m=!0,x=!0;const y=[],b=[];for(let T=0;T<t.length;++T){if(d.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);const C=!!(d.shrinkAxisMask&1<<T),R=t[T];if(R===-1){y.push(C?1:-1);continue}const L=[d.beginMask&1<<T,d.endMask&1<<T],P=[d.strides[T]>0?0:-1,d.strides[T]>0?R:R-1];if(C&&d.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");x=x&&d.strides[T]===1;const O=!!(d.beginMask&1<<T&&d.endMask&1<<T);if(d.beginValid&&d.endValid){if(C){const K=d.begin[T]<0?R+d.begin[T]:d.begin[T];if(d.begin[T]=K,d.end[T]=d.begin[T]+1,K<0||K>=R)throw Error(`slice index ${d.begin[T]} of dimension ${T} out of bounds.`)}else d.begin[T]=Wl(d.begin[T],0,d.strides[T],R,L,P),d.end[T]=Wl(d.end[T],1,d.strides[T],R,L,P);const U=d.strides[T]===1&&d.begin[T]===0&&d.end[T]===R;f=f&&U,m=m&&(T===0&&d.strides[T]===1||U)}else f=f&&d.strides[T]===1&&O,m=m&&(T===0&&d.strides[T]===1||O);let B,V=!1;if(d.beginValid&&d.endValid?(B=d.end[T]-d.begin[T],V=!0):C?(B=1,V=!0):O&&R>=0&&(d.strides[T]<0?B=-R:B=R,V=!0),V){let U;B===0||B<0!=d.strides[T]<0?U=0:U=Math.trunc(B/d.strides[T])+(B%d.strides[T]!==0?1:0),y.push(U)}else y.push(-1)}for(let T=0;T<d.finalShapeGatherIndices.length;++T){const C=d.finalShapeGatherIndices[T];C>=0?b.push(y[C]):C===ji&&b.push(1)}return{finalShapeSparse:b.filter((T,C)=>d.finalShapeGatherIndices[C]!==ji),finalShape:b,isIdentity:f,sliceDim0:m,isSimpleSlice:x,begin:d.begin,end:d.end,strides:d.strides}}function QT(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(ji),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[r]),t.end!=null&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(qT),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}function Wl(t,e,n,r,s,o){if(s[e])return n>0?o[e]:o[e+1&1];{const a=t<0?r+t:t;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const ZT=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Ng,computeFlatOffset:Ku,computeOutShape:Sg,getNormalizedAxes:YT,isSliceContinous:Hu,maskToAxes:XT,parseSliceParams:Og,sliceInfo:Dg,startForAxis:Rg,startIndicesWithElidedDims:Ig,stopForAxis:Ag,stopIndicesWithElidedDims:kg,stridesForAxis:_g,stridesWithElidedDims:Cg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JT=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:t=>t();function eE(){return new Promise(t=>JT(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fg(t,e){const n=t[0].length;t.forEach((s,o)=>{E(s.length===n,()=>`Error in concat${n}D: rank of tensors[${o}] must be the same as the rank of the rest (${n})`)}),E(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((s,o)=>{for(let a=0;a<n;a++)E(a===e||s[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function xr(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Xt;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(Xt||(Xt={}));function Pg(t,e,n){let r=new Array;if(n==null&&e==null)return r;if(e==null)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(n==null)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const o=n[s],a=r[r.length-n.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+t}] = ${o} but shape[${s+t}] = ${i}`)}else r[a]=o}return r}function Lg(t){const e={FIRST_DIM_SIZE:Xt.FIRST_DIM_SIZE,VALUE_ROWIDS:Xt.VALUE_ROWIDS,ROW_LENGTHS:Xt.ROW_LENGTHS,ROW_SPLITS:Xt.ROW_SPLITS,ROW_LIMITS:Xt.ROW_LIMITS,ROW_STARTS:Xt.ROW_STARTS},n=[];for(const r of t)if(r in e)n.push(e[r]);else break;return n}function Bg(t){return t.length===0?0:t[0]===Xt.FIRST_DIM_SIZE?t.length-1:t.length}function Vg(t,e){if(t==null||e==null)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const o=t[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-t.length}] = ${o} but ragged tensor input.flatValues.shape[${s-t.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qu=30;function ba(t){return t<=qu?t:wi(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mg(t,e,n){const r=n*(typeof t=="number"?t:t[0]),s=e*(typeof t=="number"?t:t[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xu(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([t[a+1]/e[a],e[a]]);s=s.concat(t.slice(o+1))}return s}function Yu(t,e,n=!0){const r=[];if(n){r.push(e);for(let s=e+1;s<t;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<t;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function Qu(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?r?s.push(e[o-1]*t[o]):s.push(t[o]/e[o-1]):s.push(t[o]);return s}function Ug(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Wg(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zg=1.7580993408473768,Gg=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jg=.3275911,Hg=.254829592,Kg=-.284496736,qg=1.421413741,Xg=-1.453152027,Yg=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hi(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function tE(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function nE(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function rE(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function sE(t,e){const n=t[e*2],r=t[e*2+1];return{real:n,imag:r}}function oE(t,e,n,r){t[r*2]=e,t[r*2+1]=n}function aE(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const o=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}}function iE(t,e,n){const r=(n?2:-2)*Math.PI*(t/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si="->",uE=/->/g,zl=",",Gl="...";function Qg(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(uE,"").length)/si.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${si}").`);const[r,s]=t.split(si);E(r.indexOf(Gl)===-1,()=>`The ellipsis notation ("${Gl}") is not supported yet.`);const o=r.split(zl),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<s.length;++d){const f=s[d];if(!o.some(m=>m.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);i.indexOf(f)===-1&&i.push(f)}for(let d=0;d<r.length;++d){const f=r[d];i.indexOf(f)===-1&&f!==zl&&i.push(f)}const u=new Array(o.length);for(let d=0;d<a;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let f=0;f<o[d].length;++f)u[d].push(i.indexOf(o[d][f]))}const c=i.length,l=s.length,h=[];for(let d=l;d<c;++d)h.push(d);return{allDims:i,summedDims:h,idDims:u}}function Zg(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const r=[];for(let s=0;s<t;++s)n[s]===-1&&r.push(s);return n=n.filter(s=>s!==-1),{permutationIndices:n,expandDims:r}}function Jg(t,e,n){const r=new Array(t);for(let s=0;s<n.length;++s){const o=n[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:E(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function ey(t,e){const n=t,r=[];let s=0;t.length===0&&n.push(-1),s=t.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<n.length;++a){const i=n[a],u=cE(e,i);for(const c of u)o.indexOf(c)===-1&&(r[a].push(c),o.push(c))}return{path:n,steps:r}}function ty(t){return t.every((e,n)=>e===n)}function cE(t,e){const n=[];for(let r=0;r<t.length;++r)(t[r].length===0||t[r].indexOf(e)!==-1||e===-1)&&n.push(r);return n}function ny(t,e,n=0){let r=[];if(typeof e=="number")E(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);E(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,u)=>u>0?i+u:i);e[o]=t.shape[n]-a}E(t.shape[n]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ry(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function sy(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function oy(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ay(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function iy(t,e){return`size ${t} must be non-negative, not ${e}`}function uy(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function cy(t,e){const n=j(t),r=j(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${t} outputShape= ${e}`}function ly(t,e){const n=j(t),r=j(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(){return"segment ids must be >= 0"}function hy(){return"segment ids are not increasing"}function dy(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function py(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fy(t,e){let n=!1,r;for(t<=qu?(r=t,n=!0):r=wi(t,Math.floor(Math.sqrt(t)));!n;)r>e||r===t?n=!0:r=wi(t,r+1);return r}function my(t,e,n){const r=[],s=t.length;for(let o=0;o<s;o++)o!==e?r.push(t[o]):r.push(n);return r}function gy(t,e,n,r){const s=e.shape.length,o=t.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=t.shape[n],i=[];let u=1,c=1,l=1;for(let h=0;h<r;++h)i.push(t.shape[h]),u*=t.shape[h];for(let h=r;h<n;h++)i.push(t.shape[h]),c*=t.shape[h];for(let h=r;h<s;h++)i.push(e.shape[h]);for(let h=n+1;h<o;h++)i.push(t.shape[h]),l*=t.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}const lE=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:gy,computeOutShape:my,segOpComputeOptimalWindowSize:fy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(t){try{return t.map(e=>Kr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function yy(t){return t.map(e=>ar(e))}const hE=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Hg,ERF_A2:Kg,ERF_A3:qg,ERF_A4:Xg,ERF_A5:Yg,ERF_P:jg,PARALLELIZE_THRESHOLD:qu,get RowPartitionType(){return Xt},SELU_SCALE:Gg,SELU_SCALEALPHA:zg,applyActivation:ga,assertAndGetBroadcastShape:ye,assertAxesAreInnerMostDims:rn,assertParamsConsistent:Fg,assignToTypedArray:oE,axesAreInnerMostDims:Tu,calculateShapes:pa,checkEinsumDimSizes:Jg,checkPadOnDimRoundingMode:Ut,combineLocations:Fm,combineRaggedTensorToTensorShapes:Pg,complexWithEvenIndex:nE,complexWithOddIndex:rE,computeConv2DInfo:_t,computeConv3DInfo:Xs,computeDefaultPad:Su,computeDilation2DInfo:Tm,computeOptimalWindowSize:ba,computeOutAndReduceShapes:mn,computeOutShape:xr,computePool2DInfo:Nr,computePool3DInfo:qs,convertConv2DDataFormat:ns,decodeEinsumEquation:Qg,eitherStridesOrDilationsAreOne:Nt,expandShapeToKeepDim:Rt,exponent:iE,exponents:aE,fromStringArrayToUint8:yy,fromUint8ToStringArray:Yr,getAxesPermutation:Wt,getBroadcastDims:Uo,getComplexWithIndex:sE,getEinsumComputePath:ey,getEinsumPermutation:Zg,getFusedBiasGradient:ma,getFusedDyActivation:fa,getImageCenter:Mg,getInnerMostAxes:zt,getPermuted:Yu,getRaggedRank:Bg,getReductionAxes:Am,getReshaped:Xu,getReshapedPermuted:Qu,getRowPartitionTypesHelper:Lg,getSliceBeginCoords:Ug,getSliceSize:Wg,getSparseFillEmptyRowsIndicesDenseShapeMismatch:ry,getSparseFillEmptyRowsNegativeIndexErrorMessage:sy,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:oy,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:uy,getSparseReshapeInputOutputMismatchErrorMessage:ly,getSparseReshapeInputOutputMultipleErrorMessage:cy,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:ay,getSparseReshapeNegativeOutputDimErrorMessage:iy,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:py,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Ki,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:hy,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:dy,getUndoAxesPermutation:Eu,isIdentityPermutation:ty,log:ob,mergeRealAndImagArrays:Hi,prepareAndValidate:$g,prepareSplitSize:ny,segment_util:lE,shouldFuse:ya,slice_util:ZT,splitRealAndImagArrays:tE,stridesOrDilationsArePositive:fr,tupleValuesAreOne:Ds,upcastType:fn,validateDefaultValueShape:Vg,validateInput:Uu,validateUpdateShape:ag,warn:Yt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */TT();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE=M();dE.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var yt;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(yt||(yt={}));var jl;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(jl||(jl={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE={};function xy(t){return pE[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v(t,e,n,r,s){const o=e.inputParams[t];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd,c=i<0?e.inputNames.length+i:i;if(o.type==="tensor")return He(e.inputNames[c],n,r,s);if(o.type==="tensors"){const d=e.inputs.slice(i,u);return e.inputNames.slice(i,u).filter((m,x)=>{var y;return((y=d[x])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(m=>He(m,n,r,s))}const l=He(e.inputNames[c],n,r,s),h=l.dataSync();return o.type==="number"?h[0]:$i(l.shape,h)}const a=e.attrParams[t];return a&&a.value}function He(t,e,n,r){const[s,o]=xt(t,n);if(r!=null){const i=r.getHashTableHandleByName(s);if(i!=null)return i}const a=n.currentContextIds.find(i=>!!e[Ho(s,i)]);return a!==void 0?e[Ho(s,a)][o]:void 0}function Hl(t,e,n){return e[Ho(t,n.currentContextId)]}function yn(t,e){const[n,r,s]=xt(t,e);return[Ho(n,e&&e.currentContextId),r,s]}function Ho(t,e){return e?`${t}-${e}`:t}function xt(t,e){if(t==="")return["",0,void 0];const n=e!=null&&e.parseNodeNameCache!=null;if(n){const o=e.parseNodeNameCache.get(t);if(o!=null)return o}const r=t.split(":");let s;if(r.length===1)s=[t,0,void 0];else{const o=r[0],a=r.length===3?r[1]:void 0,i=Number(r[r.length-1]);s=[o,i,a]}return n&&e.parseNodeNameCache.set(t,s),s}function Oo(t,e,n){let r=v("pad",t,e,n);if(r==="explicit"){r=v("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function xn(t){return t.kept?t:Fn(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mE=Object.freeze(Object.defineProperty({__proto__:null,json:fE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yE=Object.freeze(Object.defineProperty({__proto__:null,json:gE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],bE=Object.freeze(Object.defineProperty({__proto__:null,json:xE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],wE=Object.freeze(Object.defineProperty({__proto__:null,json:vE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $E=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],NE=Object.freeze(Object.defineProperty({__proto__:null,json:$E},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SE=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],CE=Object.freeze(Object.defineProperty({__proto__:null,json:SE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],EE=Object.freeze(Object.defineProperty({__proto__:null,json:TE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],kE=Object.freeze(Object.defineProperty({__proto__:null,json:IE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _E=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],RE=Object.freeze(Object.defineProperty({__proto__:null,json:_E},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],OE=Object.freeze(Object.defineProperty({__proto__:null,json:AE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DE=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],FE=Object.freeze(Object.defineProperty({__proto__:null,json:DE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],LE=Object.freeze(Object.defineProperty({__proto__:null,json:PE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BE=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],VE=Object.freeze(Object.defineProperty({__proto__:null,json:BE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],UE=Object.freeze(Object.defineProperty({__proto__:null,json:ME},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],zE=Object.freeze(Object.defineProperty({__proto__:null,json:WE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],jE=Object.freeze(Object.defineProperty({__proto__:null,json:GE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],KE=Object.freeze(Object.defineProperty({__proto__:null,json:HE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],XE=Object.freeze(Object.defineProperty({__proto__:null,json:qE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],QE=Object.freeze(Object.defineProperty({__proto__:null,json:YE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kl{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[mE,yE,bE,wE,NE,CE,EE,kE,RE,OE,FE,LE,VE,UE,zE,jE,KE,XE,QE],n=[].concat(...e.map(r=>r.json));this.opMappers=n.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,n={}){const r=e.node,s=[],o=[],a=[],i=r.reduce((x,y)=>(x[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?s.push(x[y.name]):y.op==="Const"?o.push(x[y.name]):(y.input==null||y.input.length===0)&&a.push(x[y.name]),x),{});let u=[];const c=[];let l={},h={};n!=null&&(l=this.mapSignatureEntries(n.inputs),h=this.mapSignatureEntries(n.outputs));const d=Object.keys(i);d.forEach(x=>{const y=i[x];y.inputNames.forEach((b,$)=>{const[T,,C]=yn(b),R=i[T];if(R.outputs!=null){const L=R.outputs.indexOf(C);if(L!==-1){const P=`${T}:${L}`;y.inputNames[$]=P}}y.inputs.push(R),R.children.push(y)})}),Object.keys(h).length===0?d.forEach(x=>{const y=i[x];y.children.length===0&&c.push(y)}):Object.keys(h).forEach(x=>{const[y]=yn(x),b=i[y];b!=null&&(b.signatureKey=h[x],c.push(b))}),Object.keys(l).length>0?Object.keys(l).forEach(x=>{const[y]=yn(x),b=i[y];b&&(b.signatureKey=l[x],u.push(b))}):u=s;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((x,y)=>(x[y.signature.name]=this.mapFunction(y),x),{}));const m={nodes:i,inputs:u,outputs:c,weights:o,placeholders:s,signature:n,functions:f};return a.length>0&&(m.initNodes=a),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,r)=>(n[e[r].name]=r,n),{})}mapNode(e){const n=xy(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(r.inputParams=n.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),n.attrs!=null&&(r.attrParams=n.attrs.reduce((s,o)=>{const a=o.type;let i;switch(o.type){case"string":i=qi(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=qi(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=tu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=tu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=Yi(e.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=Yi(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=eu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=eu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=Xi(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Xi(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=ru(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=ru(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=Ji(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ji(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=nu(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=nu(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=Qi(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Qi(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=Zi(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Zi(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=ql(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=ql(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:i,type:a},s},{})),r}mapFunction(e){const n=e.nodeDef,r=[],s=[];let o={};n!=null&&(o=n.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&s.push(h[d.name]),h),{}));const a=[],i=[];e.signature.inputArg.forEach(h=>{const[d]=yn(h.name),f={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Zu(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,a.push(f),o[d]=f}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((f,m)=>{const[x,,y]=yn(f),b=o[x];if(b.outputs!=null){const $=b.outputs.indexOf(y);if($!==-1){const T=`${x}:${$}`;d.inputNames[m]=T}}d.inputs.push(b),b.children.push(d)})});const c=e.ret;e.signature.outputArg.forEach(h=>{const[d,f]=yn(c[h.name]),m=o[d];m!=null&&(m.defaultOutput=f,i.push(m))});const l=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:s,placeholders:r,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r),n),{}),outputs:e.signature.outputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r,e.ret),n),{})}}mapArgToTensorInfo(e,n){let r=e.name;return n!=null&&(r=n[r]),{name:r,dtype:e.type}}}function ZE(t){const e=M().global;if(typeof e.atob<"u")return e.atob(t);if(typeof Buffer<"u")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function by(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):ZE(t);return e?n:n.toLowerCase()}function qi(t,e,n,r=!1){const s=t[e];return s!=null?by(s.s,r):n}function Xi(t,e,n){const r=t[e];return r?r.b:n}function Yi(t,e,n){const r=t[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:n;return typeof s=="number"?s:parseInt(s,10)}function Zu(t){switch(typeof t=="string"&&(t=yt[t]),t){case yt.DT_FLOAT:case yt.DT_HALF:return"float32";case yt.DT_INT32:case yt.DT_INT64:case yt.DT_INT8:case yt.DT_UINT8:return"int32";case yt.DT_BOOL:return"bool";case yt.DT_DOUBLE:return"float32";case yt.DT_STRING:return"string";case yt.DT_COMPLEX64:case yt.DT_COMPLEX128:return"complex64";default:return null}}function ql(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function Qi(t,e,n){const r=t[e];return r&&r.type?Zu(r.type):n}function Zi(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(s=>Zu(s)):n}function vy(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Ji(t,e,n){const r=t[e];return r&&r.shape?vy(r.shape):n}function eu(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):n}function tu(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map(o=>by(o,r)):n}function nu(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>vy(s)):n}function ru(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JE{constructor(e,n,r){this.node=e,this.tensorMap=n,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return He(e,this.tensorMap,this.context)}getAttr(e,n){const r=this.node.rawAttrs[e];if(r.tensor!=null)return He(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Yi(this.node.rawAttrs,e,n);if(r.s!=null)return qi(this.node.rawAttrs,e,n);if(r.b!=null)return Xi(this.node.rawAttrs,e,n);if(r.shape!=null)return Ji(this.node.rawAttrs,e,n);if(r.type!=null)return Qi(this.node.rawAttrs,e,n);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return eu(this.node.rawAttrs,e,n);if(r.list.s!=null)return tu(this.node.rawAttrs,e,n);if(r.list.shape!=null)return nu(this.node.rawAttrs,e,n);if(r.list.b!=null)return ru(this.node.rawAttrs,e,n);if(r.list.type!=null)return Zi(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ye=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:hm,abs:Ct,acos:C1,acosh:E1,add:ae,addN:k1,all:R1,any:O1,argMax:F1,argMin:L1,asin:V1,asinh:U1,atan:z1,atan2:j1,atanh:K1,avgPool:Em,avgPool3d:tv,basicLSTMCell:uv,batchNorm:ia,batchNorm2d:pv,batchNorm3d:mv,batchNorm4d:yv,batchToSpaceND:Im,bincount:km,bitwiseAnd:vv,booleanMaskAsync:sC,broadcastArgs:$v,broadcastTo:_s,buffer:Fe,cast:Oe,ceil:Cv,clipByValue:_m,clone:Fn,complex:Vn,concat:Xe,concat1d:Iv,concat2d:_v,concat3d:Av,concat4d:Dv,conv1d:Lv,conv2d:ua,conv2dTranspose:Mv,conv3d:Wv,conv3dTranspose:Hv,cos:qv,cosh:Yv,cosineWindow:Wu,cumprod:Zv,cumsum:ew,denseBincount:nw,depthToSpace:sw,depthwiseConv2d:Cu,diag:iw,dilation2d:cw,div:pe,divNoNan:fw,dot:gw,dropout:yC,einsum:Vr,elu:Dm,enclosingPowerOfTwo:cg,ensureShape:vw,equal:Om,erf:$w,euclideanNorm:Rw,exp:$n,expandDims:cn,expm1:Fw,eye:Lm,fft:Vu,fill:Ys,floor:Bm,floorDiv:Cm,fused:AC,gather:Vm,gatherND:fC,greater:la,greaterEqual:Mm,ifft:jo,imag:ha,image:xa,inTopKAsync:bC,irfft:ng,isFinite:Gw,isInf:Hw,isNaN:qw,leakyRelu:Um,less:Wi,lessEqual:Iu,linalg:hT,linspace:Zw,localResponseNormalization:e$,log:Ps,log1p:Wm,logSigmoid:i$,logSoftmax:l$,logSumExp:Gm,logicalAnd:Wo,logicalNot:jm,logicalOr:Hm,logicalXor:g$,losses:dT,lowerBound:x$,matMul:we,max:Gr,maxPool:Km,maxPool3d:w$,maxPoolWithArgmax:N$,maximum:qm,mean:zo,meshgrid:T$,min:Ui,minimum:Go,mirrorPad:k$,mod:R$,moments:O$,movingAverage:iC,mul:H,multiRNNCell:F$,multinomial:L$,neg:pn,norm:ca,notEqual:Xm,oneHot:M$,ones:or,onesLike:W$,op:A,outerProduct:G$,pad:Qs,pad1d:K$,pad2d:X$,pad3d:Q$,pad4d:J$,pool:sN,pow:Fs,prelu:Qm,print:Sm,prod:iN,raggedGather:cN,raggedRange:hN,raggedTensorToTensor:pN,rand:mN,randomGamma:FN,randomNormal:Jm,randomStandardNormal:BN,randomUniform:Bu,randomUniformInt:UN,range:Ls,real:Bs,reciprocal:GN,relu:da,relu6:eg,reshape:z,reverse:gr,reverse1d:XN,reverse2d:QN,reverse3d:JN,reverse4d:tS,rfft:Mu,round:tg,rsqrt:sS,scalar:fe,scatterND:cC,searchSorted:ku,selu:aS,separableConv2d:uS,setdiff1dAsync:lS,sigmoid:ir,sign:dS,signal:lT,sin:fS,sinh:gS,slice:ce,slice1d:xS,slice2d:vS,slice3d:$S,slice4d:SS,softmax:TS,softplus:zm,spaceToBatchND:Ym,sparse:pT,sparseToDense:dC,spectral:cT,split:Vs,sqrt:wn,square:Qt,squaredDifference:rg,squeeze:Ge,stack:Sn,step:sg,stridedSlice:LS,string:fT,sub:le,sum:Te,tan:VS,tanh:Mi,tensor:dn,tensor1d:et,tensor2d:ur,tensor3d:og,tensor4d:MS,tensor5d:US,tensor6d:WS,tensorScatterUpdate:GS,tile:Rs,topk:HS,transpose:zi,truncatedNormal:qS,unique:YS,unsortedSegmentSum:ZS,unstack:Cr,upperBound:eC,variable:tC,where:Pn,whereAsync:ug,zeros:mr,zerosLike:Et},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eI=(t,e,n,r=Ye)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(v("a",t,e,n),v("b",t,e,n))];case"AddN":return[r.addN(v("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(v("a",t,e,n),v("b",t,e,n))];case"Mul":return[r.mul(v("a",t,e,n),v("b",t,e,n))];case"RealDiv":case"Div":return[r.div(v("a",t,e,n),v("b",t,e,n))];case"DivNoNan":return[r.divNoNan(v("a",t,e,n),v("b",t,e,n))];case"FloorDiv":return[r.floorDiv(v("a",t,e,n),v("b",t,e,n))];case"Sub":return[r.sub(v("a",t,e,n),v("b",t,e,n))];case"Minimum":return[r.minimum(v("a",t,e,n),v("b",t,e,n))];case"Maximum":return[r.maximum(v("a",t,e,n),v("b",t,e,n))];case"Pow":return[r.pow(v("a",t,e,n),v("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(v("a",t,e,n),v("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI=(t,e,n,r=Ye)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(v("x",t,e,n))];case"Acos":return[r.acos(v("x",t,e,n))];case"Acosh":return[r.acosh(v("x",t,e,n))];case"Asin":return[r.asin(v("x",t,e,n))];case"Asinh":return[r.asinh(v("x",t,e,n))];case"Atan":return[r.atan(v("x",t,e,n))];case"Atan2":return[r.atan2(v("x",t,e,n),v("y",t,e,n))];case"Atanh":return[r.atanh(v("x",t,e,n))];case"Ceil":return[r.ceil(v("x",t,e,n))];case"Complex":return[r.complex(v("real",t,e,n),v("imag",t,e,n))];case"Cos":return[r.cos(v("x",t,e,n))];case"Cosh":return[r.cosh(v("x",t,e,n))];case"Elu":return[r.elu(v("x",t,e,n))];case"Erf":return[r.erf(v("x",t,e,n))];case"Exp":return[r.exp(v("x",t,e,n))];case"Expm1":return[r.expm1(v("x",t,e,n))];case"Floor":return[r.floor(v("x",t,e,n))];case"Log":return[r.log(v("x",t,e,n))];case"Log1p":return[r.log1p(v("x",t,e,n))];case"Imag":return[r.imag(v("x",t,e,n))];case"Neg":return[r.neg(v("x",t,e,n))];case"Reciprocal":return[r.reciprocal(v("x",t,e,n))];case"Real":return[r.real(v("x",t,e,n))];case"Relu":return[r.relu(v("x",t,e,n))];case"Round":return[r.round(v("x",t,e,n))];case"Selu":return[r.selu(v("x",t,e,n))];case"Sigmoid":return[r.sigmoid(v("x",t,e,n))];case"Sin":return[r.sin(v("x",t,e,n))];case"Sign":return[r.sign(v("x",t,e,n))];case"Sinh":return[r.sinh(v("x",t,e,n))];case"Softplus":return[r.softplus(v("x",t,e,n))];case"Sqrt":return[r.sqrt(v("x",t,e,n))];case"Square":return[r.square(v("x",t,e,n))];case"Tanh":return[r.tanh(v("x",t,e,n))];case"Tan":return[r.tan(v("x",t,e,n))];case"ClipByValue":return[r.clipByValue(v("x",t,e,n),v("clipValueMin",t,e,n),v("clipValueMax",t,e,n))];case"Relu6":return[r.relu6(v("x",t,e,n))];case"Rsqrt":return[r.rsqrt(He(t.inputNames[0],e,n))];case"LeakyRelu":return[r.leakyRelu(v("x",t,e,n),v("alpha",t,e,n))];case"Prelu":return[r.prelu(v("x",t,e,n),v("alpha",t,e,n))];case"IsNan":return[r.isNaN(He(t.inputNames[0],e,n))];case"IsInf":return[r.isInf(He(t.inputNames[0],e,n))];case"IsFinite":return[r.isFinite(He(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){E(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let r=0;r<t.length;r++){const s=t[r],o=e[r];E(s<0||o<0||s===o,()=>n+` Shapes ${t} and ${e} must match`)}}}function Xl(t){return!(typeof t=="number"||t.some(e=>e<0))}function Cs(t,e,n){let r=su(t,n);const s=!Xl(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=su(o.shape,r)}),!Xl(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function su(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const s=t[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=s>=0?s:o}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nI{constructor(e,n,r,s,o,a,i){this.name=e,this.dtype=n,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=fe(0),ln(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Dt(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=n,ln(n),r.written=!0,this.tensors[e]=r}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((r,s)=>this.write(r,n[s]))}gather(e,n){if(n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return dn([],[0].concat(this.elementShape));const r=this.readMany(e);return Dt(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Sn(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return dn([],[0].concat(this.elementShape));const n=[];for(let s=0;s<this.size();s++)n.push(s);const r=this.readMany(n);return Dt(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Xe(r,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Cr(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:n.size/r,a=[];de(()=>{n=z(n,[1,r,o]);for(let u=0;u<e.length;++u){const l=[0,u===0?0:s[u-1],0],h=[1,e[u],o];a[u]=z(ce(n,l,h),this.elementShape)}return a});const i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class br{get id(){return this.idTensor.id}constructor(e,n,r,s=-1){this.tensors=e,this.elementShape=n,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);Dt(n,o.shape,"TensorList shape mismatch: "),ln(o)}),this.idTensor=fe(0),this.maxNumElements=s,ln(this.idTensor)}copy(){return new br([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Dt(e,this.elementShape,"TensorList shape mismatch: ");const s=Cs(this.elementShape,this.tensors,e);return de(()=>{const o=this.tensors.map(a=>z(a,s));return Sn(o,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Cs(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,Dt(s.shape,e,"TensorList shape mismatch: "),z(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Dt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ln(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new br([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)n.tensors[r]=this.tensors[r];return n}getItem(e,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Dt(this.tensors[e].shape,n,"TensorList shape mismatch: ");const s=Cs(this.elementShape,this.tensors,n);return z(this.tensors[e],s)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Dt(this.elementShape,n.shape,"TensorList shape mismatch: "),ln(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Dt(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Cs(this.elementShape,this.tensors,r);return e.length===0?dn([],[0].concat(s)):de(()=>{const o=e.map(a=>z(this.tensors[a],s));return Sn(o,0)})}concat(e,n){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Dt(this.elementShape,n,"TensorList shape mismatch: ");const r=Cs(this.elementShape,this.tensors,n);return this.size()===0?dn([],[0].concat(r)):de(()=>{const s=this.tensors.map(o=>z(o,r));return Xe(s,0)})}}function rI(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const s=t.shape.slice(1);Dt(s,e,"TensorList shape mismatch: ");const o=Cr(t);return new br(o,e,r)}function sI(t,e,n,r){return new br([],t,e,r)}function oI(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new br([],n,t.dtype,r),a=Cr(t,0);return e.forEach((i,u)=>{o.setItem(i,a[u])}),o}function aI(t,e,n){let r=0;const s=e.map(l=>(r+=l,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);const o=t.shape.slice(1),a=su(o,n),i=r===0?0:t.size/r,u=de(()=>{const l=[];t=z(t,[1,r,i]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:s[h-1],0],m=[1,e[h],i];l[h]=z(ce(t,f,m),a)}return t.dispose(),l}),c=new br([],n,t.dtype,e.length);for(let l=0;l<u.length;l++)c.setItem(l,u[l]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=v("thenBranch",t,e,n),s=v("elseBranch",t,e,n),o=v("cond",t,e,n),a=v("args",t,e,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=v("body",t,e,n),s=v("cond",t,e,n),o=v("args",t,e,n),a=await n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map(l=>l.id);let u=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let c=o;for(;u[0];){const l=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const h=c.map(f=>f.id);l.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const d=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await d[0].data(),d.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return c}case"LoopCond":{const r=v("pred",t,e,n);return[xn(r)]}case"Switch":{const r=v("pred",t,e,n);let s=v("data",t,e,n);return s.kept||(s=xn(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find(s=>He(s,e,n)!==void 0);if(r){const s=He(r,e,n);return[xn(s)]}return}case"Enter":{const r=v("frameName",t,e,n),s=v("tensor",t,e,n);return n.enterFrame(r),[xn(s)]}case"Exit":{const r=v("tensor",t,e,n);return n.exitFrame(),[xn(r)]}case"NextIteration":{const r=v("tensor",t,e,n);return n.nextIteration(),[xn(r)]}case"TensorArrayV3":{const r=v("size",t,e,n),s=v("dtype",t,e,n),o=v("elementShape",t,e,n),a=v("dynamicSize",t,e,n),i=v("clearAfterRead",t,e,n),u=v("identicalElementShapes",t,e,n),c=v("name",t,e,n),l=new nI(c,s,r,o,u,a,i);return n.addTensorArray(l),[l.idTensor,fe(1)]}case"TensorArrayWriteV3":{const r=v("tensorArrayId",t,e,n),s=v("index",t,e,n),o=v("tensor",t,e,n),a=n.getTensorArray(r.id);return a.write(s,o),[a.idTensor]}case"TensorArrayReadV3":{const r=v("tensorArrayId",t,e,n),s=v("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=v("tensorArrayId",t,e,n),s=v("indices",t,e,n),o=v("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=v("tensorArrayId",t,e,n),s=v("indices",t,e,n),o=v("tensor",t,e,n),a=n.getTensorArray(r.id);return a.scatter(s,o),[a.idTensor]}case"TensorArrayConcatV3":{const r=v("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),o=v("dtype",t,e,n);return[s.concat(o)]}case"TensorArraySplitV3":{const r=v("tensorArrayId",t,e,n),s=v("tensor",t,e,n),o=v("lengths",t,e,n),a=n.getTensorArray(r.id);return a.split(o,s),[a.idTensor]}case"TensorArraySizeV3":{const r=v("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return[fe(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=v("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=v("tensorListId",t,e,n),s=v("index",t,e,n),o=v("tensor",t,e,n),a=n.getTensorList(r.id);return a.setItem(s,o),[a.idTensor]}case"TensorListGetItem":{const r=v("tensorListId",t,e,n),s=v("index",t,e,n),o=v("elementShape",t,e,n),a=v("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=v("indices",t,e,n),s=v("tensor",t,e,n),o=v("elementShape",t,e,n),a=v("numElements",t,e,n),i=oI(s,r,o,a);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=v("elementShape",t,e,n),s=v("elementDType",t,e,n);let o;t.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=v(o,t,e,n),i=t.op==="TensorListReserve"?-1:a,u=sI(r,s,a,i);return n.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=v("tensorListId",t,e,n),s=v("indices",t,e,n),o=v("elementShape",t,e,n),a=v("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,a,o)]}case"TensorListStack":{const r=v("tensorListId",t,e,n),s=v("elementShape",t,e,n),o=v("elementDType",t,e,n),a=v("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,o,a)]}case"TensorListFromTensor":{const r=v("tensor",t,e,n),s=v("elementShape",t,e,n),o=v("elementDType",t,e,n),a=rI(r,s,o);return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=v("tensorListId",t,e,n),s=n.getTensorList(r.id),o=v("dtype",t,e,n),a=v("elementShape",t,e,n);return[s.concat(o,a)]}case"TensorListPushBack":{const r=v("tensorListId",t,e,n),s=v("tensor",t,e,n),o=n.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=v("tensorListId",t,e,n),s=v("elementShape",t,e,n),o=v("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=v("tensor",t,e,n),s=v("elementShape",t,e,n),o=v("lengths",t,e,n),a=aI(r,o,s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=v("tensorListId",t,e,n),s=n.getTensorList(r.id);return[fe(s.size(),"int32")]}case"TensorListResize":{const r=v("tensorListId",t,e,n),s=v("size",t,e,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yl(t,e,n){const[r,s]=v("fusedOps",t,e,n),o=r==="biasadd",a=!o,i=s==="prelu",u=r==="fusedbatchnorm",c=v("numArgs",t,e,n);if(o){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=v("strides",t,e,n),h=Oo(t,e,n),d=v("dataFormat",t,e,n).toUpperCase(),f=v("dilations",t,e,n);let[m,x]=v("args",t,e,n);a&&(x=m,m=void 0);const y=v("leakyreluAlpha",t,e,n);return{stride:l,pad:h,dataFormat:d,dilations:f,biasArg:m,preluArg:x,activationFunc:s,leakyreluAlpha:y}}const uI=(t,e,n,r=Ye)=>{switch(t.op){case"Conv1D":{const s=v("stride",t,e,n),o=v("pad",t,e,n),a=v("dataFormat",t,e,n).toUpperCase(),i=v("dilation",t,e,n);return[r.conv1d(v("x",t,e,n),v("filter",t,e,n),s,o,a,i)]}case"Conv2D":{const s=v("strides",t,e,n),o=Oo(t,e,n),a=v("dataFormat",t,e,n).toUpperCase(),i=v("dilations",t,e,n);return[r.conv2d(v("x",t,e,n),v("filter",t,e,n),[s[1],s[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=Yl(t,e,n);return[r.fused.conv2d({x:v("x",t,e,n),filter:v("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=Yl(t,e,n);return[r.fused.depthwiseConv2d({x:v("x",t,e,n),filter:v("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=v("outputShape",t,e,n),o=v("strides",t,e,n),a=Oo(t,e,n);return[r.conv2dTranspose(v("x",t,e,n),v("filter",t,e,n),s,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=v("strides",t,e,n),o=Oo(t,e,n),a=v("dilations",t,e,n),i=v("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(v("input",t,e,n),v("filter",t,e,n),[s[1],s[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const s=v("strides",t,e,n),o=v("pad",t,e,n),a=v("dataFormat",t,e,n).toUpperCase(),i=v("dilations",t,e,n);return[r.conv3d(v("x",t,e,n),v("filter",t,e,n),[s[1],s[2],s[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=v("strides",t,e,n),o=v("pad",t,e,n),a=v("kernelSize",t,e,n);return[r.avgPool(v("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=v("strides",t,e,n),o=v("pad",t,e,n),a=v("kernelSize",t,e,n);return[r.maxPool(v("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=v("strides",t,e,n),o=v("pad",t,e,n),a=v("kernelSize",t,e,n),i=v("includeBatchInIndex",t,e,n),{result:u,indexes:c}=r.maxPoolWithArgmax(v("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o,i);return[u,c]}case"AvgPool3D":{const s=v("strides",t,e,n),o=v("pad",t,e,n),a=v("kernelSize",t,e,n);return[r.avgPool3d(v("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=v("strides",t,e,n),o=v("pad",t,e,n),a=v("kernelSize",t,e,n);return[r.maxPool3d(v("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=v("strides",t,e,n),o=v("pad",t,e,n),a=v("dilations",t,e,n),i=s[1],u=s[2],c=a[1],l=a[2];return[r.dilation2d(v("x",t,e,n),v("filter",t,e,n),[i,u],o,[c,l],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cI=(t,e,n,r=Ye)=>{switch(t.op){case"Fill":{const s=v("shape",t,e,n),o=v("dtype",t,e,n),a=v("value",t,e,n);return[r.fill(s,a,o)]}case"LinSpace":{const s=v("start",t,e,n),o=v("stop",t,e,n),a=v("num",t,e,n);return[r.linspace(s,o,a)]}case"Multinomial":{const s=v("logits",t,e,n),o=v("numSamples",t,e,n),a=v("seed",t,e,n);return[r.multinomial(s,o,a)]}case"OneHot":{const s=v("indices",t,e,n),o=v("depth",t,e,n),a=v("onValue",t,e,n),i=v("offValue",t,e,n),u=v("dtype",t,e,n);return[r.oneHot(s,o,a,i,u)]}case"Ones":return[r.ones(v("shape",t,e,n),v("dtype",t,e,n))];case"OnesLike":return[r.onesLike(v("x",t,e,n))];case"RandomStandardNormal":return[r.randomStandardNormal(v("shape",t,e,n),v("dtype",t,e,n),v("seed",t,e,n))];case"RandomUniform":return[r.randomUniform(v("shape",t,e,n),v("minval",t,e,n),v("maxval",t,e,n),v("dtype",t,e,n))];case"RandomUniformInt":return[r.randomUniformInt(v("shape",t,e,n),v("minval",t,e,n),v("maxval",t,e,n),v("seed",t,e,n))];case"Range":{const s=v("start",t,e,n),o=v("stop",t,e,n),a=v("step",t,e,n);return[r.range(s,o,a,v("dtype",t,e,n))]}case"TruncatedNormal":{const s=v("shape",t,e,n),o=v("mean",t,e,n),a=v("stdDev",t,e,n),i=v("seed",t,e,n);return[r.truncatedNormal(s,o,a,v("dtype",t,e,n),i)]}case"Zeros":return[r.zeros(v("shape",t,e,n),v("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(v("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(t,e,n){const r=v("boxes",t,e,n),s=v("scores",t,e,n),o=v("maxOutputSize",t,e,n),a=v("iouThreshold",t,e,n),i=v("scoreThreshold",t,e,n),u=v("softNmsSigma",t,e,n);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}const lI=async(t,e,n,r,s=Ye)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=oi(t,e,n),h=await s.image.nonMaxSuppressionWithScoreAsync(o,a,i,u,c,l);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=oi(t,e,n),l=v("padToMaxOutputSize",t,e,n),h=await s.image.nonMaxSuppressionPaddedAsync(o,a,i,u,c,l);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=oi(t,e,n);return[await s.image.nonMaxSuppressionAsync(o,a,i,u,c)]}case"Where":{const o=s.cast(v("condition",t,e,n),"bool"),a=[await s.whereAsync(o)];return o.dispose(),a}case"ListDiff":return s.setdiff1dAsync(v("x",t,e,n),v("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hI=(t,e,n,r=Ye)=>{switch(t.op){case"LowerBound":{const s=v("sortedSequence",t,e,n),o=v("values",t,e,n);return[r.lowerBound(s,o)]}case"TopKV2":{const s=v("x",t,e,n),o=v("k",t,e,n),a=v("sorted",t,e,n),i=r.topk(s,o,a);return[i.values,i.indices]}case"UpperBound":{const s=v("sortedSequence",t,e,n),o=v("values",t,e,n);return[r.upperBound(s,o)]}case"Unique":{const s=v("x",t,e,n),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=v("x",t,e,n),o=v("axis",t,e,n),a=r.unique(s,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dI=(t,e,n,r=Ye)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=v("default",t,e,n);return[He(t.name,e,n)||s];case"Placeholder":return[He(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=v("x",t,e,n);return[xn(l)]}case"IdentityN":return v("x",t,e,n).map(l=>xn(l));case"Snapshot":const o=v("x",t,e,n);return[xn(o)];case"Shape":return[r.tensor1d(v("x",t,e,n).shape,"int32")];case"ShapeN":return v("x",t,e,n).map(l=>r.tensor1d(l.shape));case"Size":return[r.scalar(v("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(v("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=v("x",t,e,n),i=v("data",t,e,n),u=v("message",t,e,n),c=v("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pI{get id(){return this.handle.id}constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=fe(0),this.tensorMap=new Map,ln(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return fe(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),de(()=>{const s=Cr(n),o=r.length,a=s.length;E(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const u=r[i],c=s[i];ln(c),this.tensorMap.set(u,c)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const r=await e.data();return de(()=>{const s=[];for(let o=0;o<r.length;o++){const a=r[o],i=this.findWithDefault(a,n);s.push(i)}return Sn(s)})}findWithDefault(e,n){const r=this.tensorMap.get(e);return r??n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI=async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(t.name);if(s!=null)return[s];{const o=v("keyDType",t,e,n),a=v("valueDType",t,e,n),i=new pI(o,a);return r.addHashTable(t.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=v("tableHandle",t,e,n,r),o=v("keys",t,e,n),a=v("values",t,e,n);return[await r.getHashTableById(s.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=v("tableHandle",t,e,n,r),o=v("keys",t,e,n),a=v("defaultValue",t,e,n);return[await r.getHashTableById(s.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=v("tableHandle",t,e,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI=(t,e,n,r=Ye)=>{switch(t.op){case"ResizeBilinear":{const s=v("images",t,e,n),o=v("size",t,e,n),a=v("alignCorners",t,e,n),i=v("halfPixelCenters",t,e,n);return[r.image.resizeBilinear(s,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const s=v("images",t,e,n),o=v("size",t,e,n),a=v("alignCorners",t,e,n),i=v("halfPixelCenters",t,e,n);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],a,i)]}case"CropAndResize":{const s=v("image",t,e,n),o=v("boxes",t,e,n),a=v("boxInd",t,e,n),i=v("cropSize",t,e,n),u=v("method",t,e,n),c=v("extrapolationValue",t,e,n);return[r.image.cropAndResize(s,o,a,i,u,c)]}case"ImageProjectiveTransformV3":{const s=v("images",t,e,n),o=v("transforms",t,e,n),a=v("outputShape",t,e,n),i=v("fillValue",t,e,n),u=v("interpolation",t,e,n),c=v("fillMode",t,e,n);return[r.image.transform(s,o,u.toLowerCase(),c.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI=(t,e,n,r=Ye)=>{switch(t.op){case"Equal":return[r.equal(v("a",t,e,n),v("b",t,e,n))];case"NotEqual":return[r.notEqual(v("a",t,e,n),v("b",t,e,n))];case"Greater":return[r.greater(v("a",t,e,n),v("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(v("a",t,e,n),v("b",t,e,n))];case"Less":return[r.less(v("a",t,e,n),v("b",t,e,n))];case"LessEqual":return[r.lessEqual(v("a",t,e,n),v("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(v("a",t,e,n),v("b",t,e,n))];case"LogicalNot":return[r.logicalNot(v("a",t,e,n))];case"LogicalOr":return[r.logicalOr(v("a",t,e,n),v("b",t,e,n))];case"Select":case"SelectV2":return[r.where(v("condition",t,e,n),v("a",t,e,n),v("b",t,e,n))];case"BitwiseAnd":return[r.bitwiseAnd(v("a",t,e,n),v("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI=(t,e,n,r=Ye)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(v("a",t,e,n),v("b",t,e,n),v("transposeA",t,e,n),v("transposeB",t,e,n))];case"Einsum":return[r.einsum(v("equation",t,e,n),...v("tensors",t,e,n))];case"Transpose":return[r.transpose(v("x",t,e,n),v("perm",t,e,n))];case"_FusedMatMul":const[s,o]=v("fusedOps",t,e,n),a=s==="biasadd",i=o==="prelu",u=v("numArgs",t,e,n),c=v("leakyreluAlpha",t,e,n);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,h]=v("args",t,e,n);return[r.fused.matMul({a:v("a",t,e,n),b:v("b",t,e,n),transposeA:v("transposeA",t,e,n),transposeB:v("transposeB",t,e,n),bias:l,activation:o,preluActivationWeights:h,leakyreluAlpha:c})];case"MatrixBandPart":return[r.linalg.bandPart(v("a",t,e,n),v("numLower",t,e,n),v("numUpper",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI=(t,e,n,r=Ye)=>{switch(t.op){case"EuclideanNorm":return[r.euclideanNorm(v("x",t,e,n),v("axis",t,e,n),v("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(v("x",t,e,n),v("mean",t,e,n),v("variance",t,e,n),v("offset",t,e,n),v("scale",t,e,n),v("epsilon",t,e,n))];case"FusedBatchNormV3":return[r.batchNorm(v("x",t,e,n),v("mean",t,e,n),v("variance",t,e,n),v("offset",t,e,n),v("scale",t,e,n),v("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(v("x",t,e,n),v("radius",t,e,n),v("bias",t,e,n),v("alpha",t,e,n),v("beta",t,e,n))];case"Softmax":return[r.softmax(v("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(v("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI=(t,e,n,r=Ye)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:o}=r.raggedGather(v("paramsNestedSplits",t,e,n),v("paramsDenseValues",t,e,n),v("indices",t,e,n),v("outputRaggedRank",t,e,n));return s.concat(o)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:o}=r.raggedRange(v("starts",t,e,n),v("limits",t,e,n),v("splits",t,e,n));return[s,o]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(v("shape",t,e,n),v("values",t,e,n),v("defaultValue",t,e,n),v("rowPartitionTensors",t,e,n),v("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI=(t,e,n,r=Ye)=>{switch(t.op){case"Max":{const i=v("axis",t,e,n),u=v("keepDims",t,e,n);return[r.max(v("x",t,e,n),i,u)]}case"Mean":{const i=v("axis",t,e,n),u=v("keepDims",t,e,n);return[r.mean(v("x",t,e,n),i,u)]}case"Min":{const i=v("axis",t,e,n),u=v("keepDims",t,e,n);return[r.min(v("x",t,e,n),i,u)]}case"Sum":{const i=v("axis",t,e,n),u=v("keepDims",t,e,n);return[r.sum(v("x",t,e,n),i,u)]}case"All":{const i=v("axis",t,e,n),u=v("keepDims",t,e,n);return[r.all(v("x",t,e,n),i,u)]}case"Any":{const i=v("axis",t,e,n),u=v("keepDims",t,e,n);return[r.any(v("x",t,e,n),i,u)]}case"ArgMax":{const i=v("axis",t,e,n);return[r.argMax(v("x",t,e,n),i)]}case"ArgMin":{const i=v("axis",t,e,n);return[r.argMin(v("x",t,e,n),i)]}case"Prod":{const i=v("axis",t,e,n),u=v("keepDims",t,e,n);return[r.prod(v("x",t,e,n),i,u)]}case"Cumprod":{const i=v("axis",t,e,n),u=v("exclusive",t,e,n),c=v("reverse",t,e,n);return[r.cumprod(v("x",t,e,n),i,u,c)]}case"Cumsum":{const i=v("axis",t,e,n),u=v("exclusive",t,e,n),c=v("reverse",t,e,n);return[r.cumsum(v("x",t,e,n),i,u,c)]}case"Bincount":const s=v("x",t,e,n),o=v("weights",t,e,n),a=v("size",t,e,n);return[r.bincount(s,o,a)];case"DenseBincount":{const i=v("x",t,e,n),u=v("weights",t,e,n),c=v("size",t,e,n),l=v("binaryOutput",t,e,n);return[r.denseBincount(i,u,c,l)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI=(t,e,n,r=Ye)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=v("n",t,e,n),o=v("axis",t,e,n);let a=v("tensors",t,e,n);return a=a.slice(0,s),[r.concat(a,o)]}case"Gather":{const s=v("x",t,e,n),o=v("indices",t,e,n);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=v("axis",t,e,n),o=v("batchDims",t,e,n),a=v("x",t,e,n),i=v("indices",t,e,n);return[r.gather(a,r.cast(i,"int32"),s,o)]}case"Reverse":{const s=v("dims",t,e,n),o=[];for(let i=0;i<s.length;i++)s[i]&&o.push(i);const a=v("x",t,e,n);return[r.reverse(a,o)]}case"ReverseV2":{const s=v("axis",t,e,n),o=v("x",t,e,n);return[r.reverse(o,s)]}case"Slice":{const s=v("begin",t,e,n),o=v("size",t,e,n);return[r.slice(v("x",t,e,n),s,o)]}case"StridedSlice":{const s=v("begin",t,e,n),o=v("end",t,e,n),a=v("strides",t,e,n),i=v("beginMask",t,e,n),u=v("endMask",t,e,n),c=v("ellipsisMask",t,e,n),l=v("newAxisMask",t,e,n),h=v("shrinkAxisMask",t,e,n),d=v("x",t,e,n);return[r.stridedSlice(d,s,o,a,i,u,c,l,h)]}case"Pack":return de(()=>{const s=v("axis",t,e,n),o=v("tensors",t,e,n),a=o[0].shape,i=r.squeeze(o[0]).shape,u=o.map(c=>{const l=De(c.shape,a);if(!l&&!De(r.squeeze(c).shape,i))throw new Error("the input tensors shape does not match");return l?c:r.reshape(c,a)});return[r.stack(u,s)]});case"Unpack":{const s=v("axis",t,e,n),o=v("tensor",t,e,n);return r.unstack(o,s)}case"Tile":{const s=v("reps",t,e,n);return[r.tile(v("x",t,e,n),s)]}case"Split":case"SplitV":{const s=v("axis",t,e,n),o=v("numOrSizeSplits",t,e,n),a=v("x",t,e,n);return r.split(a,o,s)}case"ScatterNd":{const s=v("indices",t,e,n),o=v("values",t,e,n),a=v("shape",t,e,n);return[r.scatterND(s,o,a)]}case"GatherNd":{const s=v("x",t,e,n),o=v("indices",t,e,n);return[r.gatherND(s,o)]}case"SparseToDense":{const s=v("sparseIndices",t,e,n),o=v("outputShape",t,e,n),a=v("sparseValues",t,e,n),i=v("defaultValue",t,e,n);return[r.sparseToDense(s,a,o,a.dtype===i.dtype?i:r.cast(i,a.dtype))]}case"TensorScatterUpdate":{const s=v("indices",t,e,n),o=v("values",t,e,n),a=v("tensor",t,e,n);return[r.tensorScatterUpdate(a,s,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $I=(t,e,n,r=Ye)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(v("indices",t,e,n),v("values",t,e,n),v("denseShape",t,e,n),v("defaultValue",t,e,n));return[s,o,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(v("inputIndices",t,e,n),v("inputShape",t,e,n),v("newShape",t,e,n));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(v("data",t,e,n),v("indices",t,e,n),v("segmentIds",t,e,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(v("data",t,e,n),v("indices",t,e,n),v("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI=(t,e,n,r=Ye)=>{switch(t.op){case"FFT":return[r.fft(v("x",t,e,n))];case"IFFT":return[r.ifft(v("x",t,e,n))];case"RFFT":return[r.rfft(v("x",t,e,n))];case"IRFFT":return[r.irfft(v("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI=(t,e,n,r=Ye)=>{switch(t.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(v("input",t,e,n),v("pattern",t,e,n),v("rewrite",t,e,n),v("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(v("data",t,e,n),v("dataSplits",t,e,n),v("separator",t,e,n),v("nGramWidths",t,e,n),v("leftPad",t,e,n),v("rightPad",t,e,n),v("padWidth",t,e,n),v("preserveShortSequences",t,e,n));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:a}=r.string.stringSplit(v("input",t,e,n),v("delimiter",t,e,n),v("skipEmpty",t,e,n));return[s,o,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(v("input",t,e,n),v("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI=(t,e,n,r=Ye)=>{switch(t.op){case"Cast":return[r.cast(v("x",t,e,n),v("dtype",t,e,n))];case"ExpandDims":{const s=v("axis",t,e,n);return[r.expandDims(v("x",t,e,n),s)]}case"Squeeze":{const s=v("axis",t,e,n);return[r.squeeze(v("x",t,e,n),s)]}case"Reshape":return[r.reshape(v("x",t,e,n),v("shape",t,e,n))];case"EnsureShape":return[r.ensureShape(v("x",t,e,n),v("shape",t,e,n))];case"MirrorPad":return[r.mirrorPad(v("x",t,e,n),v("padding",t,e,n),v("mode",t,e,n))];case"PadV2":case"Pad":return[r.pad(v("x",t,e,n),v("padding",t,e,n),v("constantValue",t,e,n))];case"SpaceToBatchND":{const s=v("blockShape",t,e,n),o=v("paddings",t,e,n);return[r.spaceToBatchND(v("x",t,e,n),s,o)]}case"BatchToSpaceND":{const s=v("blockShape",t,e,n),o=v("crops",t,e,n);return[r.batchToSpaceND(v("x",t,e,n),s,o)]}case"DepthToSpace":{const s=v("blockSize",t,e,n),o=v("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(v("x",t,e,n),s,o)]}case"BroadcastTo":return[r.broadcastTo(v("x",t,e,n),v("shape",t,e,n))];case"BroadcastArgs":return[r.broadcastArgs(v("s0",t,e,n),v("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(t,e,n,r,s=de){const o=((a,i,u)=>{switch(a.category){case"arithmetic":return s(()=>eI(a,i,u));case"basic_math":return s(()=>tI(a,i,u));case"control":return iI(a,i,u);case"convolution":return s(()=>uI(a,i,u));case"creation":return s(()=>cI(a,i,u));case"dynamic":return lI(a,i,u);case"evaluation":return s(()=>hI(a,i,u));case"image":return s(()=>mI(a,i,u));case"graph":return s(()=>dI(a,i,u));case"logical":return s(()=>gI(a,i,u));case"matrices":return s(()=>yI(a,i,u));case"normalization":return s(()=>xI(a,i,u));case"ragged":return s(()=>bI(a,i,u));case"reduction":return s(()=>vI(a,i,u));case"slice_join":return s(()=>wI(a,i,u));case"sparse":return s(()=>$I(a,i,u));case"spectral":return s(()=>NI(a,i,u));case"string":return s(()=>SI(a,i,u));case"transformation":return s(()=>CI(a,i,u));case"hash_table":return fI(a,i,u,r);case"custom":const c=xy(a.op);if(c&&c.customExecutor)return c.customExecutor(new JE(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return cr(o)?o.then(a=>[].concat(a)):[].concat(o)}class Zl{constructor(e={},n={},r={},s={},o){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const r=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jl(t,e,n,r){const s=new Set,o=[];let a=null,i=null;const u=new Set,c=new Set(Object.keys(t).map(d=>xt(d)[0]));r=r||[];const l=new Set(r.map(d=>xt(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((tr(d)||OI(d)||DI(d))&&a==null&&(a=d,i=a.children.map(f=>f.name).filter(f=>s.has(f))),s.add(d.name),n[d.name]==null&&!c.has(d.name)&&!l.has(d.name)){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(f=>{u.has(f.name)||(u.add(f.name),h.push(f))})}}return{inputs:t,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:a,syncInputs:i}}function TI(t,e){const{usedNodes:n,inputs:r}=e,s=Object.keys(r).map(y=>xt(y)[0]).map(y=>t.nodes[y]),o=t.initNodes||[],a=y=>n.has(typeof y=="string"?y:y.name);function i(y){return[...new Map(y.map(b=>[b.name,b])).values()]}const u=i([...s,...t.weights,...o]).filter(a),c=i([...u,...Object.values(t.nodes)]).filter(a),l=new Map(c.map(y=>[y.name,y])),h={};for(const y of c){h[y.name]=h[y.name]||0;for(const b of y.children)a(b)||(h[b.name]=Number.POSITIVE_INFINITY),h[b.name]=(h[b.name]||0)+1}const d=Object.entries(h).filter(([,y])=>y===0).map(([y])=>y),f=[...d];for(;d.length>0;){const y=d.pop(),b=l.get(y);for(const $ of b.children.filter(a))--h[$.name]===0&&(f.push($.name),d.push($.name))}const m=f.map(y=>l.get(y)),x=EI(m,u);return II(x,u),x}function EI(t,e){const n=new Map(t.map(a=>[a.name,a])),r=e.map(a=>a.name),s=new Set(r);for(;r.length>0;){const a=r.pop(),i=n.get(a);for(const u of i.children)!n.has(u.name)||s.has(u.name)||(s.add(u.name),r.push(u.name))}return t.filter(a=>s.has(a.name))}class vo extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function II(t,e){const n=new Map(t.map((i,u)=>[i.name,u])),r=new Set(e.map(i=>i.name)),s=i=>r.has(typeof i=="string"?i:i.name),o=new Set(t.map(i=>i.name)),a=i=>o.has(typeof i=="string"?i:i.name);for(const i of t){for(const u of i.children.filter(a)){if(!n.has(u.name))throw new vo(`Child ${u.name} of node ${i.name} is unreachable.`);if(n.get(i.name)>n.get(u.name))throw new vo(`Node ${i.name} is scheduled to run after its child ${u.name}.`)}if(!s(i))for(const u of i.inputs){if(!n.has(u.name))throw new vo(`Input ${u.name} of node ${i.name} is unreachable.`);if(n.get(u.name)>n.get(i.name))throw new vo(`Node ${i.name} is scheduled to run before its input ${u.name}.`)}}}function kI(t){const e=new Map(t.map((i,u)=>[i.name,u])),n=Number.MAX_SAFE_INTEGER,r=t.map((i,u)=>tr(i)?n:u),s=i=>{const u=r[e.get(i.name)];return u??-1},o=t.map((i,u)=>i.children.map(s).reduce((c,l)=>Math.max(c,l),r[u])),a=new Map;for(let i=0;i<t.length;++i){const u=o[i];if(u===n)continue;const c=t[i],l=t[u];a.has(l.name)||a.set(l.name,[]),a.get(l.name).push(c)}return a}const _I=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),RI=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),AI=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function tr(t){return _I.has(t.op)}function OI(t){return RI.has(t.op)}function DI(t){return AI.has(t.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ko{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new Ko(e.functions[r],this)})}getCompilationKey(e,n){const r=e.map(o=>o.name).sort(),s=n.map(o=>o.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,n){const r=Jl(e,n,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:a}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const c=n.map(h=>h.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${l}]. Missing the following inputs: [${s}]`)}const i=TI(this.graph,r),u=kI(i);return{orderedNodes:i,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return ln(n),n}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,r])=>[n,this.cloneTensorList(r)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const s=r.map(d=>this.graph.nodes[xt(d)[0]]),o=n.map(d=>xt(d)[0]),a=new Set(o);let i=o.map(d=>this.graph.nodes[d]);i.length===0&&(i=this._outputs);const u=this.getCompilationKey(s,i);let c=this.compiledMap.get(u);c==null&&(c=this.compile(e,i),this.compiledMap.set(u,c));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},h={};return de(()=>{const d=new Zl(this.weightMap,l,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(b=>{const[$,T]=xt(b,d),C=[];C[T]=e[b],f[$]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[$]=this.cloneTensorList(C))});const m=this.getFrozenTensorIds(f),{orderedNodes:x,nodeLiveUntilMap:y}=c;for(const b of x){if(f[b.name])continue;const $=Ql(b,f,d,this._resourceManager);if(cr($))throw new Error(`The execution of the op '${b.op}' returned a promise. Please use model.executeAsync() instead.`);f[b.name]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[b.name]=this.cloneTensorList($)),this.checkTensorForDisposalWithNodeLiveUntilInfo(b,f,d,m,a,y.get(b.name))}return this.parent==null&&d.dispose(m),n.map(b=>He(b,f,d))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(n)}checkTensorForDisposal(e,n,r,s,o,a,i){if(!(tr(n)||a.has(e))){for(const u of r[e])u!=null&&(i[u.id]=(i[u.id]||0)+n.children.length);for(const u of n.inputs){if(tr(u))continue;const c=Hl(u.name,r,s);if(c!=null)for(const l of c){if(!l||l.kept||o.has(l.id))continue;const h=i[l.id];h===1?(l.dispose(),delete i[l.id]):h!=null&&i[l.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,n,r,s,o,a){function i(u){return tr(u)||o.has(u.name)}if(!(tr(e)||a==null))for(const u of a){if(i(u))continue;const c=Hl(u.name,n,r);for(const l of c)!l||l.kept||s.has(l.id)||l.dispose()}}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,r=!1,s={},o={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new Zl(this.weightMap,s,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,n,r),u=n.map(d=>He(d,i,a)),c=u.map(d=>d.id),l=Object.keys(e).map(d=>e[d].id),h=new Set([...c,...l,...this.weightIds]);return Object.values(i).forEach(d=>{d.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(h),u}async executeFunctionAsync(e,n,r){const s=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(s,this.outputNodes,!0,n,r)}async executeWithControlFlow(e,n,r,s){const o=Object.keys(e),a=o.map(C=>this.graph.nodes[xt(C)[0]]),i=r.map(C=>xt(C)[0]),u=new Set(i);let c=i.map(C=>this.graph.nodes[C]);c.length===0&&(c=this._outputs);const{usedNodes:l,missingInputs:h,dynamicNode:d,syncInputs:f}=Jl(e,c,this.weightMap,this._initNodes),m=[...a,...this.graph.weights,...this._initNodes||[]].map(C=>({node:C,contexts:n.currentContext})),x=Object.assign({},this.weightMap);Object.keys(e).forEach(C=>{const[R,L]=xt(C),P=[];P[L]=e[C],x[R]=P});const y={},b=this.getFrozenTensorIds(x),$={};for(;m.length>0;){const C=this.processStack(a,m,n,x,$,b,u,y,l);await Promise.all(C)}d==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const T=c.filter(C=>!tr(C)&&!He(C.name,x,n)).map(C=>C.name);if(T.length>0){let C="";throw d!=null&&(C=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${o}]. Consider providing the following inputs: [${h}]. ${C}`)}return x}processStack(e,n,r,s,o,a,i,u,c){const l=[];for(;n.length>0;){const h=n.pop();r.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&v("isConstant",h.node,s,r)&&([d]=yn(h.node.name,r)),s[h.node.name]==null){const f=Ql(h.node,s,r,this._resourceManager);d||([d]=yn(h.node.name,r));const m=r.currentContext;cr(f)?l.push(f.then(x=>(s[d]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(x)),r.currentContext=m,this.checkTensorForDisposal(d,h.node,s,r,a,i,u),this.processChildNodes(h.node,n,r,s,o,c),x))):(s[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),this.checkTensorForDisposal(d,h.node,s,r,a,i,u),this.processChildNodes(h.node,n,r,s,o,c))}else this.processChildNodes(h.node,n,r,s,o,c)}return l}processChildNodes(e,n,r,s,o,a){e.children.forEach(i=>{const[u]=yn(i.name,r);o[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!He(c,s,r))&&(o[u]=!0,n.push({contexts:r.currentContext,node:i})):i.inputNames.every(c=>!!He(c,s,r))&&(o[u]=!0,n.push({contexts:r.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const r=e[n],[s]=xt(n),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===r.shape.length&&r.shape.every((u,c)=>a[c]===-1||a[c]===u);E(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&E(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var n,r;const s={};for(const o in e){const a=(r=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||r===void 0?void 0:r[o];a!=null?s[a.name]=e[o]:s[o]=e[o]}return s}checkInputs(e){const n=Object.keys(e).filter(r=>{const[s]=xt(r);return this.graph.nodes[s]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var r,s;const o=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[n];return o!=null?o.name:n},{})}checkOutputs(e){e.forEach(n=>{const[r]=xt(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}}class FI{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI="?tfjs-format=file",LI="model.json";class BI{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,n={},r=wg){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=r,n==null&&(this.loadOptions={}),this.resourceManager=new FI}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return cr(e)?e.then(n=>n.getWeightStream==null?this.loadSync(n):this.loadStreaming(n)):this.loadSync(e)}loadSync(e){const n=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,n)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const n=await fm(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,n)}loadWithWeightMap(e,n){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new Ko(Kl.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Kl.Instance.transformGraph(e.modelInitializer);this.initializer=new Ko(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof Ve?[e]:e,r={};return n.forEach((s,o)=>r[this.structuredOutputKeys[o]]=s),r}return e}predict(e,n){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,n){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var n;if(!(e instanceof Ve)&&!Array.isArray(e)){const o=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(o!=null)for(const a in o){const i=o[a];i.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((o,a)=>{var i,u,c;const l=(c=(u=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||u===void 0?void 0:u[a])===null||c===void 0?void 0:c.resourceId;return l!=null?o[a]=this.resourceIdToCapturedInput[l]:o[a]=e[s++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,r=Object.keys(n);for(let s=0;s<r.length;s++){const o=r[s],a=n[o];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const r=this.executor.execute(e,n);return r.length>1?r:r[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const r=await this.executor.executeAsync(e,n);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,r)=>(n[r]=[e[r]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ae(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function eh(t,e={},n=wg){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=VI(t));const r=new BI(t,e,n);return await r.load(),r}function VI(t){return t.endsWith("/")||(t=t+"/"),`${t}${LI}${PI}`}/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var st=function(){return st=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t},st.apply(this,arguments)};function Zt(t,e,n,r){return new(n||(n=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){var l;c.done?s(c.value):(l=c.value,l instanceof n?l:new n(function(h){h(l)})).then(a,i)}u((r=r.apply(t,[])).next())})}function Jt(t,e){var n,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,l[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(s=a.trys,!((s=s.length>0&&s[s.length-1])||l[0]!==6&&l[0]!==2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(t,a)}catch(h){l=[6,h],r=0}finally{n=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var qo=["wrist","thumb_cmc","thumb_mcp","thumb_ip","thumb_tip","index_finger_mcp","index_finger_pip","index_finger_dip","index_finger_tip","middle_finger_mcp","middle_finger_pip","middle_finger_dip","middle_finger_tip","ring_finger_mcp","ring_finger_pip","ring_finger_dip","ring_finger_tip","pinky_finger_mcp","pinky_finger_pip","pinky_finger_dip","pinky_finger_tip"],ai={runtime:"mediapipe",maxHands:2,modelType:"full"},MI=function(){function t(e){var n,r=this;this.width=0,this.height=0,this.selfieMode=!1,this.handsSolution=new _0.Hands({locateFile:function(s,o){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+s:o+"/"+s}}),e.modelType==="lite"?n=0:n=1,this.handsSolution.setOptions({modelComplexity:n,selfieMode:this.selfieMode,maxNumHands:e.maxHands}),this.handsSolution.onResults(function(s){if(r.height=s.image.height,r.width=s.image.width,r.hands=[],s.multiHandLandmarks!==null)for(var o=s.multiHandedness,a=s.multiHandLandmarks,i=s.multiHandWorldLandmarks,u=0;u<o.length;u++)r.hands.push(st(st({},r.translateOutput(a[u],i[u])),{score:o[u].score,handedness:o[u].label}))})}return t.prototype.translateOutput=function(e,n){var r=this;return{keypoints:e.map(function(s,o){return{x:s.x*r.width,y:s.y*r.height,score:s.visibility,name:qo[o]}}),keypoints3D:n.map(function(s,o){return{x:s.x,y:s.y,z:s.z,score:s.visibility,name:qo[o]}})}},t.prototype.estimateHands=function(e,n){return Zt(this,void 0,void 0,function(){var r,s;return Jt(this,function(o){switch(o.label){case 0:return n&&n.flipHorizontal&&n.flipHorizontal!==this.selfieMode&&(this.selfieMode=n.flipHorizontal,this.handsSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Ve?(s=ImageData.bind,[4,HT(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.handsSolution.send({image:e})];case 4:return o.sent(),[2,this.hands]}})})},t.prototype.dispose=function(){this.handsSolution.close()},t.prototype.reset=function(){this.handsSolution.reset(),this.width=0,this.height=0,this.hands=null,this.selfieMode=!1},t.prototype.initialize=function(){return this.handsSolution.initialize()},t}();function UI(t){return Zt(this,void 0,void 0,function(){var e,n;return Jt(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return st({},ai);var o=st({},s);return o.runtime="mediapipe",o.maxHands==null&&(o.maxHands=ai.maxHands),o.modelType==null&&(o.modelType=ai.modelType),o}(t),[4,(n=new MI(e)).initialize()];case 1:return r.sent(),[2,n]}})})}function ii(t){return t.width*t.height}function th(t){var e=t.xCenter-t.width/2,n=e+t.width,r=t.yCenter-t.height/2;return{xMin:e,xMax:n,yMin:r,yMax:r+t.height,width:t.width,height:t.height}}function WI(t,e){var n=th(t),r=th(e);if(!function(a,i){return!(a.xMax<i.xMin||i.xMax<a.xMin||a.yMax<i.yMin||i.yMax<a.yMin)}(n,r))return 0;var s=ii(function(a,i){var u=Math.max(a.xMin,i.xMin),c=Math.min(a.xMax,i.xMax),l=Math.max(a.yMin,i.yMin),h=Math.min(a.yMax,i.yMax);return{xMin:u,xMax:c,yMin:l,yMax:h,width:Math.max(c-u,0),height:Math.max(h-l,0)}}(n,r)),o=ii(n)+ii(r)-s;return o>0?s/o:0}function zI(t,e,n,r){var s=t.width,o=t.height,a=1,i=Math.cos(t.rotation),u=Math.sin(t.rotation),c=t.xCenter,l=t.yCenter,h=1/e,d=1/n,f=new Array(16);return f[0]=s*i*a*h,f[1]=-o*u*h,f[2]=0,f[3]=(-.5*s*i*a+.5*o*u+c)*h,f[4]=s*u*a*d,f[5]=o*i*d,f[6]=0,f[7]=(-.5*o*i-.5*s*u*a+l)*d,f[8]=0,f[9]=0,f[10]=s*h,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,function(m){if(m.length!==16)throw new Error("Array length must be 16 but got "+m.length);return[[m[0],m[1],m[2],m[3]],[m[4],m[5],m[6],m[7]],[m[8],m[9],m[10],m[11]],[m[12],m[13],m[14],m[15]]]}(f)}function wy(t){return t instanceof Ve?{height:t.shape[0],width:t.shape[1]}:{height:t.height,width:t.width}}function Xo(t){return t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI))}function $y(t){return t instanceof Ve?t:KT(t)}function ui(t,e){E(t.width!==0,function(){return e+" width cannot be 0."}),E(t.height!==0,function(){return e+" height cannot be 0."})}function GI(t,e){var n=function(r,s,o,a){var i=s-r,u=a-o,c=u/i;return{scale:c,offset:o-r*c}}(0,255,e[0],e[1]);return de(function(){return ae(H(t,n.scale),n.offset)})}function nh(t,e,n){var r=e.outputTensorSize,s=e.keepAspectRatio,o=e.borderMode,a=e.outputTensorFloatRange,i=wy(t),u=function(d,f){return f?{xCenter:f.xCenter*d.width,yCenter:f.yCenter*d.height,width:f.width*d.width,height:f.height*d.height,rotation:f.rotation}:{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}}(i,n),c=function(d,f,m){if(m===void 0&&(m=!1),!m)return{top:0,left:0,right:0,bottom:0};var x=f.height,y=f.width;ui(f,"targetSize"),ui(d,"roi");var b,$,T=x/y,C=d.height/d.width,R=0,L=0;return T>C?(b=d.width,$=d.width*T,L=(1-C/T)/2):(b=d.height/T,$=d.height,R=(1-T/C)/2),d.width=b,d.height=$,{top:L,left:R,right:R,bottom:L}}(u,r,s),l=zI(u,i.width,i.height),h=de(function(){var d=$y(t),f=ur(function(y,b,$){return ui($,"inputResolution"),[1/$.width*y[0][0]*b.width,1/$.height*y[0][1]*b.width,y[0][3]*b.width,1/$.width*y[1][0]*b.height,1/$.height*y[1][1]*b.height,y[1][3]*b.height,0,0]}(l,i,r),[1,8]),m=o==="zero"?"constant":"nearest",x=xa.transform(cn(Oe(d,"float32")),f,"bilinear",m,0,[r.height,r.width]);return a!=null?GI(x,a):x});return{imageTensor:h,padding:c,transformationMatrix:l}}function rh(t,e,n,r){return r===1?.5*(t+e):t+(e-t)*n/(r-1)}function sh(t){return{xCenter:t.xMin+t.width/2,yCenter:t.yMin+t.height/2,width:t.width,height:t.height}}function jI(t){var e=t.relativeKeypoints;if(e.length<=1)throw new Error("2 or more keypoints required to calculate a rect.");var n=Number.MAX_VALUE,r=Number.MAX_VALUE,s=Number.MIN_VALUE,o=Number.MIN_VALUE;return e.forEach(function(a){n=Math.min(n,a.x),s=Math.max(s,a.x),r=Math.min(r,a.y),o=Math.max(o,a.y)}),{xCenter:(n+s)/2,yCenter:(r+o)/2,width:s-n,height:o-r}}function HI(t,e,n,r,s){var o=n==="rect"?function(a,i,u){var c,l=a.locationData;return c=sh(l.boundingBox),c}(t):function(a,i){var u=a.locationData;return i==="boundingbox"?sh(u.relativeBoundingBox):jI(u)}(t,e);return s&&(o.rotation=function(a,i,u){var c,l=a.locationData,h=u.rotationVectorStartKeypointIndex,d=u.rotationVectorEndKeypointIndex;c=u.rotationVectorTargetAngle?u.rotationVectorTargetAngle:Math.PI*u.rotationVectorTargetAngleDegree/180;var f=l.relativeKeypoints[h].x*i.width,m=l.relativeKeypoints[h].y*i.height,x=l.relativeKeypoints[d].x*i.width,y=l.relativeKeypoints[d].y*i.height;return Xo(c-Math.atan2(-(y-m),x-f))}(t,r,s)),o}function KI(t){return de(function(){var e=function(s){return de(function(){return[ce(s,[0,0,0],[1,-1,1]),ce(s,[0,0,1],[1,-1,-1])]})}(t),n=e[0],r=e[1];return{boxes:Ge(r),logits:Ge(n)}})}function qI(t,e,n,r){return Zt(this,void 0,void 0,function(){var s,o,a,i,u;return Jt(this,function(c){switch(c.label){case 0:return t.sort(function(l,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,l.score)}),s=ur(t.map(function(l){return[l.locationData.relativeBoundingBox.yMin,l.locationData.relativeBoundingBox.xMin,l.locationData.relativeBoundingBox.yMax,l.locationData.relativeBoundingBox.xMax]})),o=et(t.map(function(l){return l.score[0]})),[4,xa.nonMaxSuppressionAsync(s,o,e,n)];case 1:return[4,(a=c.sent()).array()];case 2:return i=c.sent(),u=t.filter(function(l,h){return i.indexOf(h)>-1}),Ae([s,o,a]),[2,u]}})})}function XI(t,e){return t.map(function(n){var r=st(st({},n),{x:n.x*e.width,y:n.y*e.height});return n.z!=null&&(r.z=n.z*e.width),r})}function YI(t,e,n){return Zt(this,void 0,void 0,function(){var r,s,o,a,i;return Jt(this,function(u){switch(u.label){case 0:return r=t[0],s=t[1],o=function(c,l,h){return de(function(){var d,f,m,x;h.reverseOutputOrder?(f=Ge(ce(c,[0,h.boxCoordOffset+0],[-1,1])),d=Ge(ce(c,[0,h.boxCoordOffset+1],[-1,1])),x=Ge(ce(c,[0,h.boxCoordOffset+2],[-1,1])),m=Ge(ce(c,[0,h.boxCoordOffset+3],[-1,1]))):(d=Ge(ce(c,[0,h.boxCoordOffset+0],[-1,1])),f=Ge(ce(c,[0,h.boxCoordOffset+1],[-1,1])),m=Ge(ce(c,[0,h.boxCoordOffset+2],[-1,1])),x=Ge(ce(c,[0,h.boxCoordOffset+3],[-1,1]))),f=ae(H(pe(f,h.xScale),l.w),l.x),d=ae(H(pe(d,h.yScale),l.h),l.y),h.applyExponentialOnBoxSize?(m=H($n(pe(m,h.hScale)),l.h),x=H($n(pe(x,h.wScale)),l.w)):(m=H(pe(m,h.hScale),l.h),x=H(pe(x,h.wScale),l.h));var y=le(d,pe(m,2)),b=le(f,pe(x,2)),$=ae(d,pe(m,2)),T=ae(f,pe(x,2)),C=Xe([z(y,[h.numBoxes,1]),z(b,[h.numBoxes,1]),z($,[h.numBoxes,1]),z(T,[h.numBoxes,1])],1);if(h.numKeypoints)for(var R=0;R<h.numKeypoints;++R){var L=h.keypointCoordOffset+R*h.numValuesPerKeypoint,P=void 0,O=void 0;h.reverseOutputOrder?(P=Ge(ce(c,[0,L],[-1,1])),O=Ge(ce(c,[0,L+1],[-1,1]))):(O=Ge(ce(c,[0,L],[-1,1])),P=Ge(ce(c,[0,L+1],[-1,1])));var B=ae(H(pe(P,h.xScale),l.w),l.x),V=ae(H(pe(O,h.yScale),l.h),l.y);C=Xe([C,z(B,[h.numBoxes,1]),z(V,[h.numBoxes,1])],1)}return C})}(s,e,n),a=de(function(){var c=r;return n.sigmoidScore?(n.scoreClippingThresh!=null&&(c=_m(r,-n.scoreClippingThresh,n.scoreClippingThresh)),c=ir(c)):c}),[4,QI(o,a,n)];case 1:return i=u.sent(),Ae([o,a]),[2,i]}})})}function QI(t,e,n){return Zt(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,f,m;return Jt(this,function(x){switch(x.label){case 0:return r=[],[4,t.data()];case 1:return s=x.sent(),[4,e.data()];case 2:for(o=x.sent(),a=0;a<n.numBoxes;++a)if(!(n.minScoreThresh!=null&&o[a]<n.minScoreThresh||(i=a*n.numCoords,u=ZI(s[i+0],s[i+1],s[i+2],s[i+3],o[a],n.flipVertically,a),(c=u.locationData.relativeBoundingBox).width<0||c.height<0))){if(n.numKeypoints>0)for((l=u.locationData).relativeKeypoints=[],h=n.numKeypoints*n.numValuesPerKeypoint,d=0;d<h;d+=n.numValuesPerKeypoint)f=i+n.keypointCoordOffset+d,m={x:s[f+0],y:n.flipVertically?1-s[f+1]:s[f+1]},l.relativeKeypoints.push(m);r.push(u)}return[2,r]}})})}function ZI(t,e,n,r,s,o,a){return{score:[s],ind:a,locationData:{relativeBoundingBox:{xMin:e,yMin:o?1-n:t,xMax:r,yMax:o?1-t:n,width:r-e,height:n-t}}}}function JI(t,e){return t==="none"?e:function(n){return 1/(1+Math.exp(-n))}(e)}function oh(t,e,n,r){return Zt(this,void 0,void 0,function(){var s,o,a,i,u,c,l,h;return Jt(this,function(d){switch(d.label){case 0:return n=n||e.flipHorizontally||!1,r=r||e.flipVertically||!1,s=t.size,o=s/e.numLandmarks,[4,t.data()];case 1:for(a=d.sent(),i=[],u=0;u<e.numLandmarks;++u)c=u*o,(h={x:0,y:0}).x=n?e.inputImageWidth-a[c]:a[c],o>1&&(h.y=r?e.inputImageHeight-a[c+1]:a[c+1]),o>2&&(h.z=a[c+2]),o>3&&(h.score=JI(e.visibilityActivation,a[c+3])),i.push(h);for(l=0;l<i.length;++l)(h=i[l]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,i]}})})}function ah(t,e,n){var r=t.width,s=t.height,o=t.rotation;if(n.rotation==null&&n.rotationDegree==null||(o=function(l,h){return h.rotation!=null?l+=h.rotation:h.rotationDegree!=null&&(l+=Math.PI*h.rotationDegree/180),Xo(l)}(o,n)),o===0)t.xCenter=t.xCenter+r*n.shiftX,t.yCenter=t.yCenter+s*n.shiftY;else{var a=(e.width*r*n.shiftX*Math.cos(o)-e.height*s*n.shiftY*Math.sin(o))/e.width,i=(e.width*r*n.shiftX*Math.sin(o)+e.height*s*n.shiftY*Math.cos(o))/e.height;t.xCenter=t.xCenter+a,t.yCenter=t.yCenter+i}if(n.squareLong){var u=Math.max(r*e.width,s*e.height);r=u/e.width,s=u/e.height}else if(n.squareShort){var c=Math.min(r*e.width,s*e.height);r=c/e.width,s=c/e.height}return t.width=r*n.scaleX,t.height=s*n.scaleY,t}function ek(t,e){for(var n=function(U,K){var ee=U[0].x*K.width,ne=U[0].y*K.height,se=(U[4].x+U[8].x)/2,J=(U[4].y+U[8].y)/2;return se=(se+U[6].x)/2*K.width,J=(J+U[6].y)/2*K.height,Xo(Math.PI/2-Math.atan2(-(J-ne),se-ee))}(t,e),r=Xo(-n),s=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,a=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,u=0,c=t;u<c.length;u++){var l=(y=c[u]).x,h=y.y;s=Math.min(s,l),o=Math.max(o,l),a=Math.min(a,h),i=Math.max(i,h)}var d=(o+s)/2,f=(i+a)/2;s=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,a=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;for(var m=0,x=t;m<x.length;m++){var y,b=((y=x[m]).x-d)*e.width,$=(y.y-f)*e.height,T=b*Math.cos(r)-$*Math.sin(r),C=b*Math.sin(r)+$*Math.cos(r);s=Math.min(s,T),o=Math.max(o,T),a=Math.min(a,C),i=Math.max(i,C)}var R=(o+s)/2,L=(i+a)/2,P=R*Math.cos(n)-L*Math.sin(n)+e.width*d,O=R*Math.sin(n)+L*Math.cos(n)+e.height*f,B=(o-s)/e.width,V=(i-a)/e.height;return{xCenter:P/e.width,yCenter:O/e.height,width:B,height:V,rotation:n}}var tk={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},ci={runtime:"tfjs",modelType:"full",maxHands:2,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"},li={flipHorizontal:!1,staticImageMode:!1},nk={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2016,numCoords:18,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:7,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.5},rk=.3,sk={shiftX:0,shiftY:-.5,scaleX:2.6,scaleY:2.6,squareLong:!0},ok={shiftX:0,shiftY:-.1,scaleX:2,scaleY:2,squareLong:!0},ak={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},ik={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},uk={numLandmarks:21,inputImageWidth:224,inputImageHeight:224,normalizeZ:.4,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},ck={numLandmarks:21,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},Yo,lk=function(){function t(e,n,r){this.detectorModel=e,this.landmarkModel=n,this.maxHands=r,this.prevHandRectsFromLandmarks=null,this.anchors=function(u){u.reduceBoxesInLowestLayer==null&&(u.reduceBoxesInLowestLayer=!1),u.interpolatedScaleAspectRatio==null&&(u.interpolatedScaleAspectRatio=1),u.fixedAnchorSize==null&&(u.fixedAnchorSize=!1);for(var c=[],l=0;l<u.numLayers;){for(var h=[],d=[],f=[],m=[],x=l;x<u.strides.length&&u.strides[x]===u.strides[l];){var y=rh(u.minScale,u.maxScale,x,u.strides.length);if(x===0&&u.reduceBoxesInLowestLayer)f.push(1),f.push(2),f.push(.5),m.push(.1),m.push(y),m.push(y);else{for(var b=0;b<u.aspectRatios.length;++b)f.push(u.aspectRatios[b]),m.push(y);if(u.interpolatedScaleAspectRatio>0){var $=x===u.strides.length-1?1:rh(u.minScale,u.maxScale,x+1,u.strides.length);m.push(Math.sqrt(y*$)),f.push(u.interpolatedScaleAspectRatio)}}x++}for(var T=0;T<f.length;++T){var C=Math.sqrt(f[T]);h.push(m[T]/C),d.push(m[T]*C)}var R=0,L=0;if(u.featureMapHeight.length>0)R=u.featureMapHeight[l],L=u.featureMapWidth[l];else{var P=u.strides[l];R=Math.ceil(u.inputSizeHeight/P),L=Math.ceil(u.inputSizeWidth/P)}for(var O=0;O<R;++O)for(var B=0;B<L;++B)for(var V=0;V<h.length;++V){var U={xCenter:(B+u.anchorOffsetX)/L,yCenter:(O+u.anchorOffsetY)/R,width:0,height:0};u.fixedAnchorSize?(U.width=1,U.height=1):(U.width=d[V],U.height=h[V]),c.push(U)}l=x}return c}(tk);var s=et(this.anchors.map(function(u){return u.width})),o=et(this.anchors.map(function(u){return u.height})),a=et(this.anchors.map(function(u){return u.xCenter})),i=et(this.anchors.map(function(u){return u.yCenter}));this.anchorTensor={x:a,y:i,w:s,h:o}}return t.prototype.estimateHands=function(e,n){return Zt(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,f,m,x,y,b,$,T,C,R=this;return Jt(this,function(L){switch(L.label){case 0:return r=function(B){if(B==null)return st({},li);var V=st({},B);return V.flipHorizontal==null&&(V.flipHorizontal=li.flipHorizontal),V.staticImageMode==null&&(V.staticImageMode=li.staticImageMode),V}(n),e==null?(this.reset(),[2,[]]):(s=wy(e),o=de(function(){var B=Oe($y(e),"float32");return r.flipHorizontal&&(B=Ge(xa.flipLeftRight(cn(B,0)),[0])),B}),a=this.prevHandRectsFromLandmarks,r.staticImageMode||a==null||a.length<this.maxHands?[4,this.detectPalm(o)]:[3,2]);case 1:return(u=L.sent()).length===0?(this.reset(),o.dispose(),[2,[]]):(c=u.map(function(B){return R.palmDetectionToRoi(B,s)}),i=c,[3,3]);case 2:i=a,L.label=3;case 3:return P=.5,O=[],[i].forEach(function(B){return B.forEach(function(V){(O=O.filter(function(U){return WI(V,U)<=P})).push(V)})}),i=O,[4,Promise.all(i.map(function(B){return R.handLandmarks(B,o)}))];case 4:for(l=L.sent(),h=[],this.prevHandRectsFromLandmarks=[],d=0,f=l;d<f.length;d++)(m=f[d])!=null&&(x=m.landmarks,y=m.worldLandmarks,b=m.handScore,$=m.handedness,this.prevHandRectsFromLandmarks.push(this.handLandmarksToRoi(x,s)),(T=XI(x,s))!=null&&T.forEach(function(B,V){delete B.z,B.name=qo[V]}),(C=y)!=null&&C.forEach(function(B,V){B.name=qo[V]}),h.push({keypoints:T,keypoints3D:C,handedness:$,score:b}));return o.dispose(),[2,h]}var P,O})})},t.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Ae([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},t.prototype.reset=function(){this.prevHandRectsFromLandmarks=null},t.prototype.detectPalm=function(e){return Zt(this,void 0,void 0,function(){var n,r,s,o,a,i,u,c,l,h;return Jt(this,function(d){switch(d.label){case 0:return n=nh(e,ak),r=n.imageTensor,s=n.padding,o=this.detectorModel.predict(r),a=KI(o),i=a.boxes,[4,YI([u=a.logits,i],this.anchorTensor,nk)];case 1:return(c=d.sent()).length===0?(Ae([r,o,u,i]),[2,c]):[4,qI(c,this.maxHands,rk)];case 2:return l=d.sent(),h=function(f,m){f===void 0&&(f=[]);for(var x=m.left,y=m.top,b=m.left+m.right,$=m.top+m.bottom,T=0;T<f.length;T++){var C=f[T],R=C.locationData.relativeBoundingBox,L=(R.xMin-x)/(1-b),P=(R.yMin-y)/(1-$),O=R.width/(1-b),B=R.height/(1-$);R.xMin=L,R.yMin=P,R.width=O,R.height=B,R.xMax=L+O,R.yMax=P+B;var V=C.locationData.relativeKeypoints;V&&V.forEach(function(U){var K=(U.x-x)/(1-b),ee=(U.y-y)/(1-$);U.x=K,U.y=ee})}return f}(l,s),Ae([r,o,u,i]),[2,h]}})})},t.prototype.palmDetectionToRoi=function(e,n){return ah(HI(e,"boundingbox","normRect",n,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:2,rotationVectorTargetAngleDegree:90}),n,sk)},t.prototype.handLandmarks=function(e,n){return Zt(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,f,m,x,y,b,$;return Jt(this,function(T){switch(T.label){case 0:return r=nh(n,ik,e),s=r.imageTensor,o=r.padding,a=this.landmarkModel.execute(s,["Identity_2:0","Identity_1:0","Identity:0","Identity_3:0"]),i=a[0],u=a[1],c=a[2],l=a[3],[4,u.data()];case 1:return(h=T.sent()[0])<.5?(Ae(a),Ae(s),[2,null]):[4,c.data()];case 2:return d=T.sent()[0],f=d>=.5?"Left":"Right",[4,oh(i,uk)];case 3:return m=T.sent(),[4,oh(l,ck)];case 4:return x=T.sent(),y=function(C,R){var L=R.left,P=R.top,O=R.left+R.right,B=R.top+R.bottom;return C.map(function(V){return st(st({},V),{x:(V.x-L)/(1-O),y:(V.y-P)/(1-B),z:V.z/(1-O)})})}(m,o),b=function(C,R,L){L===void 0&&(L={ignoreRotation:!1});for(var P=[],O=0,B=C;O<B.length;O++){var V=B[O],U=V.x-.5,K=V.y-.5,ee=L.ignoreRotation?0:R.rotation,ne=Math.cos(ee)*U-Math.sin(ee)*K,se=Math.sin(ee)*U+Math.cos(ee)*K;ne=ne*R.width+R.xCenter,se=se*R.height+R.yCenter;var J=V.z*R.width,me=st({},V);me.x=ne,me.y=se,me.z=J,P.push(me)}return P}(y,e),$=function(C,R){for(var L=[],P=0,O=C;P<O.length;P++){var B=O[P],V=B.x,U=B.y,K=R.rotation,ee=Math.cos(K)*V-Math.sin(K)*U,ne=Math.sin(K)*V+Math.cos(K)*U,se=st({},B);se.x=ee,se.y=ne,L.push(se)}return L}(x,e),Ae(a),Ae(s),[2,{landmarks:b,worldLandmarks:$,handScore:h,handedness:f}]}})})},t.prototype.handLandmarksToRoi=function(e,n){return ah(ek([].concat(e.slice(0,4),e.slice(5,7),e.slice(9,11),e.slice(13,15),e.slice(17,19)),n),n,ok)},t}();function hk(t){return Zt(this,void 0,void 0,function(){var e,n,r,s,o,a;return Jt(this,function(i){switch(i.label){case 0:return e=function(u){if(u==null)return st({},ci);var c=st({},u);if(c.runtime="tfjs",c.maxHands==null&&(c.maxHands=ci.maxHands),c.modelType==null&&(c.modelType=ci.modelType),c.modelType!=="lite"&&c.modelType!=="full")throw new Error("Model type must be one of lite or full, but got "+c.modelType);return c.detectorModelUrl==null&&(c.modelType==="lite"?c.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/lite/1":c.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1"),c.landmarkModelUrl==null&&(c.modelType==="lite"?c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/lite/1":c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"),c}(t),n=e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r=e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([eh(e.detectorModelUrl,{fromTFHub:n}),eh(e.landmarkModelUrl,{fromTFHub:r})])];case 1:return s=i.sent(),o=s[0],a=s[1],[2,new lk(o,a,e.maxHands)]}})})}function dk(t,e){return Zt(this,void 0,void 0,function(){var n,r;return Jt(this,function(s){if(t===Yo.MediaPipeHands){if(r=void 0,(n=e)!=null){if(n.runtime==="tfjs")return[2,hk(n)];if(n.runtime==="mediapipe")return[2,UI(n)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r)}throw new Error(t+" is not a supported model name.")})})}(function(t){t.MediaPipeHands="MediaPipeHands"})(Yo||(Yo={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nr={},wo={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function pk(t,e){nr[t]=e}function en(t,e){if(!(t in nr)||e!=null){const r=mk(t,e);if(r!==null)nr[t]=r;else return console.log("Could not get context for WebGL version",t),null}const n=nr[t];return n==null||n.isContextLost()?(delete nr[t],en(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),nr[t])}function fk(t){if(!M().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&t===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function mk(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e??fk(t);return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete nr[t]},!1),M().getBool("SOFTWARE_WEBGL_ENABLED")&&(wo.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",wo)||n.getContext("experimental-webgl",wo):n.getContext("webgl2",wo)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ms;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(Ms||(Ms={}));var Tt;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(Tt||(Tt={}));var Ke;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Ke||(Ke={}));function Zs(t,e){return[e,t]}function gk(t,e){return t*e}function $o(t){const e=j(t),n=Math.ceil(e/4);return bi(n)}function ss(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function yk(t,e){const[n,r]=ss(t,e);return n*r*4}function Ju(t,e){const n=t;let r,s,o,a,i,u,c,l,h,d;return M().getNumber("WEBGL_VERSION")===2?(r=n.R32F,s=n.R16F,o=n.RGBA16F,a=n.RGBA32F,i=n.RED,c=4,l=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=t.RGBA,s=t.RGBA,o=t.RGBA,a=n.RGBA,i=t.RGBA,c=4,l=4,h=e!=null?e.HALF_FLOAT_OES:null,d=t.FLOAT,u=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q(t,e){const n=e();return M().getBool("DEBUG")&&xk(t),n}function xk(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+$k(t,e))}const bk=596e-10,vk=65504;function wk(t){return!!(M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||bk<Math.abs(t)&&Math.abs(t)<vk)}function $k(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function No(t,e){return Tn(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Nk(t,e){const n=Tn(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Q(t,()=>t.shaderSource(n,e)),Q(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Sk(t,e){const n=Tn(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Q(t,()=>t.shaderSource(n,e)),Q(t,()=>t.compileShader(n)),M().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw Ny(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Ck=/ERROR: [0-9]+:([0-9]+):/g;function Ny(t,e){const n=Ck.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const r=+n[1],s=t.split(`
`),o=s.length.toString().length+2,a=s.map((h,d)=>Ur((d+1).toString(),o)+h);let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const u=a.slice(0,r-1),c=a.slice(r-1,r),l=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Ur(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function Tk(t){return Tn(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function Ek(t,e){if(Q(t,()=>t.linkProgram(e)),!M().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function hi(t,e){if(Q(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Ik(t,e){const n=Tn(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Q(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Q(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function kk(t,e){const n=Tn(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Q(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Q(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function _k(t){return Tn(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function Rk(t,e){const n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const r=`[${t}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(t>n||e>n){const r=`[${t}x${e}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function Ak(t){return Tn(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function ih(t,e,n,r,s,o,a){const i=t.getAttribLocation(e,n);return i===-1?!1:(Q(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Q(t,()=>t.vertexAttribPointer(i,s,t.FLOAT,!1,o,a)),Q(t,()=>t.enableVertexAttribArray(i)),!0)}function Ok(t,e,n){Bk(t,n),Q(t,()=>t.activeTexture(t.TEXTURE0+n)),Q(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function Dk(t,e,n){return Tn(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function Fk(t,e,n){return t.getUniformLocation(e,n)}function Pk(t,e,n,r){Q(t,()=>Ok(t,e,r)),Q(t,()=>t.uniform1i(n,r))}function di(t,e,n){Q(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Q(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function uh(t,e){Q(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Q(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function So(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Lk(t,e))}function Lk(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Tn(t,e,n){const r=Q(t,()=>e());if(r==null)throw new Error(n);return r}function Bk(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){const s=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${s}.`)}}function Qr(t,e=2){return j(t.slice(0,t.length-e))}function Zr(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Co(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[Qr(t),...Zr(t)]),e}function Vk(t,e=!1){let n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=M().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&M().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n=n*2,r=r*2,t=t.map((i,u)=>u>=t.length-2?pu(t[u]):t[u]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=Un(t).newShape);let s=j(t),o=null;t.length<=1&&s<=n?o=[1,s]:t.length===2&&t[0]<=n&&t[1]<=n?o=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=Qr(t);let u=2,c=2;t.length&&([u,c]=Zr(t)),s=i*(u/2)*(c/2),o=bi(s).map(l=>l*2)}else o=bi(s);return o}function To(t){return t%2===0}function Qo(t,e){if(t=t.slice(-2),e=e.slice(-2),De(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t[t.length-1],r=e[e.length-1];if(n===r||To(n)&&To(r)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&To(t[0])&&To(e[0])}let pi,fi;function Mk(t){if(pi==null){const e=en(t);pi=e.getParameter(e.MAX_TEXTURE_SIZE)}return pi}function Uk(t){if(fi==null){const e=en(t);fi=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,fi)}function Wk(t){if(t===0)return 0;let e;const n=en(t);return Bt(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:Bt(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function Bt(t,e){return t.getExtension(e)!=null}function ch(t){try{if(en(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function zk(t){if(t===0)return!1;const e=en(t);if(t===1){if(!Bt(e,"OES_texture_float"))return!1}else if(!Bt(e,"EXT_color_buffer_float"))return!1;return ou(e)}function Gk(t){if(t===0)return!1;const e=en(t);if(t===1){if(!Bt(e,"OES_texture_float")||!Bt(e,"WEBGL_color_buffer_float"))return!1}else{if(Bt(e,"EXT_color_buffer_float"))return ou(e);const r="EXT_color_buffer_half_float";if(Bt(e,r)){const s=e.getExtension(r);return jk(e,s)}return!1}return ou(e)}function ou(t){const e=Ju(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(o),a}function jk(t,e){const n=Ju(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(a),i}function Hk(t){return t!==2?!1:en(t).fenceSync!=null}function Js(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&E(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const te=M();te.registerFlag("HAS_WEBGL",()=>te.getNumber("WEBGL_VERSION")>0);te.registerFlag("WEBGL_VERSION",()=>ch(2)?2:ch(1)?1:0);te.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);te.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>te.get("WEBGL_VERSION")===2);te.registerFlag("WEBGL_CPU_FORWARD",()=>!0);te.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);te.registerFlag("WEBGL_PACK",()=>te.getBool("HAS_WEBGL"));te.registerFlag("WEBGL_PACK_NORMALIZATION",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_CLIP",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_REDUCE",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_LAZILY_UNPACK",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_CONV_IM2COL",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Mk(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Uk(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=te.getNumber("WEBGL_VERSION");return t===0?0:Wk(t)});te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>te.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!um());te.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>zk(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>te.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:te.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));te.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Gk(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Hk(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>te.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);te.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});te.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>um()?1:-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});te.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);te.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);te.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);te.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);te.registerFlag("WEBGL_EXP_CONV",()=>!1);te.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>te.getBool("IS_TEST"));te.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);te.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);te.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);te.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function it(){let t,e,n,r,s,o,a,i,u,c;return M().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=M().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(t,e,n="index"){const r=qe(e);return r.map((s,o)=>{const a=`int ${t[o]} = ${n} / ${s}`,i=o===r.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * ${s}`:`index -= ${t[o]} * ${s}`;return`${a}; ${i};`}).join("")}function va(t,e,n="index"){const r=qe(e);return r.map((s,o)=>{const a=`int ${t[o]} = ${n} / outShapeStrides[${o}]`,i=o===r.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * outShapeStrides[${o}]`:`index -= ${t[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function Kk(t,e){const n=t.length,r=t.map(o=>`${e}[${o}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let o=n-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function qk(t,e,n="index"){const r=t.map((o,a)=>a),s=Kk(r,e);return s.map((o,a)=>{const i=`int ${t[a]} = ${n} / ${s[a]}`,u=a===s.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${s[a]}`:`index -= ${t[a]} * ${s[a]}`;return`${i}; ${u};`}).join("")}function ec(t){const e=qe(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function tc(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Sy=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Cy}=hE;function Xk(t,e,n){const r=[];if(t.forEach(f=>{const m=j(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`)),n.enableShapeUniforms){const{uniformShape:x}=nc(n.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(x.length){case 1:r.push(`uniform int ${f.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${f.name}Shape;`);break}r.push(`uniform ivec2 ${f.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(f=>{r.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const s=r.join(`
`),o=t.map(f=>Yk(f,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),a=e.texShape,i=it(),u=Jk(i);let c,l,h=n_(i);return e.isPacked?(c=Qk(e.logicalShape,a,n.enableShapeUniforms),l=t_(i)):(c=Zk(e.logicalShape,a,n.enableShapeUniforms),l=e_(i)),n.packedInputs&&(h+=a_),[h,u,l,s,c,o,n.userCode].join(`
`)}function os(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return x_(t,e);case 1:return v_(t,e);case 2:return $_(t,e);case 3:return S_(t,e);case 4:return T_(t,e);case 5:return E_(t);case 6:return I_(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Ty(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return y_(t);case 1:return b_(t,e);case 2:return w_(t,e);case 3:return N_(t,e);default:return C_(t,e)}}function Yk(t,e,n=!1,r){let s="";n?s+=Ty(t,r):s+=os(t,r);const o=t.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(n?s+=k_(t,e):s+=__(t,e)),s}function Qk(t,e,n){switch(t.length){case 0:return Ey();case 1:return i_(t,e,n);case 2:return m_(t,e,n);case 3:return c_(t,e,n);default:return h_(t,e,n)}}function Zk(t,e,n){switch(t.length){case 0:return Ey();case 1:return u_(t,e,n);case 2:return g_(t,e,n);case 3:return l_(t,e,n);case 4:return d_(t,e,n);case 5:return p_(t,e);case 6:return f_(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function Jk(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function e_(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function t_(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function n_(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${r_}
    ${s_}
    ${o_}
  `}const r_=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,s_=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,o_=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,a_=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Ey(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function i_(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function u_(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function c_(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),o=s*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function l_(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${va(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const r=Er(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function h_(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),o=s*Math.ceil(t[t.length-2]/2);let a=o,i="",u="b, r, c";for(let c=2;c<t.length-1;c++)a*=t[t.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,u=`b${c}, `+u;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${t.length}(${u});
    }
  `}function d_(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${va(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Er(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function p_(t,e){const n=Er(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function f_(t,e){const n=Er(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function m_(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(De(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function g_(t,e,n){return De(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function Ir(t){return`offset${t}`}function y_(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=it();return`
    vec4 ${n}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function x_(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,o]=t.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=Ir(n);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});
      return sampleTexture(${n}, uv);
    }
  `;const[i,u]=t.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${n}, uv);
    }
  `}function b_(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,o=it();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${n}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${n}, uv);
    }
  `}function v_(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${as(t)}
      }
    `;const s=t.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=Ir(n);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${n}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function w_(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,a=o[0],i=o[1],u=it();if(o!=null&&De(n,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(n[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function $_(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape;if(o!=null&&De(n,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const d=o[0],f=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:i}=Un(n),u=a;if(u.length<n.length){const d=is(t,u),f=["row","col"];return`
      ${os(d,e)}
      float ${s}(int row, int col) {
        return ${s}(${us(f,i)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${as(t)}
      }
    `;const c=o[0],l=o[1],h=Ir(r);return l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function N_(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(n[0]===1){const d=n.slice(1),f=[1,2],m=is(t,d),x=["b","row","col"];return`
        ${Ty(m,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${us(x,f)});
        }
      `}const i=it();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;const u=a[0],c=a[1],l=Math.ceil(n[2]/2),h=l*Math.ceil(n[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${h}, ${l}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function S_(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],a=n[2],{newShape:i,keptDims:u}=Un(n),c=i;if(c.length<n.length){const x=is(t,c),y=["row","col","depth"];return`
        ${os(x,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${us(y,u)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${as(t)}
      }
    `;const l=t.shapeInfo.texShape,h=l[0],d=l[1],f=t.shapeInfo.flatOffset;if(d===o&&f==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===a&&f==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;const m=Ir(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function C_(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=it();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);
    }
  `;const o=t.shapeInfo.logicalShape,a=o.length,i=t.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],h=Math.ceil(o[a-1]/2);let d=h*Math.ceil(o[a-2]/2),f="int b, int row, int col",m=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let x=2;x<a-1;x++)f=`int b${x}, `+f,d*=o[a-x-1],m=`b${x} * ${d} + `+m;return`
    vec4 ${r}(${f}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${s.texture2D}(${n}, uv);
    }
  `}function T_(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],a=n[2]*o,i=n[1]*a,{newShape:u,keptDims:c}=Un(n);if(u.length<n.length){const $=is(t,u),T=["row","col","depth","depth2"];return`
      ${os($,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${us(T,c)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${as(t)}
      }
    `;const l=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1],m=`int stride2 = ${r}Shape[3];`,x=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===i&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${m}
        ${x}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===o&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;const b=Ir(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${x}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function E_(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:c}=Un(e);if(u.length<e.length){const x=is(t,u),y=["row","col","depth","depth2","depth3"];return`
      ${os(x)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${us(y,c)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${s})) +
          depth3;
        ${as(t)}
      }
    `;const l=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],f=h[1];if(f===i&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=Ir(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function I_(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=Un(e);if(s.length<e.length){const y=is(t,s),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${os(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${us(b,o)});
      }
    `}const a=e[5],i=e[4]*a,u=e[3]*i,c=e[2]*u,l=e[1]*c;if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${as(t)}
      }
    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,f=d[0],m=d[1];if(m===l&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===a&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;const x=Ir(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${x};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function as(t){const e=t.name,n=j(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function k_(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=Cy(t.shapeInfo.logicalShape,e.logicalShape),u=$e(a),c=a-o;let l;const h=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map($=>`coords.${h[$+c]} = 0;`).join(`
`);let d="";a<2&&o>0?d="coords":d=t.shapeInfo.logicalShape.map(($,T)=>`coords.${h[T+c]}`).join(", ");let f="return outputValue;";const x=j(t.shapeInfo.logicalShape)===1,b=j(e.logicalShape)===1;if(o===1&&!x&&!b)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!b)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){const $=o-2,T=o-1;i.indexOf($)>-1&&i.indexOf(T)>-1?f="return vec4(outputValue.x);":i.indexOf($)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(T)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${d});
      ${f}
    }
  `}function __(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===u&&t.shapeInfo.flatOffset==null&&De(a,o))return`
      float ${s}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const c=$e(u),l=Cy(t.shapeInfo.logicalShape,e.logicalShape),h=u-i;let d;const f=["x","y","z","w","u","v"];i===0?d="":u<2&&l.length>=1?d="coords = 0;":d=l.map(x=>`coords.${f[x+h]} = 0;`).join(`
`);let m="";return u<2&&i>0?m="coords":m=t.shapeInfo.logicalShape.map((x,y)=>`coords.${f[y+h]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${r}(${m});
    }
  `}function $e(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function nc(t,e,n){const{newShape:r,keptDims:s}=Un(e),o=e.length,a=t&&o===3&&e[0]===1,i=a?e.slice(1):r,u=!t&&o>1&&!De(e,n)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function is(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function us(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(t,e,n,r){const s=n.map((l,h)=>{const d={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(d.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=s.map(l=>l.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=Xk(s,a,e),u=Sk(t.gl,i),c=t.createProgram(u);return M().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(c),Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},Iy(t,e,c)))}function Iy(t,e,n){const r=[],s=[];let o,a,i,u=null,c=null;c=t.getUniformLocation(n,"NAN",!1),M().getNumber("WEBGL_VERSION")===1&&(u=t.getUniformLocation(n,"INFINITY",!1));const l=!1;for(const h of e.variableNames){const d={name:h,uniform:t.getUniformLocation(n,h,l),offset:t.getUniformLocation(n,`offset${h}`,l)};e.enableShapeUniforms&&(d.shape=t.getUniformLocation(n,`${h}Shape`,l),d.texShape=t.getUniformLocation(n,`${h}TexShape`,l)),r.push(d)}if(e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",l),i=t.getUniformLocation(n,"outShapeStrides",l),a=t.getUniformLocation(n,"outTexShape",l)),e.customUniforms)for(const h of e.customUniforms)s.push(t.getUniformLocation(n,h.name,l));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function lh(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,r)=>{const s=n.logicalShape,o=e[r],a=o.shape;if(!De(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(n.isUniform&&o.isUniform)return;const i=n.texShape,u=o.isUniform?null:o.texData.texShape;if(!De(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function A_(t,e,n,r,s){e.program.enableShapeUniforms||(lh(e.inShapeInfos,n),lh([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):t.setOutputMatrixTexture(o.texture,a[0],a[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),M().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<n.length;++u){const c=n[u],{uniform:l,offset:h,shape:d,texShape:f}=e.variablesLocations[u];if(d){const{uniformShape:m}=nc(e.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:t.gl.uniform1iv(d,new Int32Array(m));break;case 2:t.gl.uniform2iv(d,new Int32Array(m));break;case 3:t.gl.uniform3iv(d,new Int32Array(m));break;case 4:t.gl.uniform4iv(d,new Int32Array(m));break}}if(f&&t.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(j(c.shape)<2)t.gl.uniform1f(l,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),t.gl.uniform1fv(l,m)}continue}c.texData.slice!=null&&h!=null&&t.gl.uniform1i(h,c.texData.slice.flatOffset),t.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:t.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(i,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=qe(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const c=e.program.customUniforms[u],l=e.customUniformLocations[u],h=s[u];if(c.type==="float")t.gl.uniform1fv(l,h);else if(c.type==="vec2")t.gl.uniform2fv(l,h);else if(c.type==="vec3")t.gl.uniform3fv(l,h);else if(c.type==="vec4")t.gl.uniform4fv(l,h);else if(c.type==="int")t.gl.uniform1iv(l,h);else if(c.type==="ivec2")t.gl.uniform2iv(l,h);else if(c.type==="ivec3")t.gl.uniform3iv(l,h);else if(c.type==="ivec4")t.gl.uniform4iv(l,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}t.executeProgram()}function O_(t,e,n){let r="";e.concat(n).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:h}=nc(t.packedInputs,a.shape,u);let d="",f="",m="";if(l.length===1&&t.packedInputs){const R=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${R[0]>1}_${R[1]>1}`}else if(l.length===2&&!t.packedInputs)f=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!t.packedInputs){const R=qe(l);m=`${R[0]===u[1]}_${R[R.length-1]===u[1]}`}const x=a.shape.length,y=l.length===2&&De(a.shape,u),b=j(a.shape)===1,$=Uo(a.shape,n.shape),T=!t.packedInputs&&x===n.shape.length&&De(u,n.texData.texShape),C=t.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${x}_${T}_${c?h:""}_${l.length}_${b}_${$}_${y}_${d}_${f}_${m}_${C}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${i}`}});const s=t.userCode;let o=t.constructor.name;return o+="_"+r+"_"+s+`${M().getNumber("WEBGL_VERSION")}`,o}function tt(t){return M().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ms.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=it();this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?va(["r","c","d"],e):Er(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ms.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=it();this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?va(["r","c","d"],e):Er(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P_{constructor(e){this.variableNames=["A"],this.outTexUsage=Tt.DOWNLOAD;const n=it();this.outputShape=e,this.userCode=`
      ${Sy}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Tt.DOWNLOAD;const n=it();this.outputShape=e,this.userCode=`
      ${Sy}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_={R:0,G:1,B:2,A:3};class hh{constructor(e,n=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=it();this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<r.length;i++){const u=r[i];a+=`
          if(offset == ${i}) {
            result = values[${B_[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?tc():ec(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V_{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=it();this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length);let s="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?tc():ec(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(t){const e=it(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Nk(t,n)}function U_(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Ik(t,e)}function W_(t){const e=new Uint16Array([0,1,2,2,1,3]);return kk(t,e)}function eo(t,e,n,r,s,o){Rk(e,n);const a=_k(t),i=t.TEXTURE_2D;return Q(t,()=>t.bindTexture(i,a)),Q(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Q(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Q(t,()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST)),Q(t,()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST)),M().getNumber("WEBGL_VERSION")===1?Q(t,()=>t.texImage2D(i,0,r,e,n,0,s,o,null)):Q(t,()=>t.texStorage2D(i,1,r,e,n)),Q(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:a,texShape:[n,e]}}function ky(t){return t.internalFormatFloat}function z_(t,e,n,r){const[s,o]=Zs(e,n);return eo(t,s,o,ky(r),r.textureFormatFloat,t.FLOAT)}function _y(t){return t.internalFormatHalfFloat}function G_(t,e,n,r){const[s,o]=Zs(e,n);return eo(t,s,o,_y(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Ry(t){return t.downloadTextureFormat}function j_(t,e,n,r){const[s,o]=Zs(e,n);return eo(t,s,o,Ry(r),t.RGBA,t.UNSIGNED_BYTE)}function Ay(t){return t.internalFormatPackedFloat}function H_(t,e,n,r){const[s,o]=ss(e,n);return eo(t,s,o,Ay(r),t.RGBA,t.FLOAT)}function Oy(t){return t.internalFormatPackedHalfFloat}function K_(t,e,n,r){const[s,o]=ss(e,n);return eo(t,s,o,Oy(r),t.RGBA,r.textureTypeHalfFloat)}function q_(t,e,n){return Q(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ih(t,e,"clipSpacePos",n,3,20,0)&&ih(t,e,"uv",n,2,20,12)}function X_(t,e,n,r,s,o){Q(t,()=>t.bindTexture(t.TEXTURE_2D,e));let a,i,u;s instanceof Uint8Array?(a=new Uint8Array(n*r*4),i=t.UNSIGNED_BYTE,u=t.RGBA):(a=new Float32Array(n*r*4),i=t.FLOAT,u=o.internalFormatPackedFloat),a.set(s),M().getNumber("WEBGL_VERSION")===2?Q(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,i,a)):Q(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,i,a)),Q(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function Y_(t,e,n){Q(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?M().getNumber("WEBGL_VERSION")===2?Q(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):Q(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):M().getNumber("WEBGL_VERSION")===2?Q(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):Q(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Q(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function Q_(t,e,n,r){const s=t.createBuffer();Q(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s));const i=4*4*e*n;return Q(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ)),Q(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Q(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),s}function Z_(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function J_(t,e,n,r){const[s,o]=Zs(e,n),a=4,i=new Uint8Array(gk(e*n,a));return Q(t,()=>t.readPixels(0,0,s,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function eR(t,e,n,r,s,o,a,i){const u=t,c=new Float32Array(yk(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function tR(t,e,n){const r=new Float32Array(e*n*4);return Q(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mi{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=M().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,pk(n,e)):this.gl=en(n),e=this.gl,M().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>Q(o,()=>o.createVertexArray()),this.bindVertexArray=a=>Q(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>Q(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>Q(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Q(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>Q(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>Q(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>Q(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),M().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=No(this.gl,o),Bt(this.gl,a))this.textureHalfFloatExtension=No(this.gl,a);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Bt(this.gl,s))this.colorBufferHalfFloatExtension=No(this.gl,s);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Bt(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Bt(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=U_(this.gl),this.indexBuffer=W_(this.gl),this.framebuffer=Ak(this.gl),this.textureConfig=Ju(this.gl,this.textureHalfFloatExtension)}get debug(){return M().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Q(e,()=>e.finish()),Q(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Q(e,()=>e.deleteFramebuffer(this.framebuffer)),Q(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Q(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Q(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),z_(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),G_(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),j_(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),Y_(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,r,s){this.throwIfDisposed(),X_(this.gl,e,n,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),K_(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),H_(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(uh(this.gl,this.framebuffer),this.outputTexture=null),Q(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,r){return this.downloadMatrixDriver(e,()=>J_(this.gl,n,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,r,s,o,a){return eR(this.gl,e,n,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return Z_(this.gl,e,n)}createBufferFromTexture(e,n,r){this.bindTextureToFrameBuffer(e);const s=Q_(this.gl,n,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,r;if(M().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},n=o}else M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(n,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:n,isFencePassed:r}}downloadMatrixFromPackedTexture(e,n,r){return this.downloadMatrixDriver(e,()=>tR(this.gl,n,r))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=M_(n));const r=Tk(n);Q(n,()=>n.attachShader(r,this.vertexShader)),Q(n,()=>n.attachShader(r,e)),Ek(n,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&hi(n,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const n=this.gl;Q(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),q_(n,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Q(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&hi(this.gl,this.program),Q(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,r=!0){return this.throwIfDisposed(),r?Dk(this.gl,e,n):Fk(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),Q(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,r){this.throwIfDisposed(),this.throwIfNoProgram(),Pk(this.gl,e,n,r)}setOutputMatrixTexture(e,n,r){this.setOutputMatrixTextureDriver(e,r,n)}setOutputPackedMatrixTexture(e,n,r){this.throwIfDisposed();const[s,o]=ss(n,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,n,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,n)}setOutputPackedMatrixWriteRegion(e,n,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&hi(this.gl,this.program),So(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Q(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Q(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=No(this.gl,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,r=this.getQueryTimerExtensionWebGL2();n.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await wl(()=>this.disposed||this.isQueryAvailable(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=nR(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:r}=this.itemsToPoll[n];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in M().platform&&(r=M().platform.setTimeoutCustom.bind(M().platform)),wl(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),di(this.gl,e,this.framebuffer),this.debug&&So(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(di(this.gl,this.outputTexture,this.framebuffer),this.debug&&So(this.gl)):uh(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const r=n();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,n,r){this.throwIfDisposed();const s=this.gl;di(s,e,this.framebuffer),this.debug&&So(s),this.outputTexture=e,Q(s,()=>s.viewport(0,0,n,r)),Q(s,()=>s.scissor(0,0,n,r))}setOutputMatrixWriteRegionDriver(e,n,r,s){this.throwIfDisposed(),Q(this.gl,()=>this.gl.scissor(e,n,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function nR(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dt(t){return(e,n,r,s,o)=>{const a=ye(e,n),i=a.length,u=qe(a),c=j(a),l=Ln(o,c),h=e.length,d=n.length,f=qe(e),m=qe(n),x=Uo(e,a),y=Uo(n,a);if(x.length+y.length===0)for(let b=0;b<l.length;++b)l[b]=t(r[b%r.length],s[b%s.length]);else for(let b=0;b<l.length;++b){const $=fu(b,i,u),T=$.slice(-h);x.forEach(P=>T[P]=0);const C=Ni(T,h,f),R=$.slice(-d);y.forEach(P=>R[P]=0);const L=Ni(R,d,m);l[b]=t(r[C],s[L])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(t,e,n,r){if(r==="int32"){const s=Int32Array.from(t);return[e,"int32",s]}if(r==="bool"){const s=aa([0],n),[o,a]=dt((i,u)=>i!==u?1:0)(e,[],t,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR=dt((t,e)=>t+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(t,e,n,r,s){const o=j(r),a=Bn(s,n);for(let i=0;i<t.length;i++){const u=t[i];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[i]:a[u]+=1)}return a}function iR(t,e,n,r=!1){const s=t.shape[0],o=t.shape[1],a=Fe([s,n],e.dtype);for(let i=0;i<s;i++)for(let u=0;u<o;u++){const c=t.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(r?a.set(1,i,c):e.size>0?a.set(a.get(i,c)+e.get(i,u),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR=dt((t,e)=>t&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function En(t){return(e,n,r)=>{const s=We(n,e.length);for(let o=0;o<e.length;++o)s[o]=t(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR=En(t=>Math.ceil(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(t,e,n,r){const s=We(n,j(e));if(r&&n!=="string"){let o=0;t.forEach(a=>{const i=j(a.shape);s.set(a.vals,o),o+=i})}else{let o=0;t.forEach(a=>{const i=n==="string"?Yr(a.vals):a.vals;let u=0;for(let c=0;c<a.shape[0];++c){const l=c*e[1]+o;for(let h=0;h<a.shape[1];++h)s[l+h]=i[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR=dt((t,e)=>t===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR=En(t=>Math.exp(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pR=En(t=>Math.expm1(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fR=En(t=>Math.floor(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR=dt((t,e)=>Math.floor(t/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(t,e,n,r,s,o,a,i,u){const c=Fe([r,o],n);for(let l=0;l<r;l++){const h=[];let d=0;for(let f=0;f<s;f++){const m=t[l*s+f];d+=m*a[f],h.push(m)}if(d<0||d>=u/o)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let f=0;f<o;f++)c.values[l*o+f]=e.get(...e.indexToLoc(d*o+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(t,e,n){const r=Fe(n,t.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),i=a[0],u=a[2],c=e.locToIndex([i,u]);a[2]=e.values[c];const l=t.locToIndex(a);0<=l&&l<t.values.length&&(r.values[s]=t.values[l])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xR=dt((t,e)=>t>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR=dt((t,e)=>t>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR=dt((t,e)=>t<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wR=dt((t,e)=>t<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(t,e,n){const r=(e-t)/(n-1),s=Bn(n,"float32");s[0]=t;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NR=En(t=>Math.log(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(t,e,n,r){const s=Ln(r,j(n));for(let o=0;o<s.length;++o){const a=o*e;let i=t[a];for(let u=0;u<e;++u){const c=t[a+u];(Number.isNaN(c)||c>i)&&(i=c)}s[o]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR=dt((t,e)=>Math.max(t,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TR=dt((t,e)=>Math.min(t,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dy=dt((t,e)=>t*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(t,e,n){const r=ts(-1,n);return Dy([],e,r,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IR=dt((t,e)=>t!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(t,e,n,r,s){const o=e.length,a=j(e),i=qe(e),u=qe(s),c=Ln(n,j(s));for(let l=0;l<a;++l){const h=fu(l,o,i),d=new Array(h.length);for(let m=0;m<d.length;m++)d[m]=h[r[m]];const f=Ni(d,o,u);c[f]=t[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(t,e,n,r){const[s,o]=mn(t,r),a=fn(e,"int32"),i=Bn(j(s),a),u=j(o);for(let c=0;c<i.length;++c){const l=c*u;let h=1;for(let d=0;d<u;++d)h*=n[l+d];i[c]=h}return{outVals:i,outShape:s,outDtype:a}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(t,e,n){t.forEach((r,s)=>{if(r<0||r>=n){const o=fu(s,e.length,qe(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${n})`)}})}function AR(t,e){for(let n=0;n<t.length;++n){const r=t[n],s=n===t.length-1?e:t[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function OR(t,e,n,r){const s=[];let o=0;const a=e.length-1+n.length,i=new Array(a).fill(null).map(()=>[0]);AR(n,r);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const l=e[c+1];for(let h=1;h<u+1;++h)i[c].push(h*l)}for(let c=0;c<t.length;++c){let l=t[c],h=t[c]+1;for(let d=0;d<n.length;++d){const f=n[d],m=d+e.length-1;if(m>=0){const x=i[m],y=x[x.length-1]-f[l];for(let b=l;b<h;++b)i[m].push(f[b+1]+y)}l=f[l],h=f[h]}h!==l&&(s.push([l,h]),o+=h-l)}return{outSplits:i,valueSlices:s,numValues:o}}function DR(t){const e=[];for(let n=0;n<t.length;++n){const r=t[n].length,s=We("int32",r);e.push(s),t[n].forEach((o,a)=>s[a]=o)}return e}function dh(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function FR(t,e,n,r,s,o){const a=dh(e,2)[1],i=dh(o,2)[1];let u=0;for(const c of n)for(let l=c[0];l<c[1];++l){for(let h=0;h<r;++h)s[u*i+h]=t[l*a+h];++u}}function PR(t,e,n,r,s){const o=e.slice();o[0]=s;const a=We(n,j(o)),i=t.length,u=i===0?0:i/e[0];return FR(t,e,r,u,a,o),[a,o]}function LR(t,e,n,r,s,o,a,i){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(RR(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const c=r[0],{outSplits:l,valueSlices:h,numValues:d}=OR(o,a,t,c),f=DR(l),m=PR(n,r,s,h,d);return[f,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ph=2147483647;function BR(t,e,n,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=s.length===0,c=a.length===0,l=[];i||l.push(e[0]),u||l.push(s[0]),c||l.push(a[0]);for(let y=1;y<l.length;++y)if(l[y]!==l[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=l.length===0?1:l[0],d=We("int32",h+1);d[0]=0;for(let y=0;y<h;++y){const b=i?t[0]:t[y],$=u?r[0]:r[y],T=c?o[0]:o[y];if(T===0)throw new Error("Requires delta != 0");let C;if(T>0&&$<b||T<0&&$>b)C=0;else if(C=Math.ceil(Math.abs(($-b)/T)),C>ph)throw new Error(`Requires ((limit - start) / delta) <= ${ph}`);d[y+1]=d[y]+C}const f=d[h],m=We(n,f);let x=0;for(let y=0;y<h;++y){const b=d[y+1]-d[y];let $=i?t[0]:t[y];const T=c?o[0]:o[y];for(let C=0;C<b;++C)m[x++]=$,$+=T}return[d,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ot=Xt;class Zo{constructor(e,n,r,s,o,a,i,u,c,l){this.shape=e,this.shapeShape=n,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Lg(l),this.raggedRank=Bg(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ot.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ot.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ot.VALUE_ROWIDS:return Zo.getMaxWidthValueRowID(n);case Ot.ROW_SPLITS:return Zo.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Ot[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let r=0;for(let s=0;s<n-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<n;++a){const i=e[a];i!==s&&(s=i,o=Math.max(a-r,o),r=a)}return Math.max(n-r,o)}tensorShapeFromTensor(e,n,r=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return mh(e,r)}calculateOutputSize(e){const n=this.valuesShape,r=this.defaultValueShape;Vg(r,n);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Pg(this.raggedRank,s,n);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,n,r){const s=Math.min(e,r),o=[];let a=0;for(let i=0;i<s;++i,a+=n)o.push(a);for(let i=s;i<e;++i)o.push(-1);return E(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,n,r,s){const o=e.length,a=[];for(let i=0;i<o-1;++i){const u=e[i+1]-e[i];let c=Math.min(s,u),l=n[i];l===-1&&(c=0);for(let h=0;h<c;++h)a.push(l),l+=r;for(let h=0;h<u-c;++h)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,n,r,s){const o=e.length,a=[];if(o===0)return[];let i=0,u=e[0];if(u>=n.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${n.length}`);let c=n[u];a.push(c);for(let l=1;l<o;++l){const h=e[l];if(h===u)c>=0&&(++i,i<s?c+=r:c=-1);else{if(i=0,u=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);c=n[h]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,n,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Ot.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,n,r,s);case Ot.ROW_SPLITS:if(o.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(o,n,r,s);default:throw new Error(`Unsupported partition type: ${Ot[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case Ot.FIRST_DIM_SIZE:return e[0];case Ot.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ot.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ot[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),r=this.calculateOutputSize(n),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=mh(r,!1),a=We(this.valuesDType,j(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(n,s[0],r[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,s[c],r[c]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,n,r,s){if(r.length===0)return;const o=this.values,a=r;let i=s.slice();i=i.slice(e+1);const u=j(i),c=n.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const m=this.defaultValueShape;de(()=>{const x=z(l,m);l=_s(x,i).dataSync()})}let h=0,d=0,f=0;for(let m=0;m<=c;++m){let x=m<c?n[m]:-1;if(x===f){++f;continue}if(d<f){const y=o.subarray(h*u),b=a.subarray(d*u),$=(f-d)*u;fh(b,y,$)}if(m>=c){const y=r.length;x=Math.floor(y/u)}if(x>f)if(this.defaultValue.length===1)a.subarray(f*u,x*u).fill(this.defaultValue[0]),f=x;else for(;x>f;){const y=a.slice(f*u);fh(y,l,u),++f}x<0?(h=m+1,d=f):(h=m,d=f,f=d+1)}}}function fh(t,e,n){for(let r=0;r<n;r++)t[r]=e[r]}function mh(t,e){const n=[];for(let r of t){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function VR(t,e,n,r,s,o,a,i,u,c){return new Zo(t,e,n,r,s,o,a,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(t,e,n,r){const s=t===e,o=t<e&&n<0,a=e<t&&n>1;if(s||o||a)return Bn(0,r);const i=Math.abs(Math.ceil((e-t)/n)),u=Bn(i,r);e<t&&n===1&&(n=-1),u[0]=t;for(let c=1;c<u.length;c++)u[c]=u[c-1]+n;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UR=En(t=>1/Math.sqrt(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(t,e,n,r,s,o,a,i,u,c){const l=[r/s,s],h=t.values,d=e.values;if(r===0)return Fe(n,e.dtype);const f=u instanceof qr?u:Fe(l,e.dtype);typeof u=="string"||typeof u=="number"?f.values.fill(u):typeof u=="boolean"&&f.values.fill(+u);for(let m=0;m<o;m++){const x=[];let y=0;for(let b=0;b<a;b++){const $=h[m*a+b];x.push($),y+=$*i[b]}if(y<0||y>=r/s)throw new Error(`Invalid indices: ${x} does not index into ${n}`);for(let b=0;b<s;b++)c?f.values[y*s+b]+=d[m*s+b]:f.values[y*s+b]=e.rank===0?d[0]:d[m*s+b]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zR=En(t=>1/(1+Math.exp(-t)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(t,e,n,r,s){const o=Hu(r,e,n),a=j(n),i=qe(r);if(o){const h=Ku(e,i);return s==="string"?t.slice(h,h+a):t.subarray(h,h+a)}const u=s==="string"?Yr(t):t,c=Fe(r,s,u),l=Fe(n,s);for(let h=0;h<l.size;++h){const d=l.indexToLoc(h),f=d.map((m,x)=>m+e[x]);l.set(c.get(...f),...d)}return s==="string"?yy(l.values):l.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(t,e,n,r,s,o,a){const i=e[0],u=o[0],c=new Array(u),l=new Array(i),h=e[1];if(u===0){if(i!==0)throw new Error(ry(i));const y=We(n,0),b=We(s,0);return[y,[0,h],b,c,l]}let d=!0,f=0;const m=new Array(u).fill(0);for(let y=0;y<i;++y){const b=t[y*h];if(b<0)throw new Error(sy(y,b));if(b>=u)throw new Error(oy(y,b,u));++m[b],d=d&&b>=f,f=b}let x=!0;for(let y=0;y<u;++y){const b=m[y]===0;c[y]=b,x=x&&!b,m[y]=Math.max(m[y],1),y>0&&(m[y]+=m[y-1])}if(x&&d){const y=t,b=r;for(let $=0;$<i;++$)l[$]=$;return[y,[i,h],b,c,l]}else{const y=m[u-1],b=We(n,y*h),$=We(s,y),T=new Array(u).fill(0);for(let C=0;C<i;++C){const R=t[C*h],L=T[R],P=(R===0?0:m[R-1])+L;T[R]++;for(let O=0;O<h;++O)b[P*h+O]=t[C*h+O];$[P]=r[C],l[C]=P}for(let C=0;C<u;++C)if(T[C]===0){const L=C===0?0:m[C-1];b[L*h+0]=C;for(let P=1;P<h;++P)b[L*h+P]=0;$[L]=a}return[b,[y,h],$,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(t,e,n,r,s){const o=j(r),a=e[0],i=s.length,u=[];let c=1,l=-1;for(let y=0;y<i;++y){const b=s[y];if(b===-1){if(l!==-1)throw new Error(ay(l,y));l=y,u.push(1)}else{if(b<0)throw new Error(iy(y,b));c*=b,u.push(b)}}if(l!==-1){if(c<=0)throw new Error(uy());const y=Math.trunc(o/c);if(c*y!==o)throw new Error(cy(r,u));u[l]=y}if(j(u)!==o)throw new Error(ly(r,u));const d=r.length,f=[];if(d>0){f[d-1]=1;for(let y=d-2;y>=0;--y)f[y]=f[y+1]*r[y+1]}const m=[];if(i>0){m[i-1]=1;for(let y=i-2;y>=0;--y)m[y]=m[y+1]*u[y+1]}const x=We(n,a*i);for(let y=0;y<a;++y){let b=0;for(let $=0;$<d;++$)b+=t[y*d+$]*f[$];for(let $=0;$<i;++$)x[y*i+$]=Math.trunc(b/m[$]),b%=m[$]}return[x,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(t,e,n,r,s,o=!1,a=0){const i=r.length,u=[e[0],t.length/e[0]],c=u[1],h=i>0?s[i-1]+1:0;if(h<0)throw new Error(Ki());const d=e.slice();d[0]=h;const f=d.reduce((T,C)=>T*C,1),m=We(n,f);if(i===0)return h>0&&m.fill(a),[m,d];if(h<=0)throw new Error(Ki());let x=0,y=1,b=0,$=s[x];for(;;){let T=0;if(y<i){if(T=s[y],$===T){++y;continue}if($>=T)throw new Error(hy())}if($<0||$>=h)throw new Error(dy($,h));$>b&&m.fill(a,b*c,$*c);for(let C=x;C<y;++C){const R=r[C];if(R<0||R>=u[0])throw new Error(py(C,r[C],u[0]));for(let L=0;L<c;L++)m[$*c+L]+=t[R*c+L]}if(o)for(let C=0;C<c;C++)m[$*c+C]/=y-x;if(x=y,++y,b=$+1,$=T,y>i)break}return b<h&&m.fill(a,b*c,h*c),[m,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qR=En(t=>Math.sqrt(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XR=dt((t,e)=>{const n=t-e;return n*n});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YR=En((t,e)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=e;return t.replace(new RegExp(n,r?"g":""),s)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(t,e,n,r){const s=Fe(t,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*n[u]+r[u];s.set(e.get(...i),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZR{constructor(e,n,r,s,o,a){this.separator=ar(e),this.nGramWidths=n,this.leftPad=ar(r),this.rightPad=ar(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const r=this.getPadWidth(n);return Math.max(0,e+2*r-n+1)}createNGrams(e,n,r,s,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),c=Math.max(0,u-i),l=Math.max(0,u-(o-(i+1))),h=a-(c+l),d=n+(c>0?0:i-u);let f=0;f+=c*this.leftPad.length;for(let $=0;$<h;++$)f+=e[d+$].length;f+=l*this.rightPad.length;const m=c+l+h-1;f+=m*this.separator.length,r[s+i]=new Uint8Array(f);const x=r[s+i];let y=0;const b=$=>$.forEach(T=>x[y++]=T);for(let $=0;$<c;++$)b(this.leftPad),b(this.separator);for(let $=0;$<h-1;++$)b(e[d+$]),b(this.separator);if(h>0){b(e[d+h-1]);for(let $=0;$<l;++$)b(this.separator),b(this.rightPad)}else{for(let $=0;$<l-1;++$)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,n){const r=e.length,s=n.length;if(s>0){let u=n[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let l=n[c]>=u;if(l=l&&n[c]<=r,!l)throw new Error(`Invalid split value ${n[c]}, must be in [${u}, ${r}]`);u=n[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=We("int32",s);if(r===0||s===0){const u=new Array(r);for(let c=0;c<=o;++c)a[c]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const c=n[u]-n[u-1];let l=0;this.nGramWidths.forEach(h=>{l+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&l===0&&(l=1),a[u]=a[u-1]+l}const i=new Array(a[o]);for(let u=0;u<o;++u){const c=n[u];let l=a[u];if(this.nGramWidths.forEach(h=>{const d=n[u+1]-n[u],f=this.getNumNGrams(d,h);this.createNGrams(e,c,i,l,f,h),l+=f}),this.preserveShort&&l===a[u]){const h=n[u+1]-n[u];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,c,i,l,1,d)}}return[i,a]}}function JR(t,e,n,r,s,o,a,i){return new ZR(n,r,s,o,a,i).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(t,e,n,r){if(!t.length)return;if(e.length===0){for(let o=0;o<t.length;++o)r.push(t.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=t.indexOf(o);for(;a!==-1;){const i=t.subarray(0,a);(!n||i.length!==0)&&r.push(i),t=t.subarray(a+1),a=t.indexOf(o)}(!n||t.length!==0)&&r.push(t);return}let s=0;for(let o=0;o<t.length+1;o++)if(o===t.length||e.indexOf(t[o])!==-1){const a=t.subarray(s,o);(!n||a.length!==0)&&r.push(a),s=o+1}}function tA(t,e,n){const r=t.length,s=[];let o=0,a=0;const i=new Array(r);for(let d=0;d<r;++d){const f=s.length;eA(t[d],e,n,s);const m=s.length-f;i[d]=m,o+=m,a=Math.max(a,m)}const u=We("int32",o*2),c=new Array(o),l=[r,a];let h=0;for(let d=0;d<r;++d)for(let f=0;f<i[d];++f)u[h*2]=d,u[h*2+1]=f,c[h]=s[h],++h;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(t,e){const n=We("int32",t.length);for(let r=0;r<t.length;++r)n[r]=fb(t[r]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA=dt((t,e)=>t-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=Fe(n,t.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(t.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%t.shape[u];const i=t.locToIndex(a);r.values[s]=t.values[i]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Is=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function Fy(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const i=r-n+1,u=e-n+1,c=Math.log(i),l=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),d=Math.max(n,Math.floor(e-u*l/i+h)),f=Math.min(r,Math.floor(e+(i-u)*l/i+h));Fy(t,e,d,f)}const s=t[e];let o=n,a=r;for(Ns(t,n,e),Is(t[r],s)>0&&Ns(t,n,r);o<a;){for(Ns(t,o,a),o++,a--;Is(t[o],s)<0;)o=o+1;for(;Is(t[a],s)>0;)a=a-1}Is(t[n],s)===0?Ns(t,n,a):(a=a+1,Ns(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function oA(t,e,n,r,s){const o=e[e.length-1],[a,i]=[t.length/o,o],u=Ln(n,a*r),c=Ln("int32",a*r);for(let h=0;h<a;h++){const d=h*i,f=t.subarray(d,d+i);let m=new Array(f.length);f.forEach(($,T)=>m[T]={value:$,index:T}),r<m.length&&(Fy(m,r),m=m.slice(0,r)),s&&m.sort(Is);const x=h*r,y=u.subarray(x,x+r),b=c.subarray(x,x+r);for(let $=0;$<r;$++)y[$]=m[$].value,b[$]=m[$].index}const l=e.slice();return l[l.length-1]=r,[Fe(l,n,u),Fe(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(t,e,n,r){const s=ze(e,n)[0],o=[1,n[0],1];for(let m=0;m<s;m++)o[0]*=n[m];o[1]=n[s];for(let m=s+1;m<n.length;m++)o[2]*=n[m];const a=new Map,i=new Int32Array(n[s]),u=new qr(o,r,t),c=[],l=o[0]===1&&o[2]===1;for(let m=0;m<n[s];m++){let x;if(l)x=t[m].toString();else{const b=[];for(let $=0;$<o[0];$++)for(let T=0;T<o[2];T++)b.push(u.get($,m,T));x=b.join(",")}const y=a.get(x);if(y!=null)i[m]=y;else{const b=a.size;a.set(x,b),i[m]=b,c.push(m)}}const h=o.slice();h[1]=a.size;const d=new qr(h,r);c.forEach((m,x)=>{for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)d.set(u.get(y,m,b),y,x,b)});const f=n.slice();return f[s]=h[1],{outputValues:d.values,outputShape:f,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iA=Object.freeze(Object.defineProperty({__proto__:null,addImpl:oR,bincountImpl:aR,bincountReduceImpl:iR,bitwiseAndImpl:uR,castImpl:sR,ceilImpl:cR,concatImpl:lR,equalImpl:hR,expImpl:dR,expm1Impl:pR,floorDivImpl:mR,floorImpl:fR,gatherNdImpl:gR,gatherV2Impl:yR,greaterEqualImpl:bR,greaterImpl:xR,lessEqualImpl:wR,lessImpl:vR,linSpaceImpl:$R,logImpl:NR,maxImpl:SR,maximumImpl:CR,minimumImpl:TR,multiplyImpl:Dy,negImpl:ER,notEqualImpl:IR,prodImpl:_R,raggedGatherImpl:LR,raggedRangeImpl:BR,raggedTensorToTensorImpl:VR,rangeImpl:MR,rsqrtImpl:UR,scatterImpl:WR,sigmoidImpl:zR,simpleAbsImpl:rR,sliceImpl:GR,sparseFillEmptyRowsImpl:jR,sparseReshapeImpl:HR,sparseSegmentReductionImpl:KR,sqrtImpl:qR,squaredDifferenceImpl:XR,staticRegexReplaceImpl:YR,stridedSliceImpl:QR,stringNGramsImpl:JR,stringSplitImpl:tA,stringToHashBucketFastImpl:nA,subImpl:rA,tileImpl:sA,topKImpl:oA,transposeImpl:kR,uniqueImpl:aA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:uA,bincountImpl:Py,bincountReduceImpl:cA,bitwiseAndImpl:lA,castImpl:hA,ceilImpl:dA,concatImpl:pA,equalImpl:fA,expImpl:mA,expm1Impl:gA,floorImpl:yA,gatherNdImpl:xA,gatherV2Impl:bA,greaterImpl:vA,greaterEqualImpl:wA,lessImpl:$A,lessEqualImpl:NA,linSpaceImpl:SA,logImpl:CA,maxImpl:TA,maximumImpl:EA,minimumImpl:IA,multiplyImpl:kA,negImpl:_A,notEqualImpl:RA,prodImpl:AA,raggedGatherImpl:OA,raggedRangeImpl:DA,raggedTensorToTensorImpl:FA,rangeImpl:PA,rsqrtImpl:LA,scatterImpl:BA,sigmoidImpl:VA,simpleAbsImpl:Ly,sliceImpl:MA,sparseFillEmptyRowsImpl:UA,sparseReshapeImpl:WA,sparseSegmentReductionImpl:By,sqrtImpl:zA,staticRegexReplaceImpl:GA,stridedSliceImpl:jA,stringNGramsImpl:HA,stringSplitImpl:KA,stringToHashBucketFastImpl:qA,subImpl:XA,tileImpl:YA,topKImpl:QA,transposeImpl:rc,uniqueImpl:ZA}=iA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vy(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function ot(t,e){return e===1?[t]:Vy(t,e)}function JA(t,e){if(t===1)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eO{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=tt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=ot("rc",this.rank),r=$e(this.rank),s=this.getOutOfBoundsCondition(n),o=this.getSetup(n),a=this.getOutput(n);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;n.push(o)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let r=this.rank-2;r<this.rank;r++)n+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class My{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${tO(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?tc():ec(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function tO(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?qk(["r","c","d"],"inputShape"):Er(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nO{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,n,r){const s=yh(n,r),o=xh(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=gh(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let i;return s===Ke.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Ke.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Ke.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Ke.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Ke.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,n,r,s){if(this.freeTextures==null)return;const o=yh(r,s),a=xh(n,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=gh(n,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=M().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],l=c&&c.indexOf(e);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function rO(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function gh(t,e,n,r,s){const o=sO(e,r);let a;if(s){const[u,c]=ss(t[0],t[1]);a=u*c}else{const[u,c]=Zs(t[0],t[1]);a=u*c}const i=rO(n,o);return a*i}function sO(t,e){switch(t){case Ke.PACKED_2X2_FLOAT32:return Ay(e);case Ke.PACKED_2X2_FLOAT16:return Oy(e);case Ke.UNPACKED_FLOAT32:return ky(e);case Ke.UNPACKED_FLOAT16:return _y(e);case Ke.PACKED_4X1_UNSIGNED_BYTE:return Ry(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function oO(t){return M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Ke.PACKED_2X2_FLOAT32:Ke.UNPACKED_FLOAT32:t?Ke.PACKED_2X2_FLOAT16:Ke.UNPACKED_FLOAT16}function yh(t,e){if(t===Tt.UPLOAD)return Ke.PACKED_2X2_FLOAT32;if(t===Tt.RENDER||t==null)return oO(e);if(t===Tt.DOWNLOAD||t===Tt.PIXELS)return Ke.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function xh(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hn{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Gt="if (isnan(x)) return x;",aO="return x;",bh="return abs(x);",iO="return (x >= 0.0) ? x : (exp(x) - 1.0);",uO=Gt+`
  return (x < 0.0) ? 0.0 : x;
`,cO=Gt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Rn="return x;",lO="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO="return x;",dO=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,pO=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fO=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mO="return 1.0 / (1.0 + exp(-1.0 * x));";class On{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length);const n=e.length,r=ot("rc",n),s=$e(n),o=JA(n,r),a=r.slice(-2),i=n<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yO=ig,xO=1e-7,bO=1e-4,Eo={};function vO(t){return t in Eo||(Eo[t]={}),Eo[t]}const wO=M().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),$O=600;function NO(){return M().global.screen==null?1024:M().global.screen.height*M().global.screen.width*window.devicePixelRatio*$O/1024/1024}class wa extends Yh{nextDataId(){return wa.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!M().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof mi)n=e;else{const r=en(M().getNumber("WEBGL_VERSION"),e);n=new mi(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=en(M().getNumber("WEBGL_VERSION"));n=new mi(r),this.binaryCache=vO(M().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nO(this.gpgpu),this.numMBBeforeWarning=NO(),this.texData=new O0(this,_n())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,r,s,o,a){const i=this.makeTensorInfo(n,r),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const c=Co(n),l=new hh(c,!1,a),h=this.runWebGLProgram(l,[i],r,[[s,o]]);return h.shape=n,u.texture=null,this.disposeIntermediateTensorInfo(i),h.dataId}write(e,n,r){if((M().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||M().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:r,values:e,usage:Tt.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,r,s,o){if(M().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:n,usage:Tt.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=n;if(a!=null){let d;u?d=new On(i,Rn):d=new hn(i,Rn);const f=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:s}],s),m=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const c=this.activeTimers!=null;let l;c&&(l=Kt());let h;if(s==="complex64"){const d=this.readSync(o.real.dataId),f=this.readSync(o.imag.dataId);h=Hi(d,f)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Kt()-l),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const m=this.pendingRead.get(e);return new Promise(x=>m.push(x))}const n=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=n;if(o!=null){let m;u?m=new On(s,Rn):m=new hn(s,Rn);const x=this.runWebGLProgram(m,[{dataId:e,shape:s,dtype:a}],a),y=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),y}if(r!=null)return this.convertAndCacheOnCPU(e);if(M().getBool("DEBUG")&&!M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&M().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&M().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const m=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(m.texture.texture,...$o(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const m=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),x=m[0],y=m[1];h=Hi(x,y)}else if(c==null)h=this.getValuesFromTexture(e);else{const m=j(s);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,m)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const m=this.gpgpu.gl;Q(m,()=>m.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(m=>m(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&_n().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:i,isPacked:u,texture:c}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let f;u?f=new On(o,Rn):f=new hn(o,Rn);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:i}],i),x=this.readToGPU(m,n);return this.disposeIntermediateTensorInfo(m),x}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,n.customTexShape),h=_n().makeTensorFromTensorInfo(l),d=this.texData.get(l.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const r=n.map(s=>Kr(s));return Fe(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const r=e[n];if(!wk(r))throw M().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:r,isPacked:s}=this.texData.get(e),o=j(n);if(M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),f=this.texData.get(d.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...$o(n)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),m}const a=M().getBool("WEBGL_PACK")&&s===!0,i=a?Co(n):n,u=a?new L_(i):new P_(i),c=this.runWebGLProgram(u,[{shape:i,dtype:r,dataId:e}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=lr(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=lr(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);i.kernelMs=D0(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Kt(),endMs:null}}endTimer(e){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Kt(),e)}async getQueryTime(e){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,n),this.disposeData(r.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:r,texShape:s,usage:o,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(n,s,o,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=wO){return M().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&j(r.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){Yt("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return yO(e.shape,n)}packedUnaryOp(e,n,r){const s=new On(e.shape,n),o=this.compileAndRun(s,[e],r);return _n().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=Ly(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(M().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,bh,e.dtype);const n=new hn(e.shape,bh),r=this.compileAndRun(n,[e]);return _n().makeTensorFromTensorInfo(r)}makeTensorInfo(e,n,r){let s;if(n==="string"&&r!=null&&r.length>0&&sa(r[0])){const o=r.map(a=>ar(a));s=this.write(o,e,n)}else s=this.write(r,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,r){return _n().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,r),this)}unpackTensor(e){const n=new gO(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new eO(e.shape);return this.runWebGLProgram(n,[e],e.dtype,null,!0)}packedReshape(e,n){const r=[Qr(e.shape),...Zr(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[Qr(n),...Zr(n)],a=new My(o,r),i=!0,u=[r],c=this.runWebGLProgram(a,[s],e.dtype,u,i);return{dataId:c.dataId,shape:n,dtype:c.dtype}}decode(e,n){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(n!=null){const d=j(o),f=n[0]*n[1]*4;E(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Co(o);let u;s?u=new F_(i):u=new D_(i);const c=!0,l=[n??$o(i)],h=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,l,c,n);return{dtype:a,shape:o,dataId:h.dataId}}runWebGLProgram(e,n,r,s,o=!1,a){const i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Ms.DENSE){const b=a??$o(e.outputShape);u.texShape=b.map($=>$*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),j(i.shape)===0)return u.values=Ln(i.dtype,0),i;const c=[],l=n.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let $=this.texData.get(b.dataId);if($.texture==null){if(!e.packedInputs&&j(b.shape)<=M().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:$.values};e.packedInputs&&($.isPacked=!0,$.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!$.isPacked!=!!e.packedInputs)b=$.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),$=this.texData.get(b.dataId);else if($.isPacked&&!Qo($.shape,b.shape)){const T=b,C=b.shape;b.shape=$.shape,b=this.packedReshape(b,C),c.push(b),$=this.texData.get(b.dataId),T.shape=C}return{shape:b.shape,texData:$,isUniform:!1}});this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:u,isUniform:!1},d=O_(e,l,h),f=this.getAndSaveBinary(d,()=>R_(this.gpgpu,e,l,h)),m=this.activeTimers!=null;let x;m&&(x=this.startTimer()),M().get("ENGINE_COMPILE_ONLY")||A_(this.gpgpu,f,l,h,s),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),m&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const y=M().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const b=Kt();b-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!M().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,n,r,s,o=!1){return r=r||n[0].dtype,this.runWebGLProgram(e,n,r,s,o)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(M().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=de(()=>{if(!M().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=M().getBool("DEBUG");M().set("DEBUG",!1);const n=this.abs(fe(1e-8)).dataSync()[0];if(M().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?xO:bO}uploadToGPU(e){const n=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:i,isPacked:u}=n;if(a!=null)return;const c=this.activeTimers!=null;let l;c&&(l=Kt());let h=n.texShape;if(h==null&&(h=Vk(r,u),n.texShape=h),o!=null){const d=Co(r);let f,m=h[1],x=h[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!y)&&([m,x]=ss(h[0],h[1])),u?f=new V_(d,y):f=new hh(d,y);const b=y?[x,m]:h,$=this.makeTensorInfo(b,s),T=this.texData.get($.dataId);y?T.usage=Tt.PIXELS:T.usage=Tt.UPLOAD,T.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture($.dataId),m,x,o);const C=[[x,m]],L=this.runWebGLProgram(f,[$],s,C,!0),P=this.texData.get(L.dataId);n.texShape=P.texShape,n.isPacked=P.isPacked,n.usage=P.usage,M().get("ENGINE_COMPILE_ONLY")?this.disposeData(L.dataId):(n.texture=P.texture,n.values=null,this.texData.delete(L.dataId)),this.disposeIntermediateTensorInfo($),c&&(this.uploadWaitMs+=Kt()-l)}else{const d=this.acquireTexture(h,i,s,u);n.texture=d}}convertAndCacheOnCPU(e,n){const r=this.texData.get(e),{dtype:s}=r;return n!=null&&(r.values=SO(n,s)),r.values}acquireTexture(e,n,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*Po(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await eE(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Ny(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:n,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:u}=Iy(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=u}}createTensorFromGPUData(e,n,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:i}=e,u=_n().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(s,n,r,o,a,i);return _n().makeTensorFromDataId(c,n,r,u)}}wa.nextDataId=0;function SO(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let r=0;r<n.length;++r)n[r]=Math.round(t[r]);return n}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */cm()&&Fb("webgl",()=>new wa,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sc=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class vr{constructor(e,n,r){this.variableNames=["A","B"],this.outputShape=ye(n,r),this.enableShapeUniforms=tt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class cs{constructor(e,n,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ye(n,r);const o=this.outputShape.length;this.enableShapeUniforms=tt(o);let a="";if(s)if(o===0||j(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${$e(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=ot("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const CO={kernelName:xu,backendName:"webgl",kernelFunc:wt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(o.dataId),i=wt({inputs:{x:r},backend:n}),u=wt({inputs:{x:s},backend:n});return a.complexTensorInfos={real:i,imag:u},o}const TO={kernelName:Nd,backendName:"webgl",kernelFunc:Gn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uy="return (a < 0.) ? b * a : a;",Wy=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function EO(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r,a=n.makeTensorInfo([],"float32",ts(o,"float32")),i=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cs(Wy,s.shape,a.shape):new vr(Uy,s.shape,a.shape),u=n.runWebGLProgram(i,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),u}const IO={kernelName:dp,backendName:"webgl",kernelFunc:EO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zy="return (a < 0.) ? b * a : a;",Gy=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function kO(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cs(Gy,r.shape,s.shape):new vr(zy,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],"float32")}const _O={kernelName:Gp,backendName:"webgl",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls="if (isnan(x)) return x;";function ge({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&n!=null){const h=i.texData.get(a.dataId),d=n(h.values,u);return i.makeTensorInfo(a.shape,u,d)}const c=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return c?l=new On(a.shape,e):l=new hn(a.shape,t),i.runWebGLProgram(l,[a],u)}}function Qe({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:c}=a,l=i;if(r&&u.dtype==="complex64"){const m=l.texData.get(u.dataId),x=l.texData.get(c.dataId),[y,b]=[[m.complexTensorInfos.real,x.complexTensorInfos.real],[m.complexTensorInfos.imag,x.complexTensorInfos.imag]].map(T=>{const[C,R]=T,L={dataId:C.dataId,dtype:C.dtype,shape:u.shape},P={dataId:R.dataId,dtype:R.dtype,shape:c.shape},O=new vr(t,u.shape,c.shape);return l.runWebGLProgram(O,[L,P],fn(C.dtype,R.dtype))}),$=Gn({inputs:{real:y,imag:b},backend:l});return l.disposeIntermediateTensorInfo(y),l.disposeIntermediateTensorInfo(b),$}const h=o||fn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&s!=null){const m=l.texData.get(u.dataId).values,x=l.texData.get(c.dataId).values,y=u.dtype==="string"?Yr(m):m,b=u.dtype==="string"?Yr(x):x,[$,T]=s(u.shape,c.shape,y,b,h),C=l.makeTensorInfo(T,h),R=l.texData.get(C.dataId);return R.values=$,C}const d=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return d?f=new cs(e,u.shape,c.shape,n):f=new vr(t,u.shape,c.shape),l.runWebGLProgram(f,[u,c],h)}}function Us(t,e=!1){if(t==="linear")return e?hO:aO;if(t==="relu")return e?pO:uO;if(t==="elu")return e?dO:iO;if(t==="relu6")return e?fO:cO;if(t==="prelu")return e?Gy:zy;if(t==="leakyrelu")return e?Wy:Uy;if(t==="sigmoid")return e?mO:lO;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jy{constructor(e,n,r,s=!1,o=!1,a=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=tt(this.outputShape.length);const l=s?e[1]:e[2],h=Math.ceil(l/2),d=s?"i * 2, rc.y":"rc.y, i * 2",f=o?"rc.z, i * 2":"i * 2, rc.z",m=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",b="";i&&(u?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:y=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");const $=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let T="rc.x",C="rc.x";e[0]<n[0]?T=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(C=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${T};
        int batchB = ${C};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${x[0]});
          result += (${m[1]} * ${x[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${$}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vh={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class wh{constructor(e,n,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ye(n,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $h="return a * b;";function oc(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,o=fn(r.dtype,s.dtype);if(r.dtype==="complex64"){const i=n.texData.get(r.dataId),u=n.texData.get(s.dataId),c=new wh(vh.REAL,r.shape,s.shape),l=new wh(vh.IMAG,r.shape,s.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],d=n.runWebGLProgram(c,h,"float32"),f=n.runWebGLProgram(l,h,"float32"),m=Gn({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}if(n.shouldExecuteOnCPU([r,s])){const i=n.texData.get(r.dataId),u=n.texData.get(s.dataId),[c,l]=kA(r.shape,s.shape,i.values,u.values,o),h=n.makeTensorInfo(l,o),d=n.texData.get(h.dataId);return d.values=c,h}let a;return M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new cs($h,r.shape,s.shape):a=new vr($h,r.shape,s.shape),n.runWebGLProgram(a,[r,s],o)}const RO={kernelName:Op,backendName:"webgl",kernelFunc:oc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(t,e,n){const r=[Qr(t.shape),...Zr(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},o=[Qr(e),...Zr(e)],a=new My(o,r),i=!0,u=[r],c=n.runWebGLProgram(a,[s],t.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:o}=r,a=n,i=j(s.shape),u=P0(o,i),c=j(u);E(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(s.dataId);return l.isPacked&&!Qo(s.shape,u)&&!(l.texture!==null&&Qo(l.shape,u))?AO(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const OO={kernelName:Jp,backendName:"webgl",kernelFunc:q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nh{constructor(e,n){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const i=Math.floor(r/4)*4,u=r%4;let c="sumValue += dot(values, ones);";if(n!=null){const h=1/n;c=`sumValue += dot(values * ${jr(h)?h.toPrecision(2):h}, ones);`}let l="";o%r>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DO{constructor(e,n){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let i="0.0",u="";n==="prod"?i="1.0":n==="min"?(i="1.0 / 1e-20",u="min"):n==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?c="sumValue":n==="prod"?c="prodValue":n==="all"?c="allValue":n==="any"&&(c="anyValue");const l=Math.floor(r/4)*4,h=r%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";n==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):n==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let m="";o%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],r=ba(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}function _r(t,e,n,r){const s=FO(t.shape);let o=t;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:c}=s[a];let l,h;n==="mean"?l=a===0?new Nh({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:c},i):new Nh({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:c}):l=new DO({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:c},n),h=o,o=r.runWebGLProgram(l,[o],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PO{constructor(e,n){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[n[a]];this.outputShape=r,this.rank=r.length;const s=$e(this.rank),o=LO(n);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function LO(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BO{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let l=0;l<r.length;l++)r[l]=e[n[l]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=$e(this.rank),o=Vy("rc",this.rank),a=new Array(this.rank);for(let l=0;l<n.length;l++)a[n[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $a(t,e,n){const r=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BO(t.shape,e):new PO(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(t,e,n,r){const s=e,o=t.shape.length,a=ze(s,t.shape);let i=a;const u=Wt(i,o),c=u!=null;let l=t;c&&(l=$a(t,u,r),i=zt(i.length,o)),rn("sum",i,o);const[h,d]=mn(l.shape,i);let f=h;n&&(f=Rt(h,a));const m=j(d),y=j(t.shape)/m,b=q({inputs:{x:l},attrs:{shape:[y,m]},backend:r}),$=wu(t.dtype),T=_r(b,$,"sum",r),C=q({inputs:{x:T},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(T),c&&r.disposeIntermediateTensorInfo(l),C}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;return VO(s,o,a,n)}const MO={kernelName:bf,backendName:"webgl",kernelFunc:Na};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:o}=r,a=n,i=s.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=s.shape[o[l]];let c;if(a.shouldExecuteOnCPU([s])){const h=a.texData.get(s.dataId).values,d=rc(h,s.shape,s.dtype,o,u);c=a.makeTensorInfo(u,s.dtype);const f=a.texData.get(c.dataId);f.values=d}else c=$a(s,o,a);return c}const UO={kernelName:_o,backendName:"webgl",kernelFunc:at};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hy=1e3;function Jo({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const c=t.shape.length,l=e.shape.length,h=n?t.shape[c-2]:t.shape[c-1],d=r?e.shape[l-1]:e.shape[l-2],f=n?t.shape[c-1]:t.shape[c-2],m=r?e.shape[l-2]:e.shape[l-1],x=t.shape.slice(0,-2),y=e.shape.slice(0,-2),b=j(x),$=j(y),C=ye(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,m]);E(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const R=n?[b,h,f]:[b,f,h],L=r?[$,m,d]:[$,d,m],P=q({inputs:{x:t},backend:s,attrs:{shape:R}}),O=q({inputs:{x:e},backend:s,attrs:{shape:L}}),B=[P,O],V=Math.max(b,$),U=n?P.shape[1]:P.shape[2],K=o!=null,ee=a!=null,ne=u==="leakyrelu",se=u!=null?Us(u,!0):null,J=K||ee||ne||se!=null;let me;if((f===1||m===1)&&U>Hy&&J===!1){let Ne=P,St=O;n&&(Ne=at({inputs:{x:P},backend:s,attrs:{perm:[0,2,1]}}),B.push(Ne)),r&&(St=at({inputs:{x:O},backend:s,attrs:{perm:[0,2,1]}}),B.push(St));const ut=m!==1,pt=m===1;let jn=Ne;ut&&(jn=q({inputs:{x:Ne},backend:s,attrs:{shape:[V,U,1]}}),B.push(jn));const ro=m===1?2:1;let Rr=St;pt&&(Rr=q({inputs:{x:St},backend:s,attrs:{shape:[V,1,U]}}),B.push(Rr));const fs=oc({inputs:{a:jn,b:Rr},backend:s});me=Na({inputs:{x:fs},backend:s,attrs:{axis:ro,keepDims:!0}}),B.push(fs)}else{const Ne=fn(t.dtype,e.dtype),St=new jy(R,L,[V,f,m],n,r,K,se,ee,ne),ut=[P,O];if(o!=null&&ut.push(o),ee&&ut.push(a),ne){const pt=s.makeTensorInfo([],"float32",ts(i,"float32"));ut.push(pt),B.push(pt)}me=s.runWebGLProgram(St,ut,Ne)}const be=q({inputs:{x:me},backend:s,attrs:{shape:C}});B.push(me);for(const Ne of B)s.disposeIntermediateTensorInfo(Ne);return be}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;return Jo({a:s,b:o,transposeA:u,transposeB:c,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:l})}const zO={kernelName:Ci,backendName:"webgl",kernelFunc:WO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sh="return abs(x);";function GO(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=n.texData.get(r.dataId),a=Ly(o.values);return n.makeTensorInfo(r.shape,r.dtype,a)}let s;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new On(r.shape,Sh):s=new hn(r.shape,Sh),n.runWebGLProgram(s,[r],r.dtype)}const jO={kernelName:td,backendName:"webgl",kernelFunc:GO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HO=Gt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,KO=ge({opSnippet:HO}),qO={kernelName:nd,backendName:"webgl",kernelFunc:KO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XO=Gt+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,YO=ge({opSnippet:XO}),QO={kernelName:rd,backendName:"webgl",kernelFunc:YO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ch="return a + b;",ZO=Qe({opSnippet:Ch,packedOpSnippet:Ch,supportsComplex:!0,cpuKernelImpl:uA}),JO={kernelName:gu,backendName:"webgl",kernelFunc:ZO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eD{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tD{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Do(t){const{inputs:e,backend:n}=t,r=e;if(r.length===1)return wt({inputs:{x:r[0]},backend:n});if(r.length>M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),c=Do({inputs:r.slice(0,u),backend:n}),l=Do({inputs:r.slice(u),backend:n});return Do({inputs:[c,l],backend:n})}const s=r.map(u=>u.dtype).reduce((u,c)=>fn(u,c)),o=r.map(u=>u.shape),i=M().getBool("WEBGL_PACK")?new tD(r[0].shape,o):new eD(r[0].shape,o);return n.runWebGLProgram(i,r,s)}const nD={kernelName:sd,backendName:"webgl",kernelFunc:Do};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=ze(o,s.shape);let c=u;const l=Wt(c,i);let h=s;l!=null&&(h=at({inputs:{x:s},backend:n,attrs:{perm:l}}),c=zt(c.length,i)),rn("all",c,i);const[d,f]=mn(h.shape,c),m=j(f),x=q({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),y=_r(x,x.dtype,"all",n);let b;if(a){const $=Rt(d,u);b=q({inputs:{x:y},backend:n,attrs:{shape:$}})}else b=q({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y),l!=null&&n.disposeIntermediateTensorInfo(h),b}const sD={kernelName:od,backendName:"webgl",kernelFunc:rD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=ze(o,s.shape);let c=u;const l=Wt(c,i);let h=s;l!=null&&(h=at({inputs:{x:s},backend:n,attrs:{perm:l}}),c=zt(c.length,i)),rn("any",c,i);const[d,f]=mn(h.shape,c),m=j(f),x=q({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),y=_r(x,x.dtype,"any",n);let b;if(a){const $=Rt(d,u);b=q({inputs:{x:y},backend:n,attrs:{shape:$}})}else b=q({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y),l!=null&&n.disposeIntermediateTensorInfo(h),b}const aD={kernelName:ad,backendName:"webgl",kernelFunc:oD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iD{constructor(e,n,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=n==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uD{constructor(e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,E(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/n);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=$e(u),l=ot("coords",u);let h,d;if(a===1){d=u+1;const O=$e(d);h=`
        ${O} sourceLocR = ${O}(${l.join()}, 0);
        ++${l[u-1]};
        ${O} sourceLocG = ${O}(${l.join()}, 0);
        ++${l[u-2]};
        ${O} sourceLocA = ${O}(${l.join()}, 0);
        --${l[u-1]};
        ${O} sourceLocB = ${O}(${l.join()}, 0);
        --${l[u-2]};`}else d=u,h=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),m="."+f[d-1],x=f.map(O=>"int "+O),y=ot("sourceLocR",d-1).concat("inIdx.r"),b=ot("sourceLocG",d-1).concat("inIdx.g"),$=ot("sourceLocB",d-1).concat("inIdx.b"),T=ot("sourceLocA",d-1).concat("inIdx.a"),C=r==="max"?"greaterThan":"lessThan",R=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${T.join()})));`,L=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${$.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,P=s?"":`
      float getBestIndicesAChannel(${x.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${x.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${P}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${L};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${R}
          vec4 candidate = ${L};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ky(t,e,n,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=ba(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new iD(i,n,r==null),c=[e];r!=null&&c.push(r);const l=t.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const h=Ky(t,e,n,l);return t.disposeIntermediateTensorInfo(l),h}function qy(t,e,n,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=ba(o),i=new uD(s,a,n,r==null),u=r==null?[e]:[e,r],c=t.runWebGLProgram(i,u,"int32");if(c.shape.length===e.shape.length){const l=qy(t,e,n,c);return t.disposeIntermediateTensorInfo(c),l}return c}function Xy(t,e,n,r){const s=[n];if(rn("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!M().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=t.texData.get(e.dataId),i=a!==null&&a.isPacked;let u=e;i&&(u=t.unpackTensor(e),o.push(u));const[c,l]=mn(u.shape,s),h=j(l),d=q({inputs:{x:u},backend:t,attrs:{shape:[-1,h]}});o.push(d);const f=Ky(t,d,r);o.push(f);const m=q({inputs:{x:f},backend:t,attrs:{shape:c}});return o.forEach(x=>t.disposeIntermediateTensorInfo(x)),m}return qy(t,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=ze(o,s.shape);const i=Wt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=at({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),a=zt(a.length,u.shape.length)),rn("argMax",[a[0]],u.shape.length);const l=Xy(n,u,a[0],"max");return c.forEach(h=>n.disposeIntermediateTensorInfo(h)),l}const lD={kernelName:id,backendName:"webgl",kernelFunc:cD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=ze(o,s.shape);const i=Wt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=at({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),a=zt(a.length,u.shape.length)),rn("argMin",[a[0]],u.shape.length);const l=Xy(n,u,a[0],"min");return c.forEach(h=>n.disposeIntermediateTensorInfo(h)),l}const dD={kernelName:ud,backendName:"webgl",kernelFunc:hD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pD=Gt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,fD=ge({opSnippet:pD}),mD={kernelName:cd,backendName:"webgl",kernelFunc:fD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gD=Gt+"return log(x + sqrt(x * x + 1.0));",yD=ge({opSnippet:gD}),xD={kernelName:ld,backendName:"webgl",kernelFunc:yD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bD=Gt+`
  return atan(x);
`,vD=ge({opSnippet:bD}),wD={kernelName:hd,backendName:"webgl",kernelFunc:vD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $D=sc+`
  return atan(a, b);
`,ND=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+kr+`
  return result;
`,SD=Qe({opSnippet:$D,packedOpSnippet:ND}),CD={kernelName:pd,backendName:"webgl",kernelFunc:SD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TD=Gt+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,ED=ge({opSnippet:TD}),ID={kernelName:dd,backendName:"webgl",kernelFunc:ED};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ws{constructor(e,n,r,s=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const x=n==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let $="0.0";if(x||($="-1.0 / 1e-20"),r){const O=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${f}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${O} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?y:b:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const T="max";let C=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(C="avgValue / max(count, 1.0)");const R=Math.floor(a/4)*4,L=a%4,P=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${f}, ${m});
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${$});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${R}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${P}
          }

          int xC = xCCorner + ${R};
          if (${L===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${P}
          } else if (${L===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${P}
          } else if (${L===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${P}
          }
        }
        setOutput(${C});
      }
    `}}class ac{constructor(e,n,r,s=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterDepth,m=e.effectiveFilterHeight,x=e.effectiveFilterWidth,y=e.padInfo.front,b=e.padInfo.top,$=e.padInfo.left;this.outputShape=e.outShape;const T=n==="avg";let C="0.0";if(T||(C="-1.0 / 1e-20"),r){const V=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${y}, ${b}, ${$});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${x};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${V} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${x} +
                      wR * ${x} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const R="max";let L=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(L="avgValue / max(count, 1.0)");const P=Math.floor(a/4)*4,O=a%4,B=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${R}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${y}, ${b}, ${$});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${P}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${B}
            }

            int xC = xCCorner + ${P};
            if (${O===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${B}
            } else if (${O===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${B}
            } else if (${O===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${B}
            }
          }
        }
        setOutput(${L});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Js(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;E(Nt(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Nr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&De(l.inShape,l.outShape))return wt({inputs:{x:s},backend:n});const h=new Ws(l,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}const _D={kernelName:fd,backendName:"webgl",kernelFunc:kD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],h=qs(s.shape,o,a,l,i,u,c),d=new ac(h,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}const AD={kernelName:md,backendName:"webgl",kernelFunc:RD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=u-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(n*r);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class DD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=h-1-e.padInfo.front,x=d-1-e.padInfo.top,y=f-1-e.padInfo.left,b=1/(n*r*s);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${x}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=qs(a.shape,i,u,h,c,l),f=new DD(d);return n.runWebGLProgram(f,[s],a.dtype)}const PD={kernelName:Y0,backendName:"webgl",kernelFunc:FD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o;Js([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=Nr(a.shape,i,u,1,c),h=new OD(l);return n.runWebGLProgram(h,[s],a.dtype)}const BD={kernelName:X0,backendName:"webgl",kernelFunc:LD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return Jo({a:s,b:o,transposeA:a,transposeB:i,backend:n})}const MD={kernelName:gd,backendName:"webgl",kernelFunc:VD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UD{constructor(e,n,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ye(e,n),ye(e,r);let i="0.0";s!=null&&(ye(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&(ye(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WD{constructor(e,n,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ye(e,n),ye(e,r);let i="vec4(0.0)";s!=null&&(ye(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(ye(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zD=({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=t;E(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);const c=[r,s,o];let l=null;a!=null&&(l=a.shape,c.push(a));let h=null;i!=null&&(h=i.shape,c.push(i));const d=M().getBool("WEBGL_PACK_NORMALIZATION")?new WD(r.shape,s.shape,o.shape,l,h,u):new UD(r.shape,s.shape,o.shape,l,h,u);return e.runWebGLProgram(d,c,c[0].dtype)},GD={kernelName:np,backendName:"webgl",kernelFunc:zD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jD{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=$e(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=HD(this.rank);let s;const o=e.map((a,i)=>`sourceLoc.${au[i]} = start[${i}] + coords.${au[i]};`);s=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const au=["x","y","z","w","u","v"];function HD(t){if(t===1)return"sourceLoc";if(t<=6)return au.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KD{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=$e(this.rank),r=ot("coords",this.rank),s=ot("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((l,h)=>`start[${h}]`).join()});`:e.map((l,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(t,e,n,r){const s=r.texData.get(t.dataId),o=r.makeTensorInfo(n,t.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=t.dtype;let i=Ku(e,qe(t.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||t.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function hs(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:a}=r,[i,u]=Og(s,o,a);if(Ng(s,i,u),j(u)===0)return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||s.dtype==="string"){const h=n.texData.get(s.dataId),d=MA(h.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,d)}const{isPacked:c}=n.texData.get(s.dataId),l=Hu(s.shape,i,u);if(c||!l){const h=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KD(u):new jD(u),d=[i];return n.runWebGLProgram(h,[s],s.dtype,d)}return n.uploadToGPU(s.dataId),qD(s,i,u,n)}const XD={kernelName:df,backendName:"webgl",kernelFunc:hs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YD=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:a}=r;E(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce(($,T)=>$*T),u=Xu(s.shape,o,i),c=Yu(u.length,o.length),l=Qu(s.shape,o,i),h=Ug(a,o.length),d=Wg(l,a,o.length),f=[],m=q({inputs:{x:s},backend:n,attrs:{shape:u}}),x=at({inputs:{x:m},backend:n,attrs:{perm:c}}),y=q({inputs:{x},backend:n,attrs:{shape:l}}),b=hs({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return f.push(m),f.push(x),f.push(y),f.forEach($=>n.disposeIntermediateTensorInfo($)),b},QD={kernelName:yd,backendName:"webgl",kernelFunc:YD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a}=r,i=n.readSync(s.dataId),u=n.readSync(o.dataId),c=Py(i,u,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,c)}const JD={kernelName:xd,backendName:"webgl",kernelFunc:ZD};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eF=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,tF=`
  return float(int(a.r) & int(b.r));
`;function nF(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=M().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||a===1){const u=n.texData.get(r.dataId).values,c=n.texData.get(s.dataId).values,[l,h]=lA(r.shape,s.shape,u,c,r.dtype),d=n.makeTensorInfo(h,r.dtype),f=n.texData.get(d.dataId);return f.values=l,d}let i;return o?i=new cs(eF,r.shape,s.shape,!1):i=new vr(tF,r.shape,s.shape),n.runWebGLProgram(i,[r,s],r.dtype)}const rF={kernelName:bd,backendName:"webgl",kernelFunc:nF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,o=n.readSync(r.dataId),a=n.readSync(s.dataId),i=ye(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const oF={kernelName:vd,backendName:"webgl",kernelFunc:sF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF="return float(a != b);",Yy=Qe({opSnippet:aF,cpuKernelImpl:RA,dtype:"bool"}),iF={kernelName:Fp,backendName:"webgl",kernelFunc:Yy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.texData.get(r.dataId);return wt({inputs:{x:s.complexTensorInfos.real},backend:n})}const uF={kernelName:Yp,backendName:"webgl",kernelFunc:to};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cF="return float(int(x));";function lF(t,e){const n=new hn(t.shape,cF),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iu(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return wt({inputs:{x:s},backend:n});const a=mr(s.shape),i=iu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=Gn({inputs:{real:i,imag:a},backend:n});return a.dispose(),n.disposeIntermediateTensorInfo(i),u}if(s.dtype==="complex64"){const a=to({inputs:{input:s},backend:n}),i=iu({inputs:{x:a},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(a),i}if(!V0(s.dtype,o)){const a=wt({inputs:{x:s},backend:n});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(n.shouldExecuteOnCPU([s])){const a=n.texData.get(s.dataId).values,[i,u,c]=hA(a,s.shape,s.dtype,o);return n.makeTensorInfo(i,u,c)}if(o==="int32")return lF(s,n);if(o==="bool"){const a=n.makeTensorInfo([],"bool",Ln("bool",1)),u=Yy({inputs:{a:s,b:a},backend:n});return n.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const hF={kernelName:yu,backendName:"webgl",kernelFunc:iu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Th="return ceil(x);",dF=ge({opSnippet:Th,packedOpSnippet:Th,cpuKernelImpl:dA}),pF={kernelName:wd,backendName:"webgl",kernelFunc:dF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fF{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;M().getBool("WEBGL_PACK_CLIP")?i=new mF(s.shape):i=new fF(s.shape);const u=[[o],[a]];return n.runWebGLProgram(i,[s],s.dtype,u)}const yF={kernelName:$d,backendName:"webgl",kernelFunc:gF};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xF{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eh(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function bF(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),o=new xF(r.shape),a=[Eh(r,s.complexTensorInfos.real),Eh(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(o,a,a[0].dtype)}const vF={kernelName:Sd,backendName:"webgl",kernelFunc:bF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wF{constructor(e){this.outputShape=[],this.outputShape=xr(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let a=1;a<n.length;a++)n[a]=n[a-1]+e[a][1];const r=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<n.length;a++){const i=n[a-1];r.push(`else if (yC < ${n[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const s=n.length,o=n[n.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $F{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=xr(e,n);const r=this.outputShape,s=r.length,o=$e(s),a=ot("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((x,y)=>`T${y}`);const u=new Array(e.length-1);u[0]=e[0][n];for(let x=1;x<u.length;x++)u[x]=u[x-1]+e[x][n];const c=i[n],l=i.slice(-2),h=i.join();let d=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${l.join()}));
        }`;for(let x=1;x<u.length;x++){const y=u[x-1];d+=`
        if (${c} < ${u[x]}  && ${c} >= ${u[x-1]}) {
          return getChannel(
            getT${x}(${Io(i,c,y)}),
            vec2(${Io(l,c,y)}));
        }`}const f=u.length,m=u[u.length-1];d+=`
        return getChannel(
          getT${f}(${Io(i,c,m)}),
          vec2(${Io(l,c,m)}));`,this.userCode=`
      float getValue(${i.map(x=>"int "+x)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Io(t,e,n){const r=t.indexOf(e);return t.map((o,a)=>a===r?`${o} - ${n}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sa(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.texData.get(r.dataId);return wt({inputs:{x:s.complexTensorInfos.imag},backend:n})}const NF={kernelName:up,backendName:"webgl",kernelFunc:Sa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(t,e,n){const r=t[0].dtype;if(r==="complex64"){const f=t.map($=>to({inputs:{input:$},backend:n})),m=t.map($=>Sa({inputs:{input:$},backend:n})),x=ks(f,e,n),y=ks(m,e,n),b=Gn({inputs:{real:x,imag:y},backend:n});return f.forEach($=>n.disposeIntermediateTensorInfo($)),m.forEach($=>n.disposeIntermediateTensorInfo($)),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y),b}let s=n.shouldExecuteOnCPU(t);if(r==="string"&&(s=!0),s){const f=t.map(C=>{const L=[-1,j(C.shape.slice(e))];return q({inputs:{x:C},backend:n,attrs:{shape:L}})}),m=f.map(C=>({vals:n.readSync(C.dataId),shape:C.shape})),x=xr(f.map(C=>C.shape),1),y=f[0].shape[0]===1,b=pA(m,x,r,y),$=xr(t.map(C=>C.shape),e),T=n.makeTensorInfo($,r,b);return f.forEach(C=>n.disposeIntermediateTensorInfo(C)),T}const o=t.filter(f=>j(f.shape)>0),a=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const f=a?new hn(t[0].shape,Rn):new On(t[0].shape,Rn);return n.runWebGLProgram(f,t,r)}const i=M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const f=[];for(let x=0;x<o.length;x+=i){const y=o.slice(x,x+i);f.push(ks(y,e,n))}const m=ks(f,e,n);for(const x of f)n.disposeIntermediateTensorInfo(x);return m}if(a){const f=new $F(o.map(m=>m.shape),e);return n.runWebGLProgram(f,o,r)}const{tensors2D:u,outShape:c}=SF(o,e,n),l=new wF(u.map(f=>f.shape)),h=n.runWebGLProgram(l,u,r);u.forEach(f=>n.disposeIntermediateTensorInfo(f));const d=q({inputs:{x:h},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(h),d}function SF(t,e,n){const r=xr(t.map(o=>o.shape),e);return{tensors2D:t.map(o=>q({inputs:{x:o},attrs:{shape:[-1,j(o.shape.slice(e))]},backend:n})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qy(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=ze(s,e[0].shape)[0],a=e.map(c=>c.shape);Fg(a,o);const i=xr(e.map(c=>c.shape),o);if(j(i)===0)return n.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(c=>j(c.shape)>0);return u.length===1?wt({inputs:{x:u[0]},backend:n}):ks(u,o,n)}const CF={kernelName:Cd,backendName:"webgl",kernelFunc:Qy};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zy{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=Math.floor(e.inChannels/4)*4,x=e.inChannels%4,y=e.dataFormat==="channelsLast",b=y?1:2,$=y?2:3,T=y?3:1;let C="",R="";r&&(s?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:C=`
          float activation(float x) {
            ${r}
          }
        `,R="result = activation(result);");const L=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${$}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${x===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${x===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${x===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${L}
        ${R}
        setOutput(result);
      }
    `}}class TF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,f=e.filterWidth,m=Math.floor(e.inChannels/4)*4,x=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${n}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${x===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${x===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${x===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jy{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tt(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,h=l;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<l;y++)d+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<l;y++)d+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const b=y*2;if(d+=`
           xC = xCCorner + ${b*u};
           `,i===1){if(b<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?d+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){const $=a%2===0?pu(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${$};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:d+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):$===1?d+=`
                     xC${b+1} = xTexelC${b};
                     `:d+=`
                     xCOffset = xC + ${$};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(d+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(d+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(d+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",m="";r&&(s?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:f=`vec4 activation(vec4 x) {
           ${r}
         }`,m="result = activation(result);");const x=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${x}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EF{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=tt(this.outputShape.length);const{dataFormat:r}=n,s=it(),o=r==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function ex({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=t.shape,c=r.texData.get(t.dataId),l=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,f=n.dataFormat==="channelsLast",m=!1,x=!1;let y;const b=[];if(o!=null){const C=ea(o.shape,f);C!=null&&(o=q({inputs:{x:o},backend:r,attrs:{shape:C}}),b.push(o))}if(s!=null){const C=ea(s.shape,f);C!=null&&(s=q({inputs:{x:s},backend:r,attrs:{shape:C}}),b.push(s))}if(!((h===1||d===1)&&l>Hy)&&c.isPacked&&f&&c.texture!=null&&u[2]%2!==0&&De(c.shape.slice(-3),u.slice(-3))){const C=u[0]*u[1]*(u[2]+1),R={dataId:t.dataId,shape:[1,C,n.inChannels],dtype:t.dtype},L=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,E(Qo(c.shape,R.shape),()=>`packed reshape ${c.shape} to ${R.shape} isn't free`);const P=q({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(P);const O=Jo({a:R,b:P,backend:r,transposeA:m,transposeB:x,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),B=r.texData.get(O.dataId);E(B.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=L,B.shape=n.outShape,y=wt({inputs:{x:O},backend:r}),y.shape=n.outShape,b.push(O)}else{const C=n.outHeight*n.outWidth,R=q({inputs:{x:t},backend:r,attrs:{shape:f?[n.batchSize,C,n.inChannels]:[n.batchSize,n.inChannels,C]}}),L=q({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),P=Jo({a:f?R:L,b:f?L:R,transposeA:!f,transposeB:x,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});y=q({inputs:{x:P},backend:r,attrs:{shape:n.outShape}}),b.push(R),b.push(L),b.push(P)}for(const C of b)r.disposeIntermediateTensorInfo(C);return y}function tx({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:h,outHeight:d,dataFormat:f}=n,m=f==="channelsLast",x=u*c*l,y=d*h,b=[n.batchSize,x,y],$=!0,T=!1,C=[];if(o!=null){const be=ea(o.shape,m);be!=null&&(o=q({inputs:{x:o},backend:r,attrs:{shape:be}}),C.push(o))}if(s!=null){const be=ea(s.shape,m);be!=null&&(s=q({inputs:{x:s},backend:r,attrs:{shape:be}}),C.push(s))}const R=q({inputs:{x:e},backend:r,attrs:{shape:[1,x,j(e.shape)/x]}});C.push(R);const L=new EF(b,n),P=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],O=r.runWebGLProgram(L,[t],"float32",P),B=q({inputs:{x:O},backend:r,attrs:{shape:b}});C.push(O),C.push(B);const V=s!=null,U=o!=null,K=i==="leakyrelu",ee=i?Us(i,!0):null,ne=new jy(m?B.shape:R.shape,m?R.shape:B.shape,m?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],$,T,V,ee,U,K),se=m?[B,R]:[R,B];if(s&&se.push(s),U&&se.push(o),K){const be=r.makeTensorInfo([],"float32",ts(a,"float32"));se.push(be),C.push(be)}const J=r.runWebGLProgram(ne,se,"float32"),me=q({inputs:{x:J},backend:r,attrs:{shape:n.outShape}});C.push(J);for(const be of C)r.disposeIntermediateTensorInfo(be);return me}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,h=ns(u),d=_t(s.shape,o.shape,a,c,i,l,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=ex({x:s,filter:o,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const x=new Jy(d),y=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=n.runWebGLProgram(x,[s,o],"float32",y)}else if(M().getBool("WEBGL_CONV_IM2COL"))f=tx({x:s,filter:o,convInfo:d,backend:n});else{const x=new Zy(d);f=n.runWebGLProgram(x,[s,o],"float32")}const m=q({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}const kF={kernelName:Td,backendName:"webgl",kernelFunc:IF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _F{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class RF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=n-1-e.padInfo.top,u=r-1-e.padInfo.left,c=a?1:2,l=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class AF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class OF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=n-1-e.padInfo.front,c=r-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,h=ns(u),d=_t(s.shape,l,a,1,i,c,!1,h),f=new _F(d);return n.runWebGLProgram(f,[s,o],"float32")}const FF={kernelName:Ed,backendName:"webgl",kernelFunc:DF};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PF{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=tt(this.outputShape.length);const n=e.filterHeight,r=e.filterWidth,s=n-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,h=ns(c),d=_t(a,o.shape,i,1,u,l,!1,h);if(M().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const f=[[d.strideHeight,d.strideWidth]],m=new PF(d);return n.runWebGLProgram(m,[s,o],"float32",f)}else{const f=new RF(d);return n.runWebGLProgram(f,[s,o],"float32")}}const BF={kernelName:Id,backendName:"webgl",kernelFunc:LF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=Xs(s.shape,o.shape,a,u,i),l=new TF(c);return n.runWebGLProgram(l,[s,o],"float32")}const MF={kernelName:kd,backendName:"webgl",kernelFunc:VF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,c=Xs(s.shape,u,a,1,i),l=new AF(c);return n.runWebGLProgram(l,[s,o],"float32")}const WF={kernelName:Q0,backendName:"webgl",kernelFunc:UF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,c=Xs(u,o.shape,i,1,a),l=new OF(c);return n.runWebGLProgram(l,[s,o],"float32")}const GF={kernelName:_d,backendName:"webgl",kernelFunc:zF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jF=ls+`
  return cos(x);
`,HF=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${kr}
  return result;
`,KF=ge({opSnippet:jF,packedOpSnippet:HF}),qF={kernelName:Rd,backendName:"webgl",kernelFunc:KF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XF=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,YF=ge({opSnippet:XF}),QF={kernelName:Ad,backendName:"webgl",kernelFunc:YF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZF{constructor(e,n,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,c]=e,[l]=n,[h,d]=r;this.outputShape=[l,h,d,c];const f=s==="bilinear"?1:0,[m,x]=[`${i-1}.0`,`${u-1}.0`],[y,b,$]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[T,C,R]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${x} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${x}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${C};

        float in_y = ${$};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${R};
        if( in_x < 0.0 || in_x > ${x} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF=t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,l=new ZF(s.shape,o.shape,i,u,c);return n.runWebGLProgram(l,[s,o,a],"float32")},eP={kernelName:Fd,backendName:"webgl",kernelFunc:JF};var zs;(function(t){t.Prod="*",t.Sum="+"})(zs||(zs={}));class Ih{constructor(e,n,r,s){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===zs.Prod?"1.0":"0.0",i=r?a:`getX(${kh(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";r?(c=s?`end != ${u-1}`:"end != 0",l=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${$e(o)} coords = getOutputCoords();
        int end = ${_h(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${_h(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${kh(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function kh(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function _h(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nx(t,e,n,r,s,o){const a=e.shape.length,i=Wt([r],a);let u=e;i!=null&&(u=at({inputs:{x:e},backend:n,attrs:{perm:i}}));const c=zt(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const l=u.shape[c];let h=wt({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const f=new Ih(t,u.shape,!1,o),m=[[d]],x=h;h=n.runWebGLProgram(f,[h],h.dtype,m),n.disposeIntermediateTensorInfo(x)}if(s){const d=new Ih(t,u.shape,s,o),f=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(f)}if(i!=null){const d=Eu(i),f=at({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return nx(zs.Prod,s,n,o,a,i)}const nP={kernelName:Od,backendName:"webgl",kernelFunc:tP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return nx(zs.Sum,s,n,o,a,i)}const sP={kernelName:Dd,backendName:"webgl",kernelFunc:rP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=n.readSync(s.dataId),c=n.readSync(o.dataId),l=Py(u,c,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=n.bufferSync(s),c=n.bufferSync(o),l=cA(u,c,a,i);return n.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const aP={kernelName:Pd,backendName:"webgl",kernelFunc:oP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iP{constructor(e,n,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],c=a==="NHWC"?s.shape[2]:s.shape[3],l=a==="NHWC"?s.shape[3]:s.shape[1],h=u*o,d=c*o,f=l/(o*o),m=a==="NHWC"?[i,h,d,f]:[i,f,h,d],x=new iP(m,o,a);return n.runWebGLProgram(x,[s],s.dtype)}const cP={kernelName:Ld,backendName:"webgl",kernelFunc:uP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rx{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tt(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let c="",l="";r&&(s?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`
          float activation(float x) {
            ${r}
          }
        `,l="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sx{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tt(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,h=e.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<h;b++)f+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;f+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<h;b++)f+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(d+1)/2;b++){const $=b*2;if(f+=`
          xC = xCCorner + ${$*c};
          `,u===1){if($<h&&(i%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }
              `,c===1&&$>0?f+=`
                xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                  } else {
                    xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xC${$} = xTexelC${$};
                `,$+1<h)){const T=i%2===0?pu(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                    xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${$+1}.zw = vec2(0.0);
                    }
                    xTexelC${$+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                    } else {
                     xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                    }
                    `:f+=`
                    xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                    `):T===1?f+=`
                    xC${$+1} = xTexelC${$};
                    `:f+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                      xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${$+1}.zw = vec2(0.0);
                      }
                      xTexelC${$+1}Ready = 1;
                    }

                    xC${$+1} = xTexelC${$+1};
                    `}}else $<h&&(i%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.0);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
              `,$+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(
                  xTexelC${$}.xy, xTexelC${$+1}.xy);
              `,$+1<h&&(f+=`
                  xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                `)));$<h&&(f+=`
            wTexel = getW(r, ${$}, d1, q);
            dotProd += xC${$} * vec4(wTexel.xz, wTexel.xz);
          `,$+1<h&&(f+=`
              wTexel = getW(r, ${$+1}, d1, q);
              dotProd += xC${$+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let m="",x="";r&&(s?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:m=`vec4 activation(vec4 x) {
          ${r}
        }`,x="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;l==null&&(l=[1,1]),E(Nt(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=_t(s.shape,o.shape,a,l,i,c,!0);let d;M().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new sx(h):d=new rx(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,o],"float32",f)}const hP={kernelName:Bd,backendName:"webgl",kernelFunc:lP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dP{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class pP{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=n-1-e.padInfo.top,i=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,h=_t(s.shape,l,a,i,u,c,!0),d=new dP(h);return n.runWebGLProgram(d,[s,o],"float32")}const mP={kernelName:Vd,backendName:"webgl",kernelFunc:fP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,h=_t(l,o.shape,a,i,u,c,!0),d=new pP(h);return n.runWebGLProgram(d,[s,o],"float32")}const yP={kernelName:Md,backendName:"webgl",kernelFunc:gP};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xP{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],o=j(r.shape),a=q({inputs:{x:r},backend:n,attrs:{shape:[o]}}),i=new xP(o),u=n.runWebGLProgram(i,[a],a.dtype),c=q({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),c}const vP={kernelName:Ud,backendName:"webgl",kernelFunc:bP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wP{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=e,{top:h,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=Tm(s.shape,o.shape,a,i,"NHWC",u);let l;const h=new wP(c);l=n.runWebGLProgram(h,[s,o],"float32");const d=q({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),d}const NP={kernelName:Wd,backendName:"webgl",kernelFunc:$P};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=Qg(s,o.length);Jg(a.length,u,o);const{path:c,steps:l}=ey(i,u),h=l.length;let d=null,f=a.length;const m=[];for(let x=0;x<h;++x){for(const y of l[x]){const{permutationIndices:b,expandDims:$}=Zg(f,u[y]);let T;ty(b)?T=o[y]:(T=at({inputs:{x:o[y]},backend:n,attrs:{perm:b}}),m.push(T));const C=T.shape.slice();for(let R=0;R<$.length;++R)C.splice($[R],0,1);De(T.shape,C)||(T=q({inputs:{x:T},backend:n,attrs:{shape:C}}),m.push(T)),d===null?d=T:(d=oc({inputs:{a:T,b:d},backend:n}),m.push(d))}x<h-1&&(c[x]>=0&&(d=Na({inputs:{x:d},backend:n,attrs:{axis:c[x]-(a.length-f),keepDims:!1}}),m.push(d)),f--)}for(const x of m)x!==d&&n.disposeIntermediateTensorInfo(x);return d}const CP={kernelName:Gd,backendName:"webgl",kernelFunc:SP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP="return (x >= 0.0) ? x : (exp(x) - 1.0);",EP=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,IP=ge({opSnippet:TP,packedOpSnippet:EP}),kP={kernelName:jd,backendName:"webgl",kernelFunc:IP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _P="return (b >= 0.0) ? a : a * (b + 1.0);",RP=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,AP=t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cs(RP,r.shape,s.shape):new vr(_P,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],r.dtype)},OP={kernelName:Z0,backendName:"webgl",kernelFunc:AP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP=`
  return vec4(equal(a, b));
`,FP="return float(a == b);",PP=Qe({opSnippet:FP,packedOpSnippet:DP,dtype:"bool",cpuKernelImpl:fA}),LP={kernelName:Kd,backendName:"webgl",kernelFunc:PP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${jg};
  float a1 = ${Hg};
  float a2 = ${Kg};
  float a3 = ${qg};
  float a4 = ${Xg};
  float a5 = ${Yg};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,VP=ge({opSnippet:BP}),MP={kernelName:Hd,backendName:"webgl",kernelFunc:VP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UP=ls+`
  return exp(x);
`,WP=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ox=ge({opSnippet:UP,packedOpSnippet:WP,cpuKernelImpl:mA,dtype:"float32"}),zP={kernelName:qd,backendName:"webgl",kernelFunc:ox};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uu(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(E(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),q({inputs:{x:o},backend:r,attrs:{shape:i}})}const GP={kernelName:Xd,backendName:"webgl",kernelFunc:uu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rh="return exp(x) - 1.0;",jP=ge({opSnippet:Rh,packedOpSnippet:Rh,cpuKernelImpl:gA}),HP={kernelName:Yd,backendName:"webgl",kernelFunc:jP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ah{constructor(e,n,r){this.variableNames=["real","imag"];const s=n[1];this.outputShape=n;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ax(t,e,n){const r=n.texData.get(t.dataId),s=j(t.shape),o=t.shape[t.shape.length-1],a=s/o,i=q({inputs:{x:t},backend:n,attrs:{shape:[a,o]}}),u=i.shape,c=new Ah("real",u,e),l=new Ah("imag",u,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(c,h,"float32"),f=n.runWebGLProgram(l,h,"float32"),m=Gn({inputs:{real:d,imag:f},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f);const x=q({inputs:{x:m},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(m),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(t){const{inputs:e,backend:n}=t,{input:r}=e;return ax(r,!1,n)}const qP={kernelName:Qd,backendName:"webgl",kernelFunc:KP};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XP{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function no(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||Hs(s),o==="string"){const a=We(o,j(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new XP(r,s),i=[[s]];return e.runWebGLProgram(a,[],o,i)}}const YP={kernelName:Zd,backendName:"webgl",kernelFunc:no};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QP{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZP={kernelName:Jd,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new QP(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oh="return floor(x);",JP=ge({opSnippet:Oh,packedOpSnippet:Oh,cpuKernelImpl:yA}),eL={kernelName:ep,backendName:"webgl",kernelFunc:JP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,nL=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,rL=Qe({opSnippet:tL,packedOpSnippet:nL,dtype:"int32"}),sL={kernelName:tp,backendName:"webgl",kernelFunc:rL};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oL{constructor(e){this.variableNames=["A"];const n=it(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=it(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL={kernelName:Si,backendName:"webgl",kernelFunc:uL};let Fr,gi=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function uL(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,c]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],h=[c,u,o];if(i||a){const x=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Fr==null||x!==gi)&&(gi=x,Fr=document.createElement("canvas").getContext("2d",{willReadFrequently:gi})),Fr.canvas.width=u,Fr.canvas.height=c,Fr.drawImage(s,0,0,u,c),s=Fr.canvas}const d=n.makeTensorInfo(l,"int32");n.texData.get(d.dataId).usage=Tt.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const f=M().getBool("WEBGL_PACK")?new aL(h):new oL(h),m=n.runWebGLProgram(f,[d],"int32");return n.disposeData(d.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=r,x=ns(l),y=_t(s.shape,o.shape,u,h,c,d,!1,x);let b;const $=[],T=a!=null,C=i!=null,R=f==="leakyrelu",L=()=>{const O=[s,o],B=(V,U)=>{if(U==="NCHW"&&V.shape.length===1&&V.shape[0]!==1){const K=q({inputs:{x:V},backend:n,attrs:{shape:[V.shape[0],1,1]}});return $.push(K),K}return V};if(T&&O.push(B(a,l)),C&&O.push(B(i,l)),R){const V=n.makeTensorInfo([],"float32",ts(m,"float32"));O.push(V),$.push(V)}return O};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))b=ex({x:s,filter:o,convInfo:y,backend:n,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:m});else if(y.strideWidth<=2&&x==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const O=f?Us(f,!0):null,B=new Jy(y,T,O,C,R),V=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],U=L();b=n.runWebGLProgram(B,U,"float32",V)}else if(M().getBool("WEBGL_CONV_IM2COL"))b=tx({x:s,filter:o,convInfo:y,backend:n,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:m});else{const O=f?Us(f,!1):null,B=new Zy(y,T,O,C,R),V=L();b=n.runWebGLProgram(B,V,"float32")}const P=q({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return $.push(b),$.forEach(O=>n.disposeIntermediateTensorInfo(O)),P}const lL={kernelName:Ti,backendName:"webgl",kernelFunc:cL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,m=[];let x=l;x==null&&(x=[1,1]),E(Nt(u,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${x}'`);const y=_t(s.shape,o.shape,u,x,c,h,!0),b=M().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,$=d?Us(d,b):null,T=[s,o],C=a!=null,R=i!=null,L=d==="leakyrelu";if(C&&T.push(a),R&&T.push(i),L){const V=n.makeTensorInfo([],"float32",ts(f,"float32"));T.push(V),m.push(V)}let P;b?P=new sx(y,C,$,R,L):P=new rx(y,C,$,R,L);const O=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],B=n.runWebGLProgram(P,T,"float32",O);return m.forEach(V=>n.disposeIntermediateTensorInfo(V)),B}const dL={kernelName:Ei,backendName:"webgl",kernelFunc:hL};class pL{constructor(e,n,r,s){this.sliceDim=e,this.strides=n,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=$e(r.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=j(r.shape),[u,c,l,h]=$g(r,s),d=q({inputs:{x:s},backend:n,attrs:{shape:[c,a]}}),f=q({inputs:{x:r},backend:n,attrs:{shape:[j(r.shape)/l,l]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const b=n.readSync(s.dataId),$=n.bufferSync(r),T=xA(b,$,r.dtype,c,a,l,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,T.values)}const m=new pL(a,h,[c,l],r.shape),x=n.runWebGLProgram(m,[f,d],f.dtype),y=q({inputs:{x},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(x),y}const mL={kernelName:sp,backendName:"webgl",kernelFunc:fL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gL{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const r=$e(this.rank),s=yL(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function yL(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<t.length;s++)s===2?r.push("index"):r.push(`${n[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ix(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=ze(a,s.shape)[0];if(M().get("DEBUG")){const $=n.readSync(o.dataId),T=s.shape[u];for(let C=0;C<$.length;++C){const R=$[C];E(R<=T-1&&R>=0,()=>`GatherV2: the index value ${R} is not in [0, ${T-1}]`)}}const c=gy(s,o,u,i),l=j(o.shape),h=[],d=q({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=q({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(d),h.push(f);const m=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const $=n.bufferSync(f),T=n.bufferSync(d),C=bA(T,$,m);return h.forEach(R=>n.disposeIntermediateTensorInfo(R)),n.makeTensorInfo(c.outputShape,C.dtype,C.values)}const x=new gL(d.shape,m),y=n.runWebGLProgram(x,[d,f],d.dtype);h.push(y);const b=q({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return h.forEach($=>n.disposeIntermediateTensorInfo($)),b}const xL={kernelName:rp,backendName:"webgl",kernelFunc:ix};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL="return float(a > b);",vL=`
  return vec4(greaterThan(a, b));
`,wL=Qe({opSnippet:bL,packedOpSnippet:vL,cpuKernelImpl:vA,dtype:"bool"}),$L={kernelName:op,backendName:"webgl",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NL="return float(a >= b);",SL=`
  return vec4(greaterThanEqual(a, b));
`,CL=Qe({opSnippet:NL,packedOpSnippet:SL,dtype:"bool",cpuKernelImpl:wA}),TL={kernelName:ap,backendName:"webgl",kernelFunc:CL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(t){const{inputs:e,backend:n}=t,{input:r}=e;return ax(r,!0,n)}const IL={kernelName:ip,backendName:"webgl",kernelFunc:EL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL="return float(!isnan(x) && !isinf(x));",_L=ge({opSnippet:kL,dtype:"bool"}),RL={kernelName:cp,backendName:"webgl",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL="return float(isinf(x));",OL=ge({opSnippet:AL,dtype:"bool"}),DL={kernelName:lp,backendName:"webgl",kernelFunc:OL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FL="return float(isnan(x));",PL=ge({opSnippet:FL,dtype:"bool"}),LL={kernelName:hp,backendName:"webgl",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BL="return float(a < b);",VL=`
  return vec4(lessThan(a, b));
`,ML=Qe({opSnippet:BL,packedOpSnippet:VL,cpuKernelImpl:$A,dtype:"bool"}),UL={kernelName:pp,backendName:"webgl",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WL="return float(a <= b);",zL=`
  return vec4(lessThanEqual(a, b));
`,GL=Qe({opSnippet:WL,packedOpSnippet:zL,cpuKernelImpl:NA,dtype:"bool"}),jL={kernelName:fp,backendName:"webgl",kernelFunc:GL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,a=SA(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const KL={kernelName:mp,backendName:"webgl",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL=ls+`
  return x < 0.0 ? 0./0. : log(x);
`,XL=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,YL=ge({opSnippet:qL,packedOpSnippet:XL,cpuKernelImpl:CA}),QL={kernelName:gp,backendName:"webgl",kernelFunc:YL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZL=ls+`
  return log(1.0 + x);
`,JL=ge({opSnippet:ZL}),e3={kernelName:yp,backendName:"webgl",kernelFunc:JL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t3="return float(a >= 1.0 && b >= 1.0);",n3=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,r3=Qe({opSnippet:t3,packedOpSnippet:n3,dtype:"bool"}),s3={kernelName:xp,backendName:"webgl",kernelFunc:r3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o3="return float(!(x >= 1.0));",a3=ge({opSnippet:o3}),i3={kernelName:bp,backendName:"webgl",kernelFunc:a3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u3="return float(a >= 1.0 || b >= 1.0);",c3=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,l3=Qe({opSnippet:u3,packedOpSnippet:c3,dtype:"bool"}),h3={kernelName:vp,backendName:"webgl",kernelFunc:l3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d3{constructor(e,n,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=n,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p3{constructor(e,n,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=n,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,c=M().getBool("WEBGL_PACK_NORMALIZATION")?new p3(s.shape,o,a,i,u):new d3(s.shape,o,a,i,u);return n.runWebGLProgram(c,[s],s.dtype)},m3={kernelName:wp,backendName:"webgl",kernelFunc:f3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g3{constructor(e,n,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r,h=new g3(s.shape,i,u,c,l);return n.runWebGLProgram(h,[s,o,a],s.dtype)},x3={kernelName:J0,backendName:"webgl",kernelFunc:y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(t,e,n,r){const s=j(e),a=j(t.shape)/s,i=q({inputs:{x:t},attrs:{shape:[a,s]},backend:r}),u=_r(i,t.dtype,"max",r),c=q({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ux(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=ze(o,s.shape);let c=u;const l=Wt(c,i),h=l!=null,d=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(d){const T=n.texData.get(f.dataId).values,C=new Array(i);for(let P=0;P<C.length;P++)C[P]=s.shape[l[P]];const R=rc(T,s.shape,s.dtype,l,C);f=n.makeTensorInfo(C,s.dtype);const L=n.texData.get(f.dataId);L.values=R}else f=$a(s,l,n);c=zt(c.length,i)}rn("max",c,i);const[m,x]=mn(f.shape,c);let y=m;a&&(y=Rt(m,u));let b;if(d){const T=n.texData.get(f.dataId).values,C=TA(T,j(x),y,s.dtype);b=n.makeTensorInfo(y,s.dtype);const R=n.texData.get(b.dataId);R.values=C}else b=b3(f,x,y,n);return h&&n.disposeIntermediateTensorInfo(f),b}const v3={kernelName:$p,backendName:"webgl",kernelFunc:ux};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3=sc+`
  return max(a, b);
`,$3=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+kr+`
  return result;
`,N3=Qe({opSnippet:w3,packedOpSnippet:$3,cpuKernelImpl:EA}),S3={kernelName:Np,backendName:"webgl",kernelFunc:N3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Js(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;E(Nt(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Nr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&De(l.inShape,l.outShape))return wt({inputs:{x:s},backend:n});const h=new Ws(l,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}const T3={kernelName:Sp,backendName:"webgl",kernelFunc:C3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],h=qs(s.shape,o,a,l,i,c,u),d=new ac(h,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}const I3={kernelName:Cp,backendName:"webgl",kernelFunc:E3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k3{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,u=a-1-e.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class _3{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,h=u-1-e.padInfo.front,d=c-1-e.padInfo.top,f=l-1-e.padInfo.left,m=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=qs(a.shape,i,u,h,c,l),f=new ac(d,"max",!0),m=n.runWebGLProgram(f,[a],a.dtype),x=new _3(d),y=n.runWebGLProgram(x,[s,m],a.dtype);return n.disposeIntermediateTensorInfo(m),y}const A3={kernelName:tb,backendName:"webgl",kernelFunc:R3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:a}=e,i=o;Js([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,d=Nr(i.shape,u,c,1,l,h),f=!0,m=new Ws(d,"max",f),x=n.runWebGLProgram(m,[i],i.dtype),y=new k3(d),b=n.runWebGLProgram(y,[s,x],i.dtype);return n.disposeIntermediateTensorInfo(x),b}const D3={kernelName:eb,backendName:"webgl",kernelFunc:O3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(t,e,n,r){let s=new Ws(n,"max",!1);const o=r.runWebGLProgram(s,[t],"float32");s=new Ws(n,"max",!0,!0,e);const a=r.runWebGLProgram(s,[t],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P3={kernelName:Tp,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=n;E(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];E(Nt(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Nr(r.shape,s,o,c,a),[h,d]=F3(r,i,l,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(t,e,n,r){const s=j(e),a=j(t.shape)/s,i=q({inputs:{x:t},attrs:{shape:[a,s]},backend:r}),u=_r(i,"float32","mean",r),c=q({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B3={kernelName:Ep,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:o}=e,a=n,i=r.shape.length,u=ze(o,r.shape);let c=u;const l=Wt(c,i),h=l!=null,d=a.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(d){const C=a.texData.get(m.dataId).values,R=new Array(i);for(let O=0;O<R.length;O++)R[O]=r.shape[l[O]];const L=rc(C,r.shape,r.dtype,l,R);m=a.makeTensorInfo(R,r.dtype);const P=a.texData.get(m.dataId);P.values=L}else m=$a(r,l,a);f.push(m),c=zt(c.length,i)}rn("sum",c,i);const[x,y]=mn(m.shape,c);let b=x;s&&(b=Rt(x,u));const $=L3(m,y,b,a);for(const T of f)a.disposeIntermediateTensorInfo(T);return $}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=ze(o,s.shape);let c=u;const l=Wt(c,i);let h=s;l!=null&&(h=at({inputs:{x:s},backend:n,attrs:{perm:l}}),c=zt(c.length,s.shape.length)),rn("min",c,i);const[d,f]=mn(h.shape,c),m=j(f),x=q({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),y=_r(x,x.dtype,"min",n);let b;if(a){const $=Rt(d,u);b=q({inputs:{x:y},backend:n,attrs:{shape:$}})}else b=q({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y),l!=null&&n.disposeIntermediateTensorInfo(h),b}const M3={kernelName:Ip,backendName:"webgl",kernelFunc:V3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U3=sc+`
  return min(a, b);
`,W3=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+kr+`
  return result;
`,z3=Qe({opSnippet:U3,packedOpSnippet:W3,cpuKernelImpl:IA}),G3={kernelName:kp,backendName:"webgl",kernelFunc:z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j3{constructor(e,n,r){this.variableNames=["x"],this.outputShape=n.map((l,h)=>l[0]+e[h]+l[1]);const s=e.length,o=$e(s),a=n.map(l=>l[0]).join(","),i=n.map((l,h)=>l[0]+e[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H3{constructor(e,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((m,x)=>m[0]+e[x]+m[1]);const s=e.length,o=$e(s),a=n.map(m=>m[0]).join(","),i=n.map((m,x)=>m[0]+e[x]).join(","),u=ot("rc",s),c=ot("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=r==="reflect"?0:1;let f="";if(s===1){const m=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const m=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${o} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${m}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${u[s-1]} += 1;
          if(${l}) {
            ${m}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K3=({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:o}=n,a=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new H3(r.shape,s,o):new j3(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)},q3={kernelName:_p,backendName:"webgl",kernelFunc:K3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X3=`if (b == 0.0) return NAN;
  return mod(a, b);`,Y3=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+kr+`
  return result;
`,Q3=Qe({opSnippet:X3,packedOpSnippet:Y3}),Z3={kernelName:Rp,backendName:"webgl",kernelFunc:Q3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J3{constructor(e,n,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eB=`
if (a == b) {
  return 1.0;
};
return a / b;`,tB=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,cx=Qe({opSnippet:eB,packedOpSnippet:tB,checkOutOfBounds:!0}),nB={kernelName:zd,backendName:"webgl",kernelFunc:cx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dh="return a - b;",lx=Qe({opSnippet:Dh,packedOpSnippet:Dh,supportsComplex:!0,cpuKernelImpl:XA}),rB={kernelName:Df,backendName:"webgl",kernelFunc:lx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hx(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,a=ze([o],s.shape),i=ux({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),u=Rt(i.shape,a),c=q({inputs:{x:i},backend:n,attrs:{shape:u}}),l=lx({inputs:{a:s,b:c},backend:n}),h=ox({inputs:{x:l},backend:n}),d=Na({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),f=q({inputs:{x:d},backend:n,attrs:{shape:u}}),m=cx({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const sB={kernelName:$f,backendName:"webgl",kernelFunc:hx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:hx({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new J3(c,l,o),d=[[a]],f=n.runWebGLProgram(h,[u],"int32",d);return i||n.disposeIntermediateTensorInfo(u),f}const aB={kernelName:Ap,backendName:"webgl",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iB=Gt+`
  return -x;
`,uB=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function cB(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const o=n.texData.get(r.dataId),[a,i]=_A(o.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}let s;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new On(r.shape,uB):s=new hn(r.shape,iB),n.runWebGLProgram(s,[r],r.dtype)}const lB={kernelName:Dp,backendName:"webgl",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hB=dg;function dB(t){Yt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,c=n.readSync(s.dataId),l=n.readSync(o.dataId),{selectedIndices:h}=hB(c,l,a,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const pB={kernelName:Pp,backendName:"webgl",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fB=pg;function mB(t){Yt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(s.dataId),h=n.readSync(o.dataId),{selectedIndices:d,validOutputs:f}=fB(l,h,a,i,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const gB={kernelName:Lp,backendName:"webgl",kernelFunc:mB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yB=fg;function xB(t){Yt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(s.dataId),h=n.readSync(o.dataId),d=a,f=i,m=u,x=c,{selectedIndices:y,selectedScores:b}=yB(l,h,d,f,m,x);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const bB={kernelName:Bp,backendName:"webgl",kernelFunc:xB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vB{constructor(e,n,r,s){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wB=t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,c=j(s.shape),l=new vB(c,a,i,u),h=q({inputs:{x:s},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(l,[h],o);n.disposeIntermediateTensorInfo(h);const f=[...s.shape,a],m=q({inputs:{x:d},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),m},$B={kernelName:Mp,backendName:"webgl",kernelFunc:wB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ta(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="complex64"){const s=to({inputs:{input:r},backend:n}),o=ta({inputs:{x:s},backend:n}),a=Sa({inputs:{input:r},backend:n}),i=ta({inputs:{x:a},backend:n}),u=Gn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}else return no({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}const NB={kernelName:Wf,backendName:"webgl",kernelFunc:ta};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dx(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=to({inputs:{input:r},backend:n}),o=dx({inputs:{x:s},backend:n}),a=Sa({inputs:{input:r},backend:n}),i=ta({inputs:{x:a},backend:n}),u=Gn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}else return no({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const SB={kernelName:Vp,backendName:"webgl",kernelFunc:dx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(e.length===1)return uu({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{It(o,l.shape,"All tensors passed to stack must have matching shapes"),E(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const h=uu({inputs:{input:l},backend:n,attrs:{dim:s}});return i.push(h),h}),c=Qy({inputs:u,backend:n,attrs:{axis:s}});return i.forEach(l=>n.disposeIntermediateTensorInfo(l)),c}const TB={kernelName:Up,backendName:"webgl",kernelFunc:CB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EB{constructor(e,n,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((c,l)=>c[0]+e[l]+c[1]);const s=e.length,o=$e(s),a=n.map(c=>c[0]).join(","),i=n.map((c,l)=>c[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IB{constructor(e,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((x,y)=>x[0]+e[y]+x[1]);const s=e.length,o=$e(s),a=n.map(x=>x[0]).join(","),i=n.map((x,y)=>x[0]+e[y]).join(","),u=ot("rc",s),c=ot("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${l}) {`],f=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let x=0,y=s===1?2:4;x<y;x++)m+=`
        ${d[x]}
        if (${f}) {
          result[${x}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${x}] = getChannel(getX(${c.join()}), ${h});
        }
      `;m+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const px=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:a}=r;if(j(s.shape)===0){const c=o.map((l,h)=>l[0]+s.shape[h]+l[1]);return no({backend:n,attrs:{shape:c,value:a,dtype:s.dtype}})}const i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IB(s.shape,o,a):new EB(s.shape,o,a),u=[[a]];return n.runWebGLProgram(i,[s],s.dtype,u)},kB={kernelName:Wp,backendName:"webgl",kernelFunc:px};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,RB=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+kr+`
  return result;
`,AB=Qe({opSnippet:_B,packedOpSnippet:RB}),OB={kernelName:zp,backendName:"webgl",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],c=ze(o,s.shape);let l=c;const h=Wt(l,i);let d=s;h!=null&&(d=at({inputs:{x:s},backend:n,attrs:{perm:h}}),l=zt(l.length,i),u.push(d)),rn("prod",l,i);let f;if(n.shouldExecuteOnCPU([d])){const m=n.texData.get(d.dataId).values,{outVals:x,outShape:y,outDtype:b}=AA(d.shape,d.dtype,m,l);f=n.makeTensorInfo(y,b,x)}else{const[m,x]=mn(d.shape,l),y=j(x),b=q({inputs:{x:d},backend:n,attrs:{shape:[-1,y]}}),$=wu(s.dtype),T=_r(b,$,"prod",n);f=q({inputs:{x:T},backend:n,attrs:{shape:m}}),u.push(b),u.push(T)}if(a){u.push(f);const m=Rt(f.shape,c);f=q({inputs:{x:f},backend:n,attrs:{shape:m}})}return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const FB={kernelName:jp,backendName:"webgl",kernelFunc:DB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(b=>n.readSync(b.dataId)),c=s.map(b=>b.shape),l=n.readSync(o.dataId),h=n.readSync(a.dataId),[d,f,m]=OA(u,c,l,o.shape,o.dtype,h,a.shape,i),x=d.map(b=>n.makeTensorInfo([b.length],"int32",b)),y=n.makeTensorInfo(m,o.dtype,f);return x.concat([y])}const LB={kernelName:Hp,backendName:"webgl",kernelFunc:PB};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(t){const{inputs:e,backend:n}=t,{starts:r,limits:s,deltas:o}=e,a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[c,l]=DA(a,r.shape,r.dtype,i,s.shape,u,o.shape),h=n.makeTensorInfo([c.length],"int32",c),d=n.makeTensorInfo([l.length],r.dtype,l);return[h,d]}const VB={kernelName:Kp,backendName:"webgl",kernelFunc:BB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=n.readSync(s.dataId),l=n.readSync(o.dataId),h=n.readSync(a.dataId),d=i.map(y=>n.readSync(y.dataId)),f=i.map(y=>y.shape),[m,x]=FA(c,s.shape,l,o.shape,o.dtype,h,a.shape,d,f,u);return n.makeTensorInfo(m,o.dtype,x)}const UB={kernelName:qp,backendName:"webgl",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fx=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:o,dtype:a}=n,i=PA(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},WB={kernelName:Xp,backendName:"webgl",kernelFunc:fx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zB="return 1.0 / x;",GB=ge({opSnippet:zB}),jB={kernelName:Qp,backendName:"webgl",kernelFunc:GB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HB=Gt+`
  return (x < 0.0) ? 0.0 : x;
`,KB=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qB=ge({opSnippet:HB,packedOpSnippet:KB}),XB={kernelName:Zp,backendName:"webgl",kernelFunc:qB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YB=Gt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,QB=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ZB=ge({opSnippet:YB,packedOpSnippet:QB}),JB={kernelName:nf,backendName:"webgl",kernelFunc:ZB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e4{constructor(e,n,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,n,r,c];const l=[s&&n>1?i-1:i,s&&r>1?u-1:u],h=[s&&n>1?n-1:n,s&&r>1?r-1:r];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t4{constructor(e,n,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,n,r,c];const l=[s&&n>1?i-1:i,s&&r>1?u-1:u],h=[s&&n>1?n-1:n,s&&r>1?r-1:r];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new t4(s.shape,u,c,o,a):new e4(s.shape,u,c,o,a);return n.runWebGLProgram(l,[s],"float32")}const r4={kernelName:tf,backendName:"webgl",kernelFunc:n4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s4{constructor(e,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,s,o]=n,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,f=1/h,m=Math.ceil(d)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,i=new s4(o.shape,s.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const a4={kernelName:rb,backendName:"webgl",kernelFunc:o4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i4{constructor(e,n,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,n,r,c];const l=[s&&n>1?i-1:i,s&&r>1?u-1:u],h=[s&&n>1?n-1:n,s&&r>1?r-1:r],d=s?"0.5":"0.0";let f;o?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u4{constructor(e,n,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,n,r,c];const l=[s&&n>1?i-1:i,s&&r>1?u-1:u],h=[s&&n>1?n-1:n,s&&r>1?r-1:r],d=s?"0.5":"0.0";let f;o?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new u4(s.shape,u,c,o,a):new i4(s.shape,u,c,o,a);return n.runWebGLProgram(l,[s],s.dtype)}const l4={kernelName:ef,backendName:"webgl",kernelFunc:c4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h4{constructor(e,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,s,o]=n,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,f=1/h,m=Math.ceil(d)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,i=new h4(o.shape,s.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const p4={kernelName:nb,backendName:"webgl",kernelFunc:d4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f4{constructor(e,n){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=i=>n.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,u)=>s(u)).join(","),a=$e(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m4{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=ot("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,i=$e(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${c(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${o}) {
              result.a = ${h(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(m){return d(m)}function c(m){return m[r-1]="("+m[r-1]+" + 1)",d(m)}function l(m){return m[r-2]="("+m[r-2]+" + 1)",d(m)}function h(m){return m[r-1]="("+m[r-1]+" + 1)",m[r-2]="("+m[r-2]+" + 1)",d(m)}function d(m){const x=e.map(($,T)=>f(T,m)),y=x.join(","),b=x.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${b}))`}function f(m,x){return n.indexOf(m)!==-1&&e[m]!==1?`${e[m]} - ${x[m]} - 1`:`${x[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r,a=s.shape.length,i=ze(o,s.shape);if(a===0)return wt({inputs:{x:s},backend:n});const u=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new m4(s.shape,i):new f4(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}const y4={kernelName:rf,backendName:"webgl",kernelFunc:g4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x4{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof n=="number"?o=`float outputValue = ${n.toFixed(2)};`:o=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4={kernelName:Gf,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:a}=e,i=n,u=new x4(r.shape,o),[c,l]=Mg(a,r.shape[1],r.shape[2]),h=[[c,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,w4=ge({opSnippet:v4}),$4={kernelName:sf,backendName:"webgl",kernelFunc:w4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N4="return inversesqrt(x);",S4=ge({opSnippet:N4,cpuKernelImpl:LA}),C4={kernelName:of,backendName:"webgl",kernelFunc:S4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ic{constructor(e,n,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=$e(o.length),l=$e(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let f="";s===1?f="i":s===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let x="";u&&(x="coords[0], coords[1]");const y=`getDefaultValue(${x})`,b=n>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T4{constructor(e,n,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=$e(o.length),l=$e(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let f="";s===1?f="i":s===2&&(f="i, coords[1]");const m=`getUpdates(${f})`;let x="";u&&(x="coords[0], coords[1]");const y=`getDefaultValue(${x})`,b=n>1?"strides[j]":"strides",$=n>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${n}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${n}) {
                flattenedIndex += index.yw * ${$};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${m};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=pa(o,s,a),d=[h/c,c];if(h===0)return n.makeTensorInfo(a,s.dtype);const f=q({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),m=q({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),x=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;M().getBool("WEBGL_PACK")?y=new T4(u,i,f.shape.length,m.shape.length,l,d):y=new ic(u,i,f.shape.length,m.shape.length,l,d);const b=n.runWebGLProgram(y,[m,f,x],m.dtype),$=q({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),$}const I4={kernelName:af,backendName:"webgl",kernelFunc:E4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k4{constructor(e,n,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,i=M().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:a}=r,i=new k4(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return n.runWebGLProgram(i,[s,o],"int32",u)}const R4={kernelName:cf,backendName:"webgl",kernelFunc:_4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A4{constructor(e,n,r){this.variableNames=["c","a","b"],this.outputShape=n;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<n.length;l++)c.push(`${i[l]}`),l<e&&u.push(`${i[l]}`);s=u.join(),o=c.join()}const a=$e(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e,a=new A4(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,o],fn(s.dtype,o.dtype))}const D4={kernelName:lf,backendName:"webgl",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${zg};
  float scale = ${Gg};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,P4=ge({opSnippet:F4}),L4={kernelName:hf,backendName:"webgl",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4=ls+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,V4=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,M4=ge({opSnippet:B4,packedOpSnippet:V4,cpuKernelImpl:VA}),U4={kernelName:gf,backendName:"webgl",kernelFunc:M4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,z4=ge({opSnippet:W4}),G4={kernelName:mf,backendName:"webgl",kernelFunc:z4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4=ls+`
  return sin(x);
`,H4=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${kr}
  return result;
`,K4=ge({opSnippet:j4,packedOpSnippet:H4}),q4={kernelName:pf,backendName:"webgl",kernelFunc:K4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Y4=ge({opSnippet:X4}),Q4={kernelName:ff,backendName:"webgl",kernelFunc:Y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z4=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,J4=ge({opSnippet:Z4}),eV={kernelName:yf,backendName:"webgl",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:a}=r;E(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,$)=>b*$),u=[[0,0]];u.push(...a);for(let b=1+o.length;b<s.shape.length;++b)u.push([0,0]);const c=[],l=px({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Xu(l.shape,o,i,!1),d=Yu(h.length,o.length,!1),f=Qu(l.shape,o,i,!1),m=q({inputs:{x:l},backend:n,attrs:{shape:h}}),x=at({inputs:{x:m},backend:n,attrs:{perm:d}}),y=q({inputs:{x},backend:n,attrs:{shape:f}});return c.push(l),c.push(m),c.push(x),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},nV={kernelName:vf,backendName:"webgl",kernelFunc:tV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=n.readSync(r.dataId),u=n.readSync(s.dataId),c=n.readSync(o.dataId),l=n.readSync(a.dataId)[0],[h,d,f,m,x]=UA(i,r.shape,r.dtype,u,s.dtype,c,l);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,f),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),n.makeTensorInfo([x.length],r.dtype,new Int32Array(x))]}const sV={kernelName:Nf,backendName:"webgl",kernelFunc:rV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(o.dataId)),[c,l,h]=WA(i,r.shape,r.dtype,a,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const aV={kernelName:Sf,backendName:"webgl",kernelFunc:oV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[c,l]=By(a,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}const uV={kernelName:Cf,backendName:"webgl",kernelFunc:iV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[c,l]=By(a,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}const lV={kernelName:Tf,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=pa(o,s,i),f=!1;if(o.dtype==="string"){const b=n.bufferSync(s),$=n.bufferSync(o),T=Kr(n.readSync(a.dataId)[0]),C=BA(b,$,i,d,l,c,u,h,T,f);return n.makeTensorInfo(i,C.dtype,C.values)}const m=new ic(c,u,s.shape.length,o.shape.length,h,[d,1],f),x=n.runWebGLProgram(m,[o,s,a],o.dtype),y=q({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(x),y}const dV={kernelName:Ef,backendName:"webgl",kernelFunc:hV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=ze(a,s.shape)[0],u=ny(s,o,i),c=s.shape.length,l=new Array(c).fill(0),h=s.shape.slice();return u.map(d=>{const f=[...h];f[i]=d;const m=hs({inputs:{x:s},backend:n,attrs:{begin:l,size:f}});return l[i]+=d,m})}const fV={kernelName:wf,backendName:"webgl",kernelFunc:pV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fh="return sqrt(x);",mV=ge({opSnippet:Fh,packedOpSnippet:Fh,cpuKernelImpl:zA}),gV={kernelName:xf,backendName:"webgl",kernelFunc:mV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV="return x * x;",xV=ge({opSnippet:yV}),bV={kernelName:sb,backendName:"webgl",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ph="return (a - b) * (a - b);",vV=Qe({opSnippet:Ph,packedOpSnippet:Ph}),wV={kernelName:If,backendName:"webgl",kernelFunc:vV};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=n.readSync(s.dataId),a=Yr(o),i=GA(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}const NV={kernelName:kf,backendName:"webgl",kernelFunc:$V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=Gt+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new hn(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const CV={kernelName:zf,backendName:"webgl",kernelFunc:SV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TV{constructor(e,n,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=$e(r.length),a=$e(r.length);let i="";if(s===1)i="coords * strides + begin";else{let u=0;i=r.map((c,l)=>(u++,r.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${n});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:m,isIdentity:x,sliceDim0:y,isSimpleSlice:b,begin:$,end:T,strides:C}=Dg(s.shape,o,a,i,u,c,l,h,d);let R;if(x)R=q({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){E(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const P=Sg($,T,C),O=hs({inputs:{x:s},backend:n,attrs:{begin:$,size:P}});R=q({inputs:{x:O},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(O)}else if(n.shouldExecuteOnCPU([s])){const O=n.readSync(s.dataId),B=Fe(s.shape,s.dtype,O),V=jA(f,B,C,$);R=n.makeTensorInfo(m,s.dtype,V.values)}else{const O=new TV($,C,f);R=n.runWebGLProgram(O,[s],s.dtype)}const L=q({inputs:{x:R},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(R),L}const IV={kernelName:_f,backendName:"webgl",kernelFunc:EV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=e,d=n.readSync(l.dataId),f=n.readSync(h.dataId),[m,x]=HA(d,f,s,o,a,i,u,c);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",x)]}const _V={kernelName:Rf,backendName:"webgl",kernelFunc:kV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.readSync(o.dataId),u=n.readSync(a.dataId)[0],[c,l,h]=KA(i,u,s),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const AV={kernelName:Af,backendName:"webgl",kernelFunc:RV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(o.dataId),i=qA(a,s);return n.makeTensorInfo(o.shape,"int32",i)}const DV={kernelName:Of,backendName:"webgl",kernelFunc:OV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FV="return tan(x);",PV=ge({opSnippet:FV}),LV={kernelName:Ff,backendName:"webgl",kernelFunc:PV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,VV=ge({opSnippet:BV}),MV={kernelName:Pf,backendName:"webgl",kernelFunc:VV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(t){const{inputs:e,backend:n,attrs:r}=t,{tensor:s,indices:o,updates:a}=e,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=pa(a,o,s.shape),d=[h/c,c];if(h===0)return n.makeTensorInfo(s.shape,o.dtype);const f=q({inputs:{x:o},backend:n,attrs:{shape:[u,i]}}),m=q({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}),x=q({inputs:{x:s},backend:n,attrs:{shape:d}}),y=new ic(u,i,f.shape.length,m.shape.length,l,d,!1,!0),b=n.runWebGLProgram(y,[m,f,x],x.dtype),$=q({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),$}const WV={kernelName:uf,backendName:"webgl",kernelFunc:UV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zV{constructor(e,n){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*n[a];this.outputShape=r,this.rank=r.length;const s=$e(this.rank),o=GV(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function GV(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mx(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=n.readSync(s.dataId),c=s.dtype==="string"?u.map(d=>Kr(d)):u,l=Fe(s.shape,s.dtype,c),h=YA(l,o);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new zV(s.shape,o);return n.runWebGLProgram(a,[s],s.dtype)}const jV={kernelName:bu,backendName:"webgl",kernelFunc:mx};class HV{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class KV{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qn(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function Lh(t){let e=1;for(;e<t;)e*=2;return e}function qV(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:a}=r,i=M().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=M().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([s])||l<i||o>u){const V=n.readSync(s.dataId),[U,K]=QA(V,c,s.dtype,o,a);return[n.makeTensorInfo(U.shape,U.dtype,U.values),n.makeTensorInfo(K.shape,K.dtype,K.values)]}if(o===0)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(l===1)return[s,no({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=h!==null&&h.isPacked,f=d?n.unpackTensor(s):s,x=j(c)/l,y=q({inputs:{x:f},attrs:{shape:[x,l]},backend:n});d&&Qn(n,f);const b=Lh(o),$=Lh(l);let T=null;const C=()=>T===null?[y,y]:[y,T],R=(V,U,K)=>{const ee=C(),ne=new HV(K),J=[[l],[T===null?1:0],[Number.NEGATIVE_INFINITY],[V],[U]],me=T;T=n.runWebGLProgram(ne,ee,"int32",J),Qn(n,me)};for(let V=1;V<b;V*=2){const U=V*2;for(let K=V;K>=1;K/=2)R(U,K,[x,$])}for(let V=$;V>b;V/=2){const U=C(),K=new KV([x,V/2]),ne=[[l],[T===null?1:0],[b]],se=T;T=n.runWebGLProgram(K,U,"int32",ne),Qn(n,se);const J=b/2,me=J*2;for(let be=J;be>=1;be/=2)R(me,be,T.shape)}let L=T;T=hs({inputs:{x:T},backend:n,attrs:{begin:0,size:[x,o]}}),Qn(n,L);let P=ix({inputs:{x:y,indices:T},backend:n,attrs:{axis:1,batchDims:1}});Qn(n,y);const O=c.slice(0,-1);O.push(o),L=T,T=q({inputs:{x:T},attrs:{shape:O},backend:n}),Qn(n,L);const B=P;return P=q({inputs:{x:P},attrs:{shape:O},backend:n}),Qn(n,B),[P,T]}const XV={kernelName:Lf,backendName:"webgl",kernelFunc:qV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YV{constructor(e,n,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=r,[l,h,d,f]=s.shape,[m,x]=c??[h,d],y=[l,m,x,f],b=new YV(h,d,a,i,u,y);return n.runWebGLProgram(b,[s,o],"float32")}const ZV={kernelName:Bf,backendName:"webgl",kernelFunc:QV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:o}=e;Js(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=ZA(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const eM={kernelName:Vf,backendName:"webgl",kernelFunc:JV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],c=new Array(i-1);let l=0;for(let x=0;x<i;x++)x!==o&&(c[l++]=a.shape[x]);const h=[],d=new Array(i).fill(0),f=a.shape.slice();f[o]=1;const m=new Array(u);for(let x=0;x<m.length;x++){d[o]=x;const y=hs({inputs:{x:a},backend:n,attrs:{begin:d,size:f}}),b=q({inputs:{x:y},backend:n,attrs:{shape:c}});m[x]=b,h.push(y)}return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),m}const nM={kernelName:Mf,backendName:"webgl",kernelFunc:tM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rM{constructor(e,n){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/r);this.outputShape=[s,i];const u="0.0",c="sumValue",l=Math.floor(r/4)*4,h=r%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let m="";o%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let c=0;const l=Wt([c],i);let h=s;l!=null&&(h=at({inputs:{x:s},backend:n,attrs:{perm:l}}),u.push(h),c=zt(1,i)[0]);const d=my(h.shape,c,a),f=j([h.shape[c]]),m=q({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});u.push(m);const x=wu(s.dtype),y=(C,R,L,P,O)=>{const B=C.shape[0],V=C.shape[1],U=fy(V,O),K={windowSize:U,inSize:V,batchSize:B,numSegments:O},ee=new rM(K,R),ne=n.compileAndRun(ee,[C,L],P);if(u.push(ne),ne.shape[1]===O)return ne;const se=fx({backend:n,attrs:{start:0,stop:O,step:1,dtype:"float32"}}),J=mx({inputs:{x:se},backend:n,attrs:{reps:[V/U]}});return u.push(se),u.push(J),y(ne,R,J,P,O)},b=y(m,"unsortedSegmentSum",o,x,a),$=q({inputs:{x:b},backend:n,attrs:{shape:d}});let T=$;if(l!=null){u.push($);const C=Eu(l);T=at({inputs:{x:T},backend:n,attrs:{perm:C}})}return u.forEach(C=>n.disposeIntermediateTensorInfo(C)),T}const oM={kernelName:Uf,backendName:"webgl",kernelFunc:sM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM=[zO,jO,qO,QO,JO,nD,sD,aD,lD,dD,mD,xD,wD,CD,ID,_D,AD,PD,BD,MD,GD,QD,JD,rF,oF,hF,pF,yF,TO,vF,CF,kF,FF,BF,MF,WF,GF,qF,QF,eP,nP,sP,aP,cP,hP,mP,yP,vP,NP,CP,kP,OP,LP,MP,zP,GP,HP,qP,YP,ZP,eL,sL,iL,lL,dL,mL,xL,$L,TL,CO,IL,NF,RL,DL,LL,IO,UL,jL,KL,QL,e3,s3,i3,h3,m3,x3,v3,S3,T3,I3,A3,D3,P3,B3,M3,G3,q3,Z3,aB,RO,lB,pB,gB,bB,iF,$B,SB,TB,kB,OB,_O,FB,LB,VB,UB,WB,uF,nB,jB,XB,JB,OO,r4,a4,l4,p4,y4,b4,$4,C4,I4,R4,D4,L4,U4,G4,q4,Q4,XD,sB,eV,nV,sV,aV,uV,lV,dV,fV,gV,bV,wV,NV,CV,IV,_V,AV,DV,rB,MO,LV,MV,WV,jV,XV,ZV,UO,eM,nM,oM,NB];for(const t of aM)ib(t);var gx={exports:{}},yx={exports:{}};function iM(t){return t>64&&t<91?t-65:t>96&&t<123?t-71:t>47&&t<58?t+4:t===43?62:t===47?63:0}function uM(t,e){for(var n=t.replace(/[^A-Za-z0-9\+\/]/g,""),r=n.length,s=e?Math.ceil((r*3+1>>2)/e)*e:r*3+1>>2,o=new Uint8Array(s),a,i,u=0,c=0,l=0;l<r;l++)if(i=l&3,u|=iM(n.charCodeAt(l))<<18-6*i,i===3||r-l===1){for(a=0;a<3&&c<s;a++,c++)o[c]=u>>>(16>>>a&24)&255;u=0}return o}var cM={decode:uM},lM=function(t,e){return new Promise(function(n,r){var s=new XMLHttpRequest;e&&(s.responseType=e),s.open("GET",t),s.onload=function(){s.status===200?n(s.response):r(Error(s.statusText))},s.onerror=function(){r(Error("Network Error"))},s.send()})};(function(t){var e=cM,n=lM;function r(P){return function(O){return typeof O=="string"&&P.test(O)}}function s(P,O){return typeof P=="string"?P+O:typeof P=="function"?P(O):O}function o(P,O,B,V){var U=a(O)?i:u(O)?c:l(O)?h:d(O)?f:m(O)?x:y(O)?b:$(O)?T:C(O)?R:null,K=B||{};return U?U(P,O,K):V?Promise.resolve(V):Promise.reject("Source not valid ("+O+")")}o.fetch=n;function a(P){return P instanceof ArrayBuffer}function i(P,O,B){return new Promise(function(V,U){P.decodeAudioData(O,function(K){V(K)},function(){U("Can't decode audio data ("+O.slice(0,30)+"...)")})})}var u=r(/\.(mp3|wav|ogg)(\?.*)?$/i);function c(P,O,B){var V=s(B.from,O);return o(P,o.fetch(V,"arraybuffer"),B)}function l(P){return P&&typeof P.then=="function"}function h(P,O,B){return O.then(function(V){return o(P,V,B)})}var d=Array.isArray;function f(P,O,B){return Promise.all(O.map(function(V){return o(P,V,B,V)}))}function m(P){return P&&typeof P=="object"}function x(P,O,B){var V={},U=Object.keys(O).map(function(K){if(B.only&&B.only.indexOf(K)===-1)return null;var ee=O[K];return o(P,ee,B,ee).then(function(ne){V[K]=ne})});return Promise.all(U).then(function(){return V})}var y=r(/\.json(\?.*)?$/i);function b(P,O,B){var V=s(B.from,O);return o(P,o.fetch(V,"text").then(JSON.parse),B)}var $=r(/^data:audio/);function T(P,O,B){var V=O.indexOf(",");return o(P,e.decode(O.slice(V+1)).buffer,B)}var C=r(/\.js(\?.*)?$/i);function R(P,O,B){var V=s(B.from,O);return o(P,o.fetch(V,"text").then(L),B)}function L(P){var O=P.indexOf("MIDI.Soundfont.");if(O<0)throw Error("Invalid MIDI.js Soundfont format");O=P.indexOf("=",O)+2;var B=P.lastIndexOf(",");return JSON.parse(P.slice(O,B)+"}")}t.exports&&(t.exports=o),typeof window<"u"&&(window.loadAudio=o)})(yx);var hM=yx.exports,xx={exports:{}},dM=pM;function pM(t){var e=t.createGain(),n=e._voltage=gM(t),r=Pr(n),s=Pr(n),o=Pr(n);return e._startAmount=Pr(s),e._endAmount=Pr(o),e._multiplier=Pr(r),e._multiplier.connect(e),e._startAmount.connect(e),e._endAmount.connect(e),e.value=r.gain,e.startValue=s.gain,e.endValue=o.gain,e.startValue.value=0,e.endValue.value=0,Object.defineProperties(e,fM),e}var fM={attack:{value:0,writable:!0},decay:{value:0,writable:!0},sustain:{value:1,writable:!0},release:{value:0,writable:!0},getReleaseDuration:{value:function(){return this.release}},start:{value:function(t){var e=this._multiplier.gain,n=this._startAmount.gain,r=this._endAmount.gain;this._voltage.start(t),this._decayFrom=this._decayFrom=t+this.attack,this._startedAt=t;var s=this.sustain;e.cancelScheduledValues(t),n.cancelScheduledValues(t),r.cancelScheduledValues(t),r.setValueAtTime(0,t),this.attack?(e.setValueAtTime(0,t),e.linearRampToValueAtTime(1,t+this.attack),n.setValueAtTime(1,t),n.linearRampToValueAtTime(0,t+this.attack)):(e.setValueAtTime(1,t),n.setValueAtTime(0,t)),this.decay&&e.setTargetAtTime(s,this._decayFrom,Bh(this.decay))}},stop:{value:function(t,e){e&&(t=t-this.release);var n=t+this.release;if(this.release){var r=this._multiplier.gain,s=this._startAmount.gain,o=this._endAmount.gain;r.cancelScheduledValues(t),s.cancelScheduledValues(t),o.cancelScheduledValues(t);var a=Bh(this.release);if(this.attack&&t<this._decayFrom){var i=yM(0,1,this._startedAt,this._decayFrom,t);r.linearRampToValueAtTime(i,t),s.linearRampToValueAtTime(1-i,t),s.setTargetAtTime(0,t,a)}o.setTargetAtTime(1,t,a),r.setTargetAtTime(0,t,a)}return this._voltage.stop(n),n}},onended:{get:function(){return this._voltage.onended},set:function(t){this._voltage.onended=t}}},mM=new Float32Array([1,1]);function gM(t){var e=t.createBufferSource(),n=t.createBuffer(1,2,t.sampleRate);return n.getChannelData(0).set(mM),e.buffer=n,e.loop=!0,e}function Pr(t){var e=t.context.createGain();return t.connect(e),e}function Bh(t){return Math.log(t+1)/Math.log(100)}function yM(t,e,n,r,s){var o=e-t,a=r-n,i=s-n,u=i/a,c=t+u*o;return c<=t&&(c=t),c>=e&&(c=e),c}var xM=dM,bM={},vM={gain:1,attack:.01,decay:.1,sustain:.9,release:.3,loop:!1,cents:0,loopStart:0,loopEnd:0};function wM(t,e,n){var r=!1,s=0,o={},a=t.createGain();a.gain.value=1;var i=Object.assign({},vM,n),u={context:t,out:a,opts:i};return e instanceof AudioBuffer?u.buffer=e:u.buffers=e,u.start=function(h,d,f){if(u.buffer&&h!==null)return u.start(null,h,d);var m=h?u.buffers[h]:u.buffer;if(m){if(!r){console.warn("SamplePlayer not connected to any node.");return}}else{console.warn("Buffer "+h+" not found.");return}var x=f||bM;d=Math.max(t.currentTime,d||0),u.emit("start",d,h,x);var y=l(h,m,x);return y.id=c(h,y),y.env.start(d),y.source.start(d),u.emit("started",d,y.id,y),x.duration&&y.stop(d+x.duration),y},u.play=function(h,d,f){return u.start(h,d,f)},u.stop=function(h,d){var f;return d=d||Object.keys(o),d.map(function(m){return f=o[m],f?(f.stop(h),f.id):null})},u.connect=function(h){return r=!0,a.connect(h),u},u.emit=function(h,d,f,m){u.onevent&&u.onevent(h,d,f,m);var x=u["on"+h];x&&x(d,f,m)},u;function c(h,d){return d.id=s++,o[d.id]=d,d.source.onended=function(){var f=t.currentTime;d.source.disconnect(),d.env.disconnect(),d.disconnect(),u.emit("ended",f,d.id,d)},d.id}function l(h,d,f){var m=t.createGain();return m.gain.value=0,m.connect(a),m.env=NM(t,f,i),m.env.connect(m.gain),m.source=t.createBufferSource(),m.source.buffer=d,m.source.connect(m),m.source.loop=f.loop||i.loop,m.source.playbackRate.value=SM(f.cents||i.cents),m.source.loopStart=f.loopStart||i.loopStart,m.source.loopEnd=f.loopEnd||i.loopEnd,m.stop=function(x){var y=x||t.currentTime;u.emit("stop",y,h);var b=m.env.stop(y);m.source.stop(b)},m}}function Vh(t){return typeof t=="number"}var $M=["attack","decay","sustain","release"];function NM(t,e,n){var r=xM(t),s=e.adsr||n.adsr;return $M.forEach(function(o,a){s?r[o]=s[a]:r[o]=e[o]||n[o]}),r.value.value=Vh(e.gain)?e.gain:Vh(n.gain)?n.gain:1,r}function SM(t){return t?Math.pow(2,t/1200):1}var CM=wM,TM=function(t){return t.on=function(e,n){if(arguments.length===1&&typeof e=="function")return t.on("event",e);var r="on"+e,s=t[r];return t[r]=s?EM(s,n):n,t},t};function EM(t,e){return function(n,r,s,o){t(n,r,s,o),e(n,r,s,o)}}var bx=/^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)\s*$/;function IM(){return bx}var kM=[0,2,4,5,7,9,11];function vx(t,e,n){if(typeof t!="string")return null;var r=bx.exec(t);if(!r||!e&&r[4])return null;var s={letter:r[1].toUpperCase(),acc:r[2].replace(/x/g,"##")};return s.pc=s.letter+s.acc,s.step=(s.letter.charCodeAt(0)+3)%7,s.alt=s.acc[0]==="b"?-s.acc.length:s.acc.length,s.chroma=kM[s.step]+s.alt,r[3]&&(s.oct=+r[3],s.midi=s.chroma+12*(s.oct+1),s.freq=wx(s.midi,n)),e&&(s.tonicOf=r[4]),s}function wx(t,e){return Math.pow(2,(t-69)/12)*(e||440)}var $x={parse:vx,regex:IM,midiToFreq:wx},_M=["letter","acc","pc","step","alt","chroma","oct","midi","freq"];_M.forEach(function(t){$x[t]=function(e){var n=vx(e);return n&&typeof n[t]<"u"?n[t]:null}});var RM=$x,AM=RM,OM=function(t){return t!==null&&t!==[]&&t>=0&&t<129},DM=function(t){return OM(t)?+t:AM.midi(t)},FM=function(t){if(t.buffers){var e=t.opts.map,n=typeof e=="function"?e:DM,r=function(o){return o?n(o)||o:null};t.buffers=PM(t.buffers,r);var s=t.start;t.start=function(o,a,i){var u=r(o),c=u%1;return c&&(u=Math.floor(u),i=Object.assign(i||{},{cents:Math.floor(c*100)})),s(u,a,i)}}return t};function PM(t,e){return Object.keys(t).reduce(function(n,r){return n[e(r)]=t[r],n},{})}var LM=Array.isArray,BM=function(t){return t&&typeof t=="object"},VM={},MM=function(t){return t.schedule=function(e,n){var r=t.context.currentTime,s=e<r?r:e;t.emit("schedule",s,n);var o,a,i,u;return n.map(function(c){if(c)LM(c)?(o=c[0],a=c[1]):(o=c.time,a=c);else return null;return BM(a)?(i=a.name||a.key||a.note||a.midi||null,u=a):(i=a,u=VM),t.start(i,s+(o||0),u)})},t};function ko(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Nx={exports:{}};(function(t,e){(function(n){t.exports=n()})(function(){return function n(r,s,o){function a(c,l){if(!s[c]){if(!r[c]){var h=typeof ko=="function"&&ko;if(!l&&h)return h(c,!0);if(i)return i(c,!0);var d=new Error("Cannot find module '"+c+"'");throw d.code="MODULE_NOT_FOUND",d}var f=s[c]={exports:{}};r[c][0].call(f.exports,function(m){var x=r[c][1][m];return a(x||m)},f,f.exports,n,r,s,o)}return s[c].exports}for(var i=typeof ko=="function"&&ko,u=0;u<o.length;u++)a(o[u]);return a}({1:[function(n,r,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=function(o){function a(i){if(this._event=i,this._data=i.data,this.receivedTime=i.receivedTime,this._data&&this._data.length<2){console.warn("Illegal MIDI message of length",this._data.length);return}switch(this._messageCode=i.data[0]&240,this.channel=i.data[0]&15,this._messageCode){case 128:this.messageType="noteoff",this.key=i.data[1]&127,this.velocity=i.data[2]&127;break;case 144:this.messageType="noteon",this.key=i.data[1]&127,this.velocity=i.data[2]&127;break;case 160:this.messageType="keypressure",this.key=i.data[1]&127,this.pressure=i.data[2]&127;break;case 176:this.messageType="controlchange",this.controllerNumber=i.data[1]&127,this.controllerValue=i.data[2]&127,this.controllerNumber===120&&this.controllerValue===0?this.channelModeMessage="allsoundoff":this.controllerNumber===121?this.channelModeMessage="resetallcontrollers":this.controllerNumber===122?this.controllerValue===0?this.channelModeMessage="localcontroloff":this.channelModeMessage="localcontrolon":this.controllerNumber===123&&this.controllerValue===0?this.channelModeMessage="allnotesoff":this.controllerNumber===124&&this.controllerValue===0?this.channelModeMessage="omnimodeoff":this.controllerNumber===125&&this.controllerValue===0?this.channelModeMessage="omnimodeon":this.controllerNumber===126?this.channelModeMessage="monomodeon":this.controllerNumber===127&&(this.channelModeMessage="polymodeon");break;case 192:this.messageType="programchange",this.program=i.data[1];break;case 208:this.messageType="channelpressure",this.pressure=i.data[1]&127;break;case 224:this.messageType="pitchbendchange";var u=i.data[2]&127,c=i.data[1]&127;this.pitchBend=(u<<8)+c;break}}return new a(o)},r.exports=s.default},{}]},{},[1])(1)})})(Nx);var UM=Nx.exports,WM=UM,zM=function(t){return t.listenToMidi=function(e,n){var r={},s=n||{},o=s.gain||function(a){return a/127};return e.onmidimessage=function(a){var i=a.messageType?a:WM(a);if(i.messageType==="noteon"&&i.velocity===0&&(i.messageType="noteoff"),!(s.channel&&i.channel!==s.channel))switch(i.messageType){case"noteon":r[i.key]=t.play(i.key,0,{gain:o(i.velocity)});break;case"noteoff":r[i.key]&&(r[i.key].stop(),delete r[i.key]);break}},t},t};(function(t){var e=CM,n=TM,r=FM,s=MM,o=zM;function a(i,u,c){return o(s(r(n(e(i,u,c)))))}t.exports&&(t.exports=a),typeof window<"u"&&(window.SamplePlayer=a)})(xx);var GM=xx.exports;function Mh(t,e){return Array(e+1).join(t)}function uc(t){return typeof t=="number"}function jM(t){return typeof t=="string"}function HM(t){return typeof t<"u"}function Sx(t,e){return Math.pow(2,(t-69)/12)*(e||440)}var Cx=/^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)\s*$/;function KM(){return Cx}var qM=[0,2,4,5,7,9,11];function In(t,e,n){if(typeof t!="string")return null;var r=Cx.exec(t);if(!r||!e&&r[4])return null;var s={letter:r[1].toUpperCase(),acc:r[2].replace(/x/g,"##")};s.pc=s.letter+s.acc,s.step=(s.letter.charCodeAt(0)+3)%7,s.alt=s.acc[0]==="b"?-s.acc.length:s.acc.length;var o=qM[s.step]+s.alt;return s.chroma=o<0?12+o:o%12,r[3]&&(s.oct=+r[3],s.midi=o+12*(s.oct+1),s.freq=Sx(s.midi,n)),e&&(s.tonicOf=r[4]),s}var XM="CDEFGAB";function YM(t){return uc(t)?t<0?Mh("b",-t):Mh("#",t):""}function QM(t){return uc(t)?""+t:""}function Tx(t,e,n){return t===null||typeof t>"u"?null:t.step?Tx(t.step,t.alt,t.oct):t<0||t>6?null:XM.charAt(t)+YM(e)+QM(n)}function Ex(t){if((uc(t)||jM(t))&&t>=0&&t<128)return+t;var e=In(t);return e&&HM(e.midi)?e.midi:null}function ZM(t,e){var n=Ex(t);return n===null?null:Sx(n,e)}function JM(t){return(In(t)||{}).letter}function eU(t){return(In(t)||{}).acc}function tU(t){return(In(t)||{}).pc}function nU(t){return(In(t)||{}).step}function rU(t){return(In(t)||{}).alt}function sU(t){return(In(t)||{}).chroma}function oU(t){return(In(t)||{}).oct}const aU=Object.freeze(Object.defineProperty({__proto__:null,acc:eU,alt:rU,build:Tx,chroma:sU,freq:ZM,letter:JM,midi:Ex,oct:oU,parse:In,pc:tU,regex:KM,step:nU},Symbol.toStringTag,{value:"Module"})),iU=Xh(aU);var yi,Uh;function uU(){if(Uh)return yi;Uh=1;var t=iU;function e(s,o){if(console.warn("new Soundfont() is deprected"),console.log("Please use Soundfont.instrument() instead of new Soundfont().instrument()"),!(this instanceof e))return new e(s);this.nameToUrl=o||e.nameToUrl,this.ctx=s,this.instruments={},this.promises=[]}e.prototype.onready=function(s){console.warn("deprecated API"),console.log("Please use Promise.all(Soundfont.instrument(), Soundfont.instrument()).then() instead of new Soundfont().onready()"),Promise.all(this.promises).then(s)},e.prototype.instrument=function(s,o){console.warn("new Soundfont().instrument() is deprecated."),console.log("Please use Soundfont.instrument() instead.");var a=this.ctx;if(s=s||"default",s in this.instruments)return this.instruments[s];var i={name:s,play:r(a,o)};if(this.instruments[s]=i,s!=="default"){var u=e.instrument(a,s,o).then(function(c){return i.play=c.play,i});this.promises.push(u),i.onready=function(c){console.warn("onready is deprecated. Use Soundfont.instrument().then()"),u.then(c)}}else i.onready=function(c){console.warn("onready is deprecated. Use Soundfont.instrument().then()"),c()};return i};function n(s,o,a){return console.warn("Soundfont.loadBuffers is deprecate."),console.log("Use Soundfont.instrument(..) and get buffers properties from the result."),e.instrument(s,o,a).then(function(i){return i.buffers})}e.loadBuffers=n;function r(s,o){return o=o||{},function(a,i,u,c){console.warn("The oscillator player is deprecated."),console.log("Starting with version 0.9.0 you will have to wait until the soundfont is loaded to play sounds.");var l=a>0&&a<129?+a:t.midi(a),h=l?t.midiToFreq(l,440):null;if(h){u=u||.2,c=c||{};var d=c.destination||o.destination||s.destination,f=c.vcoType||o.vcoType||"sine",m=c.gain||o.gain||.4,x=s.createOscillator();x.type=f,x.frequency.value=h;var y=s.createGain();return y.gain.value=m,x.connect(y),y.connect(d),x.start(i),u>0&&x.stop(i+u),x}}}return e.noteToMidi=t.midi,yi=e,yi}(function(t){var e=hM,n=GM;function r(i,u,c){if(arguments.length===1)return function(m,x){return r(i,m,x)};var l=c||{},h=l.isSoundfontURL||s,d=l.nameToUrl||o,f=h(u)?u:d(u,l.soundfont,l.format);return e(i,f,{only:l.only||l.notes}).then(function(m){var x=n(i,m,l).connect(l.destination?l.destination:i.destination);return x.url=f,x.name=u,x})}function s(i){return/\.js(\?.*)?$/i.test(i)}function o(i,u,c){return c=c==="ogg"?c:"mp3",u=u==="FluidR3_GM"?u:"MusyngKite","https://gleitz.github.io/midi-js-soundfonts/"+u+"/"+i+"-"+c+".js"}var a=uU();a.instrument=r,a.nameToUrl=o,t.exports&&(t.exports=a),typeof window<"u"&&(window.Soundfont=a)})(gx);var cU=gx.exports;const cc=js(cU),lU=()=>{const t=Le.useRef(null),e=Le.useRef(null),[n,r]=Le.useState(null),[s,o]=Le.useState(null),[a,i]=Le.useState(!0),[u,c]=Le.useState(null),l=Le.useRef(new Set),h=40,d=150,f=24,m=100,x={white:["C4","D4","E4","F4","G4","A4","B4","C5","D5","E5","F5","G5","A5","B5"],black:["C#4","D#4","F#4","G#4","A#4","C#5","D#5","F#5","G#5","A#5"]},$=(800-x.white.length*h)/2,T=400;Le.useEffect(()=>{const O=new AudioContext;cc.instrument(O,"acoustic_grand_piano").then(B=>{c(B)})},[]),Le.useEffect(()=>{(async()=>{await Ob("webgl");const B=await dk(Yo.MediaPipeHands,{runtime:"tfjs",modelType:"lite"});r(B)})()},[]),Le.useEffect(()=>{(async()=>{const B=await navigator.mediaDevices.getUserMedia({video:!0});t.current&&(t.current.srcObject=B),o(B)})()},[]);const C=(O,B,V,U,K)=>O.x>=B&&O.x<=B+U&&O.y>=V&&O.y<=V+K,R=O=>{u&&!l.current.has(O)&&(l.current.add(O),u.play(O))},L=O=>{u&&l.current.has(O)&&l.current.delete(O)};Le.useEffect(()=>{(async()=>{if(!n||!t.current||!e.current)return;const B=t.current,V=e.current,U=V.getContext("2d");B.width=800,B.height=600,V.width=800,V.height=600;const K=async()=>{const ee=await n.estimateHands(B,{flipHorizontal:!0});U.clearRect(0,0,V.width,V.height);const ne=x.white.map((J,me)=>({x:$+me*h,y:T,width:h,height:d,note:J})),se=[];if(x.black.forEach((J,me)=>{const be=Math.floor(me/5),Ne=me%5,ut=$+([0,1,3,4,5][Ne]+be*7)*h-f/2;se.push({x:ut,y:T,width:f,height:m,note:J})}),ne.forEach(J=>{U.fillStyle=l.current.has(J.note)?"rgba(200, 200, 255, 0.7)":"rgba(255, 255, 255, 0.7)",U.strokeStyle="black",U.lineWidth=1,U.fillRect(J.x,J.y,J.width,J.height),U.strokeRect(J.x,J.y,J.width,J.height),U.fillStyle="black",U.font="12px Arial",U.fillText(J.note,J.x+5,J.y+J.height-10)}),se.forEach(J=>{U.fillStyle=l.current.has(J.note)?"rgba(100, 100, 155, 1)":"rgba(0, 0, 0, 0.7)",U.strokeStyle="black",U.lineWidth=1,U.fillRect(J.x,J.y,J.width,J.height),U.strokeRect(J.x,J.y,J.width,J.height),U.fillStyle="white",U.font="10px Arial",U.fillText(J.note,J.x+2,J.y+J.height-10)}),ee.length>0){const J=[4,8,12,16,20],me=[...se,...ne],be=new Set;ee.forEach(Ne=>{J.forEach(St=>{const ut=Ne.keypoints[St];ut&&(U.beginPath(),U.arc(ut.x,ut.y,5,0,2*Math.PI),U.fillStyle="rgba(255, 0, 0, 0.7)",U.fill(),me.forEach(pt=>{C(ut,pt.x,pt.y,pt.width,pt.height)&&(be.add(pt.note),R(pt.note))}))})}),l.current.forEach(Ne=>{be.has(Ne)||L(Ne)})}requestAnimationFrame(K)};requestAnimationFrame(K)})()},[n]);const P=async()=>{if(a)s&&(s.getTracks().forEach(O=>O.stop()),o(null));else{const O=await navigator.mediaDevices.getUserMedia({video:!0});t.current&&(t.current.srcObject=O),o(O)}i(!a)};return ve.jsxs("div",{className:"relative w-full h-screen flex flex-col items-center justify-center",children:[ve.jsx("button",{onClick:P,className:"mb-4 px-4 py-2 bg-blue-500 text-white rounded",children:a?"Turn Off Camera":"Turn On Camera"}),ve.jsxs("div",{className:"relative w-[800px] h-[600px]",children:[ve.jsx("video",{ref:t,autoPlay:!0,playsInline:!0,className:"absolute w-full h-full transform scale-x-[-1]"}),ve.jsx("canvas",{ref:e,className:"absolute w-full h-full"})]})]})};function hU({setHighlightedNote:t}){const[e,n]=Le.useState(null),[r,s]=Le.useState(null),[o,a]=Le.useState(!1),i=["C3","C#3","D3","D#3","E3","F3","F#3","G3","G#3","A3","A#3","B3"];Le.useEffect(()=>{cc.instrument(new AudioContext,"acoustic_grand_piano").then(s)},[]);const u=()=>{const l=i[Math.floor(Math.random()*i.length)];n(l),t(l),a(!1),r&&r.play(l)},c=()=>{a(!0)};return ve.jsxs("div",{children:[ve.jsx("div",{className:"flex-center flex-wrap gap-4 pt-6 pb-3",children:ve.jsx("button",{className:"button-85",onClick:u,children:"Play Random Note"})}),e&&!o&&ve.jsx("p",{onClick:c,children:"Played Note: ██"}),o&&ve.jsxs("p",{children:["Played Note: ",e]})]})}var dU=pU;function pU(t,e,n){if(t!=null&&typeof t!="number")throw new Error("start must be a number or null");if(e!=null&&typeof e!="number")throw new Error("stop must be a number or null");if(n!=null&&typeof n!="number")throw new Error("step must be a number or null");e==null&&(e=t||0,t=0),n==null&&(n=e>t?1:-1);for(var r=[],s=t<e;s?t<e:t>e;t+=n)r.push(t);return r}const lc=js(dU);var Ix={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(t){(function(){var e={}.hasOwnProperty;function n(){for(var o="",a=0;a<arguments.length;a++){var i=arguments[a];i&&(o=s(o,r(i)))}return o}function r(o){if(typeof o=="string"||typeof o=="number")return o;if(typeof o!="object")return"";if(Array.isArray(o))return n.apply(null,o);if(o.toString!==Object.prototype.toString&&!o.toString.toString().includes("[native code]"))return o.toString();var a="";for(var i in o)e.call(o,i)&&o[i]&&(a=s(a,i));return a}function s(o,a){return a?o?o+" "+a:o+a:o}t.exports?(n.default=n,t.exports=n):window.classNames=n})()})(Ix);var fU=Ix.exports;const hc=js(fU);var mU=200,dc="__lodash_hash_undefined__",gU=9007199254740991,yU="[object Arguments]",xU="[object Function]",bU="[object GeneratorFunction]",vU=/[\\^$.*+?()[\]{}|]/g,wU=/^\[object .+?Constructor\]$/,$U=typeof bt=="object"&&bt&&bt.Object===Object&&bt,NU=typeof self=="object"&&self&&self.Object===Object&&self,pc=$U||NU||Function("return this")();function SU(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}function CU(t,e){var n=t?t.length:0;return!!n&&IU(t,e,0)>-1}function TU(t,e){for(var n=-1,r=e.length,s=t.length;++n<r;)t[s+n]=e[n];return t}function EU(t,e,n,r){for(var s=t.length,o=n+-1;++o<s;)if(e(t[o],o,t))return o;return-1}function IU(t,e,n){if(e!==e)return EU(t,kU,n);for(var r=n-1,s=t.length;++r<s;)if(t[r]===e)return r;return-1}function kU(t){return t!==t}function _U(t,e){return t.has(e)}function RU(t,e){return t==null?void 0:t[e]}function AU(t){var e=!1;if(t!=null&&typeof t.toString!="function")try{e=!!(t+"")}catch{}return e}var OU=Array.prototype,DU=Function.prototype,fc=Object.prototype,xi=pc["__core-js_shared__"],Wh=function(){var t=/[^.]+$/.exec(xi&&xi.keys&&xi.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),kx=DU.toString,Ca=fc.hasOwnProperty,_x=fc.toString,FU=RegExp("^"+kx.call(Ca).replace(vU,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),zh=pc.Symbol,PU=fc.propertyIsEnumerable,LU=OU.splice,Gh=zh?zh.isConcatSpreadable:void 0,jh=Math.max,BU=Rx(pc,"Map"),Gs=Rx(Object,"create");function wr(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function VU(){this.__data__=Gs?Gs(null):{}}function MU(t){return this.has(t)&&delete this.__data__[t]}function UU(t){var e=this.__data__;if(Gs){var n=e[t];return n===dc?void 0:n}return Ca.call(e,t)?e[t]:void 0}function WU(t){var e=this.__data__;return Gs?e[t]!==void 0:Ca.call(e,t)}function zU(t,e){var n=this.__data__;return n[t]=Gs&&e===void 0?dc:e,this}wr.prototype.clear=VU;wr.prototype.delete=MU;wr.prototype.get=UU;wr.prototype.has=WU;wr.prototype.set=zU;function ds(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function GU(){this.__data__=[]}function jU(t){var e=this.__data__,n=Ta(e,t);if(n<0)return!1;var r=e.length-1;return n==r?e.pop():LU.call(e,n,1),!0}function HU(t){var e=this.__data__,n=Ta(e,t);return n<0?void 0:e[n][1]}function KU(t){return Ta(this.__data__,t)>-1}function qU(t,e){var n=this.__data__,r=Ta(n,t);return r<0?n.push([t,e]):n[r][1]=e,this}ds.prototype.clear=GU;ds.prototype.delete=jU;ds.prototype.get=HU;ds.prototype.has=KU;ds.prototype.set=qU;function ps(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function XU(){this.__data__={hash:new wr,map:new(BU||ds),string:new wr}}function YU(t){return Ea(this,t).delete(t)}function QU(t){return Ea(this,t).get(t)}function ZU(t){return Ea(this,t).has(t)}function JU(t,e){return Ea(this,t).set(t,e),this}ps.prototype.clear=XU;ps.prototype.delete=YU;ps.prototype.get=QU;ps.prototype.has=ZU;ps.prototype.set=JU;function na(t){var e=-1,n=t?t.length:0;for(this.__data__=new ps;++e<n;)this.add(t[e])}function eW(t){return this.__data__.set(t,dc),this}function tW(t){return this.__data__.has(t)}na.prototype.add=na.prototype.push=eW;na.prototype.has=tW;function Ta(t,e){for(var n=t.length;n--;)if(hW(t[n][0],e))return n;return-1}function nW(t,e,n,r){var s=-1,o=CU,a=!0,i=t.length,u=[],c=e.length;if(!i)return u;e.length>=mU&&(o=_U,a=!1,e=new na(e));e:for(;++s<i;){var l=t[s],h=l;if(l=l!==0?l:0,a&&h===h){for(var d=c;d--;)if(e[d]===h)continue e;u.push(l)}else o(e,h,r)||u.push(l)}return u}function rW(t,e,n,r,s){var o=-1,a=t.length;for(n||(n=aW),s||(s=[]);++o<a;){var i=t[o];n(i)&&TU(s,i)}return s}function sW(t){if(!Ox(t)||uW(t))return!1;var e=Ax(t)||AU(t)?FU:wU;return e.test(cW(t))}function oW(t,e){return e=jh(e===void 0?t.length-1:e,0),function(){for(var n=arguments,r=-1,s=jh(n.length-e,0),o=Array(s);++r<s;)o[r]=n[e+r];r=-1;for(var a=Array(e+1);++r<e;)a[r]=n[r];return a[e]=o,SU(t,this,a)}}function Ea(t,e){var n=t.__data__;return iW(e)?n[typeof e=="string"?"string":"hash"]:n.map}function Rx(t,e){var n=RU(t,e);return sW(n)?n:void 0}function aW(t){return pW(t)||dW(t)||!!(Gh&&t&&t[Gh])}function iW(t){var e=typeof t;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?t!=="__proto__":t===null}function uW(t){return!!Wh&&Wh in t}function cW(t){if(t!=null){try{return kx.call(t)}catch{}try{return t+""}catch{}}return""}var lW=oW(function(t,e){return cu(t)?nW(t,rW(e,1,cu)):[]});function hW(t,e){return t===e||t!==t&&e!==e}function dW(t){return cu(t)&&Ca.call(t,"callee")&&(!PU.call(t,"callee")||_x.call(t)==yU)}var pW=Array.isArray;function fW(t){return t!=null&&mW(t.length)&&!Ax(t)}function cu(t){return gW(t)&&fW(t)}function Ax(t){var e=Ox(t)?_x.call(t):"";return e==xU||e==bU}function mW(t){return typeof t=="number"&&t>-1&&t%1==0&&t<=gU}function Ox(t){var e=typeof t;return!!t&&(e=="object"||e=="function")}function gW(t){return!!t&&typeof t=="object"}var yW=lW;const Hh=js(yW);function Ia(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function xW(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ka(t,e,n){return e&&xW(t.prototype,e),t}function _e(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function lu(){return lu=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},lu.apply(this,arguments)}function _a(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&hu(t,e)}function Jr(t){return Jr=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},Jr(t)}function hu(t,e){return hu=Object.setPrototypeOf||function(r,s){return r.__proto__=s,r},hu(t,e)}function bW(t,e){if(t==null)return{};var n={},r=Object.keys(t),s,o;for(o=0;o<r.length;o++)s=r[o],!(e.indexOf(s)>=0)&&(n[s]=t[s]);return n}function vW(t,e){if(t==null)return{};var n=bW(t,e),r,s;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(s=0;s<o.length;s++)r=o[s],!(e.indexOf(r)>=0)&&Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}function je(t){if(t===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Ra(t,e){return e&&(typeof e=="object"||typeof e=="function")?e:je(t)}function wW(t,e){return $W(t)||NW(t,e)||SW()}function $W(t){if(Array.isArray(t))return t}function NW(t,e){var n=[],r=!0,s=!1,o=void 0;try{for(var a=t[Symbol.iterator](),i;!(r=(i=a.next()).done)&&(n.push(i.value),!(e&&n.length===e));r=!0);}catch(u){s=!0,o=u}finally{try{!r&&a.return!=null&&a.return()}finally{if(s)throw o}}return n}function SW(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}var CW=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],TW=["Db","Eb","Gb","Ab","Bb"],EW={C:0,"C#":1,Db:1,D:2,"D#":3,Eb:3,E:4,F:5,"F#":6,Gb:6,G:7,"G#":8,Ab:8,A:9,"A#":10,Bb:10,B:11},ra=12,mc=ra,gc=127,IW=/([a-g])([#b]?)(\d+)/,du=12;function kW(t){if(!t)throw Error("Invalid note argument");var e=IW.exec(t.toLowerCase());if(!e)throw Error("Invalid note argument");var n=wW(e,4),r=n[1],s=n[2],o=n[3],a="".concat(r.toUpperCase()).concat(s),i=EW[a];if(i==null)throw Error("Invalid note argument");return ra+i+du*parseInt(o,10)}function _W(t){var e=(t-ra)%du,n=Math.floor((t-ra)/du),r=CW[e];return{note:"".concat(r).concat(n),pitchName:r,octave:n,midiNumber:t,isAccidental:TW.includes(r)}}function RW(){return lc(mc,gc+1).reduce(function(t,e){return t[e]=_W(e),t},{})}var AW=RW();function Dx(t){var e=AW[t];if(!e)throw Error("Invalid MIDI number");return e}var OW=lc(mc,gc+1).filter(function(t){return!Dx(t).isAccidental}),vn={fromNote:kW,getAttributes:Dx,MIN_MIDI_NUMBER:mc,MAX_MIDI_NUMBER:gc,NATURAL_MIDI_NUMBERS:OW},yc=function(t){_a(e,t);function e(){var n,r;Ia(this,e);for(var s=arguments.length,o=new Array(s),a=0;a<s;a++)o[a]=arguments[a];return r=Ra(this,(n=Jr(e)).call.apply(n,[this].concat(o))),_e(je(r),"onPlayNoteInput",function(){r.props.onPlayNoteInput(r.props.midiNumber)}),_e(je(r),"onStopNoteInput",function(){r.props.onStopNoteInput(r.props.midiNumber)}),r}return ka(e,[{key:"getAbsoluteKeyPosition",value:function(r){var s=7,o=vn.getAttributes(r),a=o.octave,i=o.pitchName,u=this.props.pitchPositions[i],c=s*a;return u+c}},{key:"getRelativeKeyPosition",value:function(r){return this.getAbsoluteKeyPosition(r)-this.getAbsoluteKeyPosition(this.props.noteRange.first)}},{key:"render",value:function(){var r=this.props,s=r.naturalKeyWidth,o=r.accidentalWidthRatio,a=r.midiNumber,i=r.gliss,u=r.useTouchEvents,c=r.accidental,l=r.active,h=r.disabled,d=r.children;return Vt.createElement("div",{className:hc("ReactPiano__Key",{"ReactPiano__Key--accidental":c,"ReactPiano__Key--natural":!c,"ReactPiano__Key--disabled":h,"ReactPiano__Key--active":l}),style:{left:Kh(this.getRelativeKeyPosition(a)*s),width:Kh(c?o*s:s)},onMouseDown:u?null:this.onPlayNoteInput,onMouseUp:u?null:this.onStopNoteInput,onMouseEnter:i?this.onPlayNoteInput:null,onMouseLeave:this.onStopNoteInput,onTouchStart:u?this.onPlayNoteInput:null,onTouchCancel:u?this.onStopNoteInput:null,onTouchEnd:u?this.onStopNoteInput:null},Vt.createElement("div",{className:"ReactPiano__NoteLabelContainer"},d))}}]),e}(Vt.Component);_e(yc,"propTypes",{midiNumber:oe.number.isRequired,naturalKeyWidth:oe.number.isRequired,gliss:oe.bool.isRequired,useTouchEvents:oe.bool.isRequired,accidental:oe.bool.isRequired,active:oe.bool.isRequired,disabled:oe.bool.isRequired,onPlayNoteInput:oe.func.isRequired,onStopNoteInput:oe.func.isRequired,accidentalWidthRatio:oe.number.isRequired,pitchPositions:oe.object.isRequired,children:oe.node});_e(yc,"defaultProps",{accidentalWidthRatio:.65,pitchPositions:{C:0,Db:.55,D:1,Eb:1.8,E:2,F:3,Gb:3.5,G:4,Ab:4.7,A:5,Bb:5.85,B:6}});function Kh(t){return"".concat(t*100,"%")}var xc=function(t){_a(e,t);function e(){return Ia(this,e),Ra(this,Jr(e).apply(this,arguments))}return ka(e,[{key:"getMidiNumbers",value:function(){return lc(this.props.noteRange.first,this.props.noteRange.last+1)}},{key:"getNaturalKeyCount",value:function(){return this.getMidiNumbers().filter(function(r){var s=vn.getAttributes(r),o=s.isAccidental;return!o}).length}},{key:"getNaturalKeyWidth",value:function(){return 1/this.getNaturalKeyCount()}},{key:"getWidth",value:function(){return this.props.width?this.props.width:"100%"}},{key:"getHeight",value:function(){if(!this.props.width)return"100%";var r=this.props.width*this.getNaturalKeyWidth();return"".concat(r/this.props.keyWidthToHeight,"px")}},{key:"render",value:function(){var r=this,s=this.getNaturalKeyWidth();return Vt.createElement("div",{className:hc("ReactPiano__Keyboard",this.props.className),style:{width:this.getWidth(),height:this.getHeight()}},this.getMidiNumbers().map(function(o){var a=vn.getAttributes(o);a.note;var i=a.isAccidental,u=!r.props.disabled&&r.props.activeNotes.includes(o);return Vt.createElement(yc,{naturalKeyWidth:s,midiNumber:o,noteRange:r.props.noteRange,active:u,accidental:i,disabled:r.props.disabled,onPlayNoteInput:r.props.onPlayNoteInput,onStopNoteInput:r.props.onStopNoteInput,gliss:r.props.gliss,useTouchEvents:r.props.useTouchEvents,key:o},r.props.disabled?null:r.props.renderNoteLabel({isActive:u,isAccidental:i,midiNumber:o}))}))}}]),e}(Vt.Component);_e(xc,"propTypes",{noteRange:DW,activeNotes:oe.arrayOf(oe.number),onPlayNoteInput:oe.func.isRequired,onStopNoteInput:oe.func.isRequired,renderNoteLabel:oe.func.isRequired,keyWidthToHeight:oe.number.isRequired,className:oe.string,disabled:oe.bool,gliss:oe.bool,useTouchEvents:oe.bool,width:oe.number});_e(xc,"defaultProps",{disabled:!1,gliss:!1,useTouchEvents:!1,keyWidthToHeight:.33,renderNoteLabel:function(){}});function qh(t){return typeof t!="number"?!1:vn.NATURAL_MIDI_NUMBERS.includes(t)}function DW(t,e,n){var r=t[e],s=r.first,o=r.last;if(!s||!o)return new Error("Invalid prop ".concat(e," supplied to ").concat(n,". ").concat(e," must be an object with .first and .last values."));if(!qh(s)||!qh(o))return new Error("Invalid prop ".concat(e," supplied to ").concat(n,". ").concat(e," values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes)."));if(s>=o)return new Error("Invalid prop ".concat(e," supplied to ").concat(n,". ").concat(e,".first must be smaller than ").concat(e,".last."))}var bc=function(t){_a(e,t);function e(){var n,r;Ia(this,e);for(var s=arguments.length,o=new Array(s),a=0;a<s;a++)o[a]=arguments[a];return r=Ra(this,(n=Jr(e)).call.apply(n,[this].concat(o))),_e(je(r),"state",{isMouseDown:!1,useTouchEvents:!1}),_e(je(r),"handleNoteChanges",function(i){var u=i.prevActiveNotes,c=i.nextActiveNotes;if(!r.props.disabled){var l=Hh(u,c),h=Hh(c,u);h.forEach(function(d){r.props.playNote(d)}),l.forEach(function(d){r.props.stopNote(d)})}}),_e(je(r),"getMidiNumberForKey",function(i){if(!r.props.keyboardShortcuts)return null;var u=r.props.keyboardShortcuts.find(function(c){return c.key===i});return u&&u.midiNumber}),_e(je(r),"getKeyForMidiNumber",function(i){if(!r.props.keyboardShortcuts)return null;var u=r.props.keyboardShortcuts.find(function(c){return c.midiNumber===i});return u&&u.key}),_e(je(r),"onKeyDown",function(i){if(!(i.ctrlKey||i.metaKey||i.shiftKey)){var u=r.getMidiNumberForKey(i.key);u&&r.onPlayNoteInput(u)}}),_e(je(r),"onKeyUp",function(i){var u=r.getMidiNumberForKey(i.key);u&&r.onStopNoteInput(u)}),_e(je(r),"onPlayNoteInput",function(i){r.props.disabled||r.props.onPlayNoteInput(i,r.props.activeNotes)}),_e(je(r),"onStopNoteInput",function(i){r.props.disabled||r.props.onStopNoteInput(i,r.props.activeNotes)}),_e(je(r),"onMouseDown",function(){r.setState({isMouseDown:!0})}),_e(je(r),"onMouseUp",function(){r.setState({isMouseDown:!1})}),_e(je(r),"onTouchStart",function(){r.setState({useTouchEvents:!0})}),_e(je(r),"renderNoteLabel",function(i){var u=i.midiNumber,c=i.isActive,l=i.isAccidental,h=r.getKeyForMidiNumber(u);return r.props.renderNoteLabel({keyboardShortcut:h,midiNumber:u,isActive:c,isAccidental:l})}),r}return ka(e,[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.onKeyDown),window.addEventListener("keyup",this.onKeyUp)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp)}},{key:"componentDidUpdate",value:function(r,s){this.props.activeNotes!==r.activeNotes&&this.handleNoteChanges({prevActiveNotes:r.activeNotes||[],nextActiveNotes:this.props.activeNotes||[]})}},{key:"render",value:function(){return Vt.createElement("div",{style:{width:"100%",height:"100%"},onMouseDown:this.onMouseDown,onMouseUp:this.onMouseUp,onTouchStart:this.onTouchStart,"data-testid":"container"},Vt.createElement(xc,{noteRange:this.props.noteRange,onPlayNoteInput:this.onPlayNoteInput,onStopNoteInput:this.onStopNoteInput,activeNotes:this.props.activeNotes,className:this.props.className,disabled:this.props.disabled,width:this.props.width,keyWidthToHeight:this.props.keyWidthToHeight,gliss:this.state.isMouseDown,useTouchEvents:this.state.useTouchEvents,renderNoteLabel:this.renderNoteLabel}))}}]),e}(Vt.Component);_e(bc,"propTypes",{noteRange:oe.object.isRequired,activeNotes:oe.arrayOf(oe.number.isRequired).isRequired,playNote:oe.func.isRequired,stopNote:oe.func.isRequired,onPlayNoteInput:oe.func.isRequired,onStopNoteInput:oe.func.isRequired,renderNoteLabel:oe.func.isRequired,className:oe.string,disabled:oe.bool,width:oe.number,keyWidthToHeight:oe.number,keyboardShortcuts:oe.arrayOf(oe.shape({key:oe.string.isRequired,midiNumber:oe.number.isRequired}))});_e(bc,"defaultProps",{renderNoteLabel:function(e){var n=e.keyboardShortcut;e.midiNumber;var r=e.isActive,s=e.isAccidental;return n?Vt.createElement("div",{className:hc("ReactPiano__NoteLabel",{"ReactPiano__NoteLabel--active":r,"ReactPiano__NoteLabel--accidental":s,"ReactPiano__NoteLabel--natural":!s})},n):null}});var Fx=function(t){_a(e,t);function e(){var n,r;Ia(this,e);for(var s=arguments.length,o=new Array(s),a=0;a<s;a++)o[a]=arguments[a];return r=Ra(this,(n=Jr(e)).call.apply(n,[this].concat(o))),_e(je(r),"state",{activeNotes:r.props.activeNotes||[]}),_e(je(r),"handlePlayNoteInput",function(i){r.setState(function(u){return r.props.onPlayNoteInput&&r.props.onPlayNoteInput(i,{prevActiveNotes:u.activeNotes}),u.activeNotes.includes(i)?null:{activeNotes:u.activeNotes.concat(i)}})}),_e(je(r),"handleStopNoteInput",function(i){r.setState(function(u){return r.props.onStopNoteInput&&r.props.onStopNoteInput(i,{prevActiveNotes:r.state.activeNotes}),{activeNotes:u.activeNotes.filter(function(c){return i!==c})}})}),r}return ka(e,[{key:"componentDidUpdate",value:function(r){r.activeNotes!==this.props.activeNotes&&this.state.activeNotes!==this.props.activeNotes&&this.setState({activeNotes:this.props.activeNotes||[]})}},{key:"render",value:function(){var r=this.props;r.activeNotes,r.onPlayNoteInput,r.onStopNoteInput;var s=vW(r,["activeNotes","onPlayNoteInput","onStopNoteInput"]);return Vt.createElement(bc,lu({activeNotes:this.state.activeNotes,onPlayNoteInput:this.handlePlayNoteInput,onStopNoteInput:this.handleStopNoteInput},s))}}]),e}(Vt.Component);_e(Fx,"propTypes",{noteRange:oe.object.isRequired,activeNotes:oe.arrayOf(oe.number.isRequired),playNote:oe.func.isRequired,stopNote:oe.func.isRequired,onPlayNoteInput:oe.func,onStopNoteInput:oe.func,renderNoteLabel:oe.func,className:oe.string,disabled:oe.bool,width:oe.number,keyWidthToHeight:oe.number,keyboardShortcuts:oe.arrayOf(oe.shape({key:oe.string.isRequired,midiNumber:oe.number.isRequired}))});const FW=({highlightedNote:t})=>{const[e,n]=Le.useState(null),[r,s]=Le.useState(null),[o,a]=Le.useState([]),i=vn.fromNote("c4"),u=vn.fromNote("b4");Le.useEffect(()=>{const x=new(window.AudioContext||window.webkitAudioContext);return n(x),cc.instrument(x,"acoustic_grand_piano").then(y=>{s(y)}),()=>{e&&e.close()}},[]);const c=x=>{if(r){const y=vn.getAttributes(x).note;r.play(y),a(b=>[...b,y].slice(-8))}},l=x=>{r&&r.stop()},h=x=>{if(!t)return!1;const y=f(x),b=f(t);return y===b},d={Db:"C#",Eb:"D#",Gb:"F#",Ab:"G#",Bb:"A#"},f=x=>{const y=x.slice(0,-1),b=x.slice(-1);return`${d[y]||y}${b}`},m=x=>{const y=["C#","D#","F#","G#","A#"],b=x.slice(0,-1);return y.includes(b)};return ve.jsxs("div",{className:"pl-4",children:[ve.jsx(Fx,{noteRange:{first:i,last:u},playNote:c,stopNote:l,width:600,renderNoteLabel:({midiNumber:x})=>{const y=vn.getAttributes(x).note,b=f(y),$=h(y),T=m(b);return ve.jsx("span",{className:`piano-note-label ${$?"highlighted":""} ${T?"sharp-note":"non-sharp-note"}`,children:b})},renderKey:({midiNumber:x})=>{const y=vn.getAttributes(x).note,b=h(y),$=m(y);return ve.jsx("div",{className:`piano-key ${b?"highlighted":""} ${$?"sharp-key":"non-sharp-key"}`},x)}}),ve.jsxs("div",{children:[ve.jsx("h3",{className:"mt-5",children:"Notes Played:"}),ve.jsx("p",{children:o.map((x,y)=>ve.jsxs("span",{className:`${y<o.length-1?"text-gray-500":"text-black dark:text-white"}`,children:[f(x),y<o.length-1&&", "]},y))})]})]})};function PW(){const[t,e]=Le.useState(null),[n,r]=Le.useState(!1),s=T0(),o=()=>{r(!0)};return ve.jsxs("div",{className:"text-center",children:[ve.jsx("nav",{className:"mt-10 mr-10 text-2xl flex justify-end",children:ve.jsx("a",{className:"navLink",onClick:()=>s("/tools"),children:ve.jsx(E0,{icon:I0.faHome,style:{fontSize:"30px"}})})}),ve.jsx(hU,{setHighlightedNote:e}),ve.jsx("button",{className:"button-89 mb-5 mt-3",onClick:o,children:"Send Note to Keyboard"}),ve.jsx(FW,{highlightedNote:n?t:null})]})}function VW(){const[t,e]=Le.useState(!1);return ve.jsxs("div",{className:"flex flex-col items-center gap-4 p-4",children:[ve.jsx("button",{className:"button-89",onClick:()=>e(n=>!n),children:t?"Switch to Normal Piano":"Switch to Webcam Piano"}),ve.jsx("div",{className:"w-full max-w-2xl p-4 border rounded-lg shadow-md",children:t?ve.jsx(lU,{}):ve.jsx(PW,{})})]})}export{VW as default};
